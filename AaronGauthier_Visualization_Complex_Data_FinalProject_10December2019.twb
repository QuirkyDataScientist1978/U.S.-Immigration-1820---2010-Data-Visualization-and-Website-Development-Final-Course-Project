<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.1016.2059                               -->
<workbook original-version='18.1' source-build='2018.3.12 (20183.19.1016.2059)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='AaronGauthier_Visualization_Complex_Data_FinalProject_10December2019' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='global-primary-energy' inline='true' name='federated.1o906ru1wf61uq1aigmbl1b9ts41' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global-primary-energy' name='textscan.0zvswqr0s4i1ie14b0wer0mrnd9x'>
            <connection class='textscan' directory='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December' filename='global-primary-energy.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0zvswqr0s4i1ie14b0wer0mrnd9x' name='global-primary-energy.csv' table='[global-primary-energy#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='Coal (terawatt-hours)' ordinal='3' />
            <column datatype='real' name='Solar (terawatt-hours)' ordinal='4' />
            <column datatype='real' name='Crude oil (terawatt-hours)' ordinal='5' />
            <column datatype='real' name='Natural gas (terawatt-hours)' ordinal='6' />
            <column datatype='real' name='Traditional biofuels (terawatt-hours)' ordinal='7' />
            <column datatype='real' name='Other renewables (terawatt-hours)' ordinal='8' />
            <column datatype='real' name='Hydropower (terawatt-hours)' ordinal='9' />
            <column datatype='real' name='Nuclear (terawatt-hours)' ordinal='10' />
            <column datatype='real' name='Wind (terawatt-hours)' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coal (terawatt-hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Coal (terawatt-hours)]</local-name>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias>Coal (terawatt-hours)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Solar (terawatt-hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Solar (terawatt-hours)]</local-name>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias>Solar (terawatt-hours)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crude oil (terawatt-hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Crude oil (terawatt-hours)]</local-name>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias>Crude oil (terawatt-hours)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Natural gas (terawatt-hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Natural gas (terawatt-hours)]</local-name>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias>Natural gas (terawatt-hours)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Traditional biofuels (terawatt-hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Traditional biofuels (terawatt-hours)]</local-name>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias>Traditional biofuels (terawatt-hours)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other renewables (terawatt-hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other renewables (terawatt-hours)]</local-name>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias>Other renewables (terawatt-hours)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hydropower (terawatt-hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hydropower (terawatt-hours)]</local-name>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias>Hydropower (terawatt-hours)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nuclear (terawatt-hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Nuclear (terawatt-hours)]</local-name>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias>Nuclear (terawatt-hours)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind (terawatt-hours)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind (terawatt-hours)]</local-name>
            <parent-name>[global-primary-energy.csv]</parent-name>
            <remote-alias>Wind (terawatt-hours)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='real' name='[Coal (terawatt-hours)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Code]' role='dimension' type='nominal' />
      <column datatype='real' name='[Crude oil (terawatt-hours)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='real' name='[Hydropower (terawatt-hours)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Natural gas (terawatt-hours)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Nuclear (terawatt-hours)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Other renewables (terawatt-hours)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Solar (terawatt-hours)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Traditional biofuels (terawatt-hours)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Wind (terawatt-hours)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Coal (terawatt-hours)]' derivation='Sum' name='[sum:Coal (terawatt-hours):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Crude oil (terawatt-hours)]' derivation='Sum' name='[sum:Crude oil (terawatt-hours):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hydropower (terawatt-hours)]' derivation='Sum' name='[sum:Hydropower (terawatt-hours):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Natural gas (terawatt-hours)]' derivation='Sum' name='[sum:Natural gas (terawatt-hours):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nuclear (terawatt-hours)]' derivation='Sum' name='[sum:Nuclear (terawatt-hours):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other renewables (terawatt-hours)]' derivation='Sum' name='[sum:Other renewables (terawatt-hours):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar (terawatt-hours)]' derivation='Sum' name='[sum:Solar (terawatt-hours):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Traditional biofuels (terawatt-hours)]' derivation='Sum' name='[sum:Traditional biofuels (terawatt-hours):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wind (terawatt-hours)]' derivation='Sum' name='[sum:Wind (terawatt-hours):qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December/global-primary-energy.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/10/2019 10:08:43 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='70' timestamp-start='2019-12-10 10:08:43.866' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>0</ordinal>
              <family>global-primary-energy.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>global-primary-energy.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>2</ordinal>
              <family>global-primary-energy.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>70</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Coal (terawatt-hours)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Coal (terawatt-hours)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Coal (terawatt-hours)</remote-alias>
              <ordinal>3</ordinal>
              <family>global-primary-energy.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>70</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Solar (terawatt-hours)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Solar (terawatt-hours)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Solar (terawatt-hours)</remote-alias>
              <ordinal>4</ordinal>
              <family>global-primary-energy.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Crude oil (terawatt-hours)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Crude oil (terawatt-hours)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Crude oil (terawatt-hours)</remote-alias>
              <ordinal>5</ordinal>
              <family>global-primary-energy.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Natural gas (terawatt-hours)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Natural gas (terawatt-hours)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Natural gas (terawatt-hours)</remote-alias>
              <ordinal>6</ordinal>
              <family>global-primary-energy.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Traditional biofuels (terawatt-hours)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Traditional biofuels (terawatt-hours)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Traditional biofuels (terawatt-hours)</remote-alias>
              <ordinal>7</ordinal>
              <family>global-primary-energy.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Other renewables (terawatt-hours)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Other renewables (terawatt-hours)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Other renewables (terawatt-hours)</remote-alias>
              <ordinal>8</ordinal>
              <family>global-primary-energy.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hydropower (terawatt-hours)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hydropower (terawatt-hours)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hydropower (terawatt-hours)</remote-alias>
              <ordinal>9</ordinal>
              <family>global-primary-energy.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Nuclear (terawatt-hours)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Nuclear (terawatt-hours)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Nuclear (terawatt-hours)</remote-alias>
              <ordinal>10</ordinal>
              <family>global-primary-energy.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wind (terawatt-hours)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Wind (terawatt-hours)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wind (terawatt-hours)</remote-alias>
              <ordinal>11</ordinal>
              <family>global-primary-energy.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>12</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[Coal (terawatt-hours)]' included-values='in-range'>
          <min>97.222300000000004</min>
          <max>44953.013850000003</max>
        </filter>
        <filter class='categorical' column='[Code]'>
          <groupfilter function='member' level='[Code]' member='&quot;OWID_WRL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[Crude oil (terawatt-hours)]' included-values='in-range'>
          <min>0.0</min>
          <max>53752.276380000003</max>
        </filter>
        <filter class='categorical' column='[Entity]'>
          <groupfilter function='member' level='[Entity]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[Hydropower (terawatt-hours)]' included-values='in-range'>
          <min>0.0</min>
          <max>4059.8683930000002</max>
        </filter>
        <filter class='quantitative' column='[Natural gas (terawatt-hours)]' included-values='in-range'>
          <min>0.0</min>
          <max>36703.96587</max>
        </filter>
        <filter class='quantitative' column='[Nuclear (terawatt-hours)]' included-values='in-range'>
          <min>0.0</min>
          <max>2803.6050879999998</max>
        </filter>
        <filter class='quantitative' column='[Other renewables (terawatt-hours)]' included-values='in-range'>
          <min>0.0</min>
          <max>586.17109010000001</max>
        </filter>
        <filter class='quantitative' column='[Solar (terawatt-hours)]' included-values='in-range'>
          <min>0.0</min>
          <max>442.61836060000002</max>
        </filter>
        <filter class='quantitative' column='[Traditional biofuels (terawatt-hours)]' included-values='in-range'>
          <min>5555.5555560000003</min>
          <max>12500.0</max>
        </filter>
        <filter class='quantitative' column='[Wind (terawatt-hours)]' included-values='in-range'>
          <min>0.0</min>
          <max>1122.74585</max>
        </filter>
        <filter class='quantitative' column='[Year]' included-values='in-range'>
          <min>1800</min>
          <max>2017</max>
        </filter>
        <aggregation column='[Coal (terawatt-hours)]' derivation='Sum' />
        <aggregation column='[Code]' derivation='None' />
        <aggregation column='[Crude oil (terawatt-hours)]' derivation='Sum' />
        <aggregation column='[Entity]' derivation='None' />
        <aggregation column='[Hydropower (terawatt-hours)]' derivation='Sum' />
        <aggregation column='[Natural gas (terawatt-hours)]' derivation='Sum' />
        <aggregation column='[Nuclear (terawatt-hours)]' derivation='Sum' />
        <aggregation column='[Number of Records]' derivation='Sum' />
        <aggregation column='[Other renewables (terawatt-hours)]' derivation='Sum' />
        <aggregation column='[Solar (terawatt-hours)]' derivation='Sum' />
        <aggregation column='[Traditional biofuels (terawatt-hours)]' derivation='Sum' />
        <aggregation column='[Wind (terawatt-hours)]' derivation='Sum' />
        <aggregation column='[Year]' derivation='None' />
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.397775' measure-ordering='alphabetic' measure-percentage='0.602225' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Coal (terawatt-hours):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Nuclear (terawatt-hours):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Natural gas (terawatt-hours):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Wind (terawatt-hours):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Solar (terawatt-hours):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Hydropower (terawatt-hours):qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Other renewables (terawatt-hours):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Crude oil (terawatt-hours):qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Traditional biofuels (terawatt-hours):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='quantitative' column='[Coal (terawatt-hours)]' filter-group='2' included-values='in-range'>
        <min>97.222300000000004</min>
        <max>44953.013850000003</max>
      </filter>
      <filter class='categorical' column='[Code]' filter-group='2'>
        <groupfilter function='member' level='[Code]' member='&quot;OWID_WRL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[Crude oil (terawatt-hours)]' filter-group='2' included-values='in-range'>
        <min>0.0</min>
        <max>53752.276380000003</max>
      </filter>
      <filter class='categorical' column='[Entity]' filter-group='2'>
        <groupfilter function='member' level='[Entity]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[Hydropower (terawatt-hours)]' filter-group='2' included-values='in-range'>
        <min>0.0</min>
        <max>4059.8683930000002</max>
      </filter>
      <filter class='quantitative' column='[Natural gas (terawatt-hours)]' filter-group='2' included-values='in-range'>
        <min>0.0</min>
        <max>36703.96587</max>
      </filter>
      <filter class='quantitative' column='[Nuclear (terawatt-hours)]' filter-group='2' included-values='in-range'>
        <min>0.0</min>
        <max>2803.6050879999998</max>
      </filter>
      <filter class='quantitative' column='[Other renewables (terawatt-hours)]' filter-group='2' included-values='in-range'>
        <min>0.0</min>
        <max>586.17109010000001</max>
      </filter>
      <filter class='quantitative' column='[Solar (terawatt-hours)]' filter-group='2' included-values='in-range'>
        <min>0.0</min>
        <max>442.61836060000002</max>
      </filter>
      <filter class='quantitative' column='[Traditional biofuels (terawatt-hours)]' filter-group='2' included-values='in-range'>
        <min>5555.5555560000003</min>
        <max>12500.0</max>
      </filter>
      <filter class='quantitative' column='[Wind (terawatt-hours)]' filter-group='2' included-values='in-range'>
        <min>0.0</min>
        <max>1122.74585</max>
      </filter>
      <filter class='quantitative' column='[Year]' filter-group='2' included-values='in-range'>
        <min>1800</min>
        <max>2017</max>
      </filter>
    </datasource>
    <datasource caption='global-child-mortality-timeseries' inline='true' name='federated.1wcqi4m0ngiz4z18aq9321gn74e2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global-child-mortality-timeseries' name='textscan.1dhvbwp1vlh1pa1gzglx71nj3i8t'>
            <connection class='textscan' directory='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December' filename='global-child-mortality-timeseries.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1dhvbwp1vlh1pa1gzglx71nj3i8t' name='global-child-mortality-timeseries.csv' table='[global-child-mortality-timeseries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='Share surviving first 5 years of life (%)' ordinal='3' />
            <column datatype='real' name='Share dying in first 5 years (%)' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[global-child-mortality-timeseries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[global-child-mortality-timeseries.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[global-child-mortality-timeseries.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[global-child-mortality-timeseries.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Share surviving first 5 years of life (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Share surviving first 5 years of life (%)]</local-name>
            <parent-name>[global-child-mortality-timeseries.csv]</parent-name>
            <remote-alias>Share surviving first 5 years of life (%)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Share dying in first 5 years (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Share dying in first 5 years (%)]</local-name>
            <parent-name>[global-child-mortality-timeseries.csv]</parent-name>
            <remote-alias>Share dying in first 5 years (%)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Code]' role='dimension' type='nominal' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Share dying in first 5 years (%)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Share surviving first 5 years of life (%)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December/global-child-mortality-timeseries.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/10/2019 10:02:07 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='65' timestamp-start='2019-12-10 10:02:07.941' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>0</ordinal>
              <family>global-child-mortality-timeseries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>global-child-mortality-timeseries.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>2</ordinal>
              <family>global-child-mortality-timeseries.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>65</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Share surviving first 5 years of life (%)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Share surviving first 5 years of life (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Share surviving first 5 years of life (%)</remote-alias>
              <ordinal>3</ordinal>
              <family>global-child-mortality-timeseries.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>65</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Share dying in first 5 years (%)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Share dying in first 5 years (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Share dying in first 5 years (%)</remote-alias>
              <ordinal>4</ordinal>
              <family>global-child-mortality-timeseries.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>65</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[Code]'>
          <groupfilter function='member' level='[Code]' member='&quot;OWID_WRL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[Entity]'>
          <groupfilter function='member' level='[Entity]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[Share dying in first 5 years (%)]' included-values='in-range'>
          <min>3.9100000000000001</min>
          <max>43.299999999999997</max>
        </filter>
        <filter class='quantitative' column='[Share surviving first 5 years of life (%)]' included-values='in-range'>
          <min>56.700000000000003</min>
          <max>96.090000000000003</max>
        </filter>
        <filter class='quantitative' column='[Year]' included-values='in-range'>
          <min>1800</min>
          <max>2017</max>
        </filter>
        <aggregation column='[Code]' derivation='None' />
        <aggregation column='[Entity]' derivation='None' />
        <aggregation column='[Number of Records]' derivation='Sum' />
        <aggregation column='[Share dying in first 5 years (%)]' derivation='Sum' />
        <aggregation column='[Share surviving first 5 years of life (%)]' derivation='Sum' />
        <aggregation column='[Year]' derivation='None' />
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.500695' measure-ordering='alphabetic' measure-percentage='0.499305' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Code]' filter-group='2'>
        <groupfilter function='member' level='[Code]' member='&quot;OWID_WRL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[Entity]' filter-group='2'>
        <groupfilter function='member' level='[Entity]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[Share dying in first 5 years (%)]' filter-group='2' included-values='in-range'>
        <min>3.9100000000000001</min>
        <max>43.299999999999997</max>
      </filter>
      <filter class='quantitative' column='[Share surviving first 5 years of life (%)]' filter-group='2' included-values='in-range'>
        <min>56.700000000000003</min>
        <max>96.090000000000003</max>
      </filter>
      <filter class='quantitative' column='[Year]' filter-group='2' included-values='in-range'>
        <min>1800</min>
        <max>2017</max>
      </filter>
    </datasource>
    <datasource caption='Immigrants_N &amp; % (MPI-Data-Hub_Immigrants_N-Percent-US-Population_2017)' inline='true' name='federated.115r5yv0s5msjo1gcwfzm0uz6mry' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MPI-Data-Hub_Immigrants_N-Percent-US-Population_2017' name='excel-direct.1kt6v8g12lxbvu10yjyus17gzhdw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December/MPI-Data-Hub_Immigrants_N-Percent-US-Population_2017.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1kt6v8g12lxbvu10yjyus17gzhdw' name='Immigrants_N &amp; %' table='[&apos;Immigrants_N &amp; %$&apos;]' type='table'>
          <columns gridOrigin='A6:C35:no:A6:C35:0' header='yes' outcome='2'>
            <column datatype='string' name='Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017' ordinal='0' />
            <column datatype='string' name='F2' ordinal='1' />
            <column datatype='string' name='F3' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017]</local-name>
            <parent-name>[Immigrants_N &amp; %]</parent-name>
            <remote-alias>Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F2]</local-name>
            <parent-name>[Immigrants_N &amp; %]</parent-name>
            <remote-alias>F2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[Immigrants_N &amp; %]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Immigrants_N &amp; %]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A6:C35:no:A6:C35:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Number of Immigrants' datatype='string' name='[F2]' role='dimension' type='nominal' />
      <column caption='Immigrants as a Percentage of the U.S. Population (%)' datatype='string' name='[F3]' role='dimension' type='nominal' />
      <column caption='Year\x0;' datatype='string' name='[Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[F2]' derivation='None' name='[none:F2:nk]' pivot='key' type='nominal' />
      <column-instance column='[F3]' derivation='None' name='[none:F3:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December/Immigrants_N &amp; % (MPI-Data-Hub_Immigrants_N-Percent-US-Population_2017).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/10/2019 10:20:44 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='27' timestamp-start='2019-12-10 10:20:44.173' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017</remote-alias>
              <ordinal>0</ordinal>
              <family>Immigrants_N &amp; %</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F2</remote-alias>
              <ordinal>1</ordinal>
              <family>Immigrants_N &amp; %</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F3</remote-alias>
              <ordinal>2</ordinal>
              <family>Immigrants_N &amp; %</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[F2]' filter-group='2'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[F2]' member='%null%' />
            <groupfilter from='&quot;10,341,300&quot;' function='range' level='[F2]' to='&quot;Number of Immigrants&quot;' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[F3]' filter-group='2'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[F3]' member='%null%' />
            <groupfilter from='&quot;11.1&quot;' function='range' level='[F3]' to='&quot;Immigrants as a Percentage of the U.S. Population (\%)&quot;' />
          </groupfilter>
        </filter>
        <filter class='categorical' column='[Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017]' filter-group='2'>
          <groupfilter from='&quot;1850&quot;' function='range' level='[Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017]' to='&quot;Year&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <aggregation column='[F2]' derivation='None' />
        <aggregation column='[F3]' derivation='None' />
        <aggregation column='[Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017]' derivation='None' />
        <aggregation column='[Number of Records]' derivation='Sum' />
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.528133' measure-ordering='alphabetic' measure-percentage='0.471867' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:F3:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;11.6&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4.7&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;7.9&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;13.6&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12.9&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;8.8&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;13.1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5.4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;13.7&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Immigrants as a Percentage of the U.S. Population (\%)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;9.7&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;14.4&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;14.7&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;13.0&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;13.5&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;13.2&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11.1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6.2&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;14.8&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;13.3&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6.9&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:F2:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;10,347,400&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2,244,600&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;42,391,800&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9,249,500&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;14,079,900&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11,594,900&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9,619,300&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Number of Immigrants&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;40,824,700&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4,138,700&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;43,290,400&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;39,955,900&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;9,738,100&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;14,204,100&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19,767,300&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;40,377,900&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;41,348,100&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;13,515,900&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;10,341,300&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;43,739,300&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5,567,200&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;31,107,900&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;13,920,700&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;44,525,900&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6,679,900&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='categorical' column='[F2]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[F2]' member='%null%' />
          <groupfilter from='&quot;10,341,300&quot;' function='range' level='[F2]' to='&quot;Number of Immigrants&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[F3]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[F3]' member='%null%' />
          <groupfilter from='&quot;11.1&quot;' function='range' level='[F3]' to='&quot;Immigrants as a Percentage of the U.S. Population (\%)&quot;' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017]' filter-group='2'>
        <groupfilter from='&quot;1850&quot;' function='range' level='[Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017]' to='&quot;Year&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </datasource>
    <datasource caption='population' inline='true' name='federated.10zoe6k117xz541cxdc5n01m5duz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='population' name='textscan.1v2rqw60e8k1sy11jzmcc0dqqqy3'>
            <connection class='textscan' directory='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December' filename='population.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1v2rqw60e8k1sy11jzmcc0dqqqy3' name='population.csv' table='[population#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='integer' name='Population' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[population.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[population.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[population.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[population.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[population.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Code]' role='dimension' type='nominal' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December/population_country.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/10/2019 11:08:45 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='46081' timestamp-start='2019-12-10 11:08:45.035' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>0</ordinal>
              <family>population.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>345</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>population.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>345</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>2</ordinal>
              <family>population.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>285</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>3</ordinal>
              <family>population.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13784</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[Code]'>
          <groupfilter from='&quot;ABW&quot;' function='range' level='[Code]' to='&quot;ZWE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[Entity]'>
          <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[Entity]' to='&quot;Zimbabwe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[Population]' included-values='in-range'>
          <min>905</min>
          <max>7713467904</max>
        </filter>
        <filter class='quantitative' column='[Year]' included-values='in-range'>
          <min>-10000</min>
          <max>2019</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.514604' measure-ordering='alphabetic' measure-percentage='0.485396' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Entity:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Code]' filter-group='2'>
        <groupfilter from='&quot;ABW&quot;' function='range' level='[Code]' to='&quot;ZWE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[Entity]' filter-group='2'>
        <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[Entity]' to='&quot;Zimbabwe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[Population]' filter-group='2' included-values='in-range'>
        <min>905</min>
        <max>7713467904</max>
      </filter>
      <filter class='quantitative' column='[Year]' filter-group='2' included-values='in-range'>
        <min>-10000</min>
        <max>2019</max>
      </filter>
    </datasource>
    <datasource caption='convertcsv_immigration_data_final_30countries' inline='true' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='convertcsv_immigration_data_final_30countries' name='semistructpassivestore-direct.0xyy4c713kdmd718pm1x40meuyp7'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December' filename='convertcsv_immigration_data_final_30countries.json' password='' server='' workgroup-auth-mode='as-is'>
              <semistruct-schemas>
                <semistruct-schema table='[convertcsv_immigration_data_final_30countries.json]'>
                  <map key='Country ' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0xyy4c713kdmd718pm1x40meuyp7' name='convertcsv_immigration_data_final_30countries.json' table='[convertcsv_immigration_data_final_30countries.json]' type='table' />
        <cols>
          <map key='[ Region Code]' value='[convertcsv_immigration_data_final_30countries.json].[Country . Region Code]' />
          <map key='[ Region]' value='[convertcsv_immigration_data_final_30countries.json].[Country . Region]' />
          <map key='[Document Index (generated)]' value='[convertcsv_immigration_data_final_30countries.json].[Document Index (generated)]' />
          <map key='[Immigration]' value='[convertcsv_immigration_data_final_30countries.json].[Immigration]' />
          <map key='[Life Expectancy]' value='[convertcsv_immigration_data_final_30countries.json].[Life Expectancy]' />
          <map key='[Literacy Rates]' value='[convertcsv_immigration_data_final_30countries.json].[Literacy Rates]' />
          <map key='[Numeracy]' value='[convertcsv_immigration_data_final_30countries.json].[Numeracy]' />
          <map key='[Real GDP]' value='[convertcsv_immigration_data_final_30countries.json].[Real GDP]' />
          <map key='[Year]' value='[convertcsv_immigration_data_final_30countries.json].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[convertcsv_immigration_data_final_30countries.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country . Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ Region]</local-name>
            <parent-name>[convertcsv_immigration_data_final_30countries.json]</parent-name>
            <remote-alias>Country . Region</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country . Region Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ Region Code]</local-name>
            <parent-name>[convertcsv_immigration_data_final_30countries.json]</parent-name>
            <remote-alias>Country . Region Code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Immigration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Immigration]</local-name>
            <parent-name>[convertcsv_immigration_data_final_30countries.json]</parent-name>
            <remote-alias>Immigration</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Expectancy]</local-name>
            <parent-name>[convertcsv_immigration_data_final_30countries.json]</parent-name>
            <remote-alias>Life Expectancy</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Literacy Rates</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Literacy Rates]</local-name>
            <parent-name>[convertcsv_immigration_data_final_30countries.json]</parent-name>
            <remote-alias>Literacy Rates</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Numeracy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Numeracy]</local-name>
            <parent-name>[convertcsv_immigration_data_final_30countries.json]</parent-name>
            <remote-alias>Numeracy</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Real GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Real GDP]</local-name>
            <parent-name>[convertcsv_immigration_data_final_30countries.json]</parent-name>
            <remote-alias>Real GDP</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[convertcsv_immigration_data_final_30countries.json]</parent-name>
            <remote-alias>Year</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Region Code' datatype='string' name='[ Region Code]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Country . Region Code</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>Country . Region</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' name='[Immigration]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Immigration</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Life Expectancy</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' name='[Literacy Rates]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Literacy Rates</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Numeracy]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Numeracy</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Real GDP</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
        <desc>
          <formatted-text>
            <run>Year</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
      <folder name='Convertcsv Immigration Data Final 30Countries' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[Year]' type='field' />
      </folder>
      <folder name='Country' role='dimensions'>
        <folder-item name='[ Region Code]' type='field' />
        <folder-item name='[ Region]' type='field' />
      </folder>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December/Sheet1.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/10/2019 01:27:52 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[ Region Code]' value='[Extract].[Country . Region Code]' />
            <map key='[ Region]' value='[Extract].[Country . Region]' />
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[Immigration]' value='[Extract].[Immigration]' />
            <map key='[Life Expectancy]' value='[Extract].[Life Expectancy]' />
            <map key='[Literacy Rates]' value='[Extract].[Literacy Rates]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Numeracy]' value='[Extract].[Numeracy]' />
            <map key='[Real GDP]' value='[Extract].[Real GDP]' />
            <map key='[Year]' value='[Extract].[Year]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5431' timestamp-start='2019-12-10 01:27:52.664' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>convertcsv_immigration_data_final_30countries.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5431</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country . Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country . Region</remote-alias>
              <ordinal>1</ordinal>
              <family>convertcsv_immigration_data_final_30countries.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country . Region Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ Region Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country . Region Code</remote-alias>
              <ordinal>2</ordinal>
              <family>convertcsv_immigration_data_final_30countries.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>28</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Immigration</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Immigration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Immigration</remote-alias>
              <ordinal>3</ordinal>
              <family>convertcsv_immigration_data_final_30countries.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>543</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life Expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life Expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life Expectancy</remote-alias>
              <ordinal>4</ordinal>
              <family>convertcsv_immigration_data_final_30countries.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1793</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Literacy Rates</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Literacy Rates]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Literacy Rates</remote-alias>
              <ordinal>5</ordinal>
              <family>convertcsv_immigration_data_final_30countries.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>119</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Numeracy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Numeracy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Numeracy</remote-alias>
              <ordinal>6</ordinal>
              <family>convertcsv_immigration_data_final_30countries.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>145</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Real GDP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Real GDP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Real GDP</remote-alias>
              <ordinal>7</ordinal>
              <family>convertcsv_immigration_data_final_30countries.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1863</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>8</ordinal>
              <family>convertcsv_immigration_data_final_30countries.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>196</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>9</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[ Region Code]'>
          <groupfilter function='level-members' level='[ Region Code]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[ Region]'>
          <groupfilter function='level-members' level='[ Region]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[Document Index (generated)]'>
          <groupfilter function='level-members' level='[Document Index (generated)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[Immigration]' included-values='in-range'>
          <min>0.0</min>
          <max>5137142.0</max>
        </filter>
        <filter class='quantitative' column='[Life Expectancy]' included-values='in-range'>
          <min>0.0</min>
          <max>82.530000000000001</max>
        </filter>
        <filter class='quantitative' column='[Literacy Rates]' included-values='in-range'>
          <min>0.0</min>
          <max>100.0</max>
        </filter>
        <filter class='quantitative' column='[Numeracy]' included-values='in-range'>
          <min>0.0</min>
          <max>100.0</max>
        </filter>
        <filter class='quantitative' column='[Real GDP]' included-values='in-range'>
          <min>0.0</min>
          <max>54749.0</max>
        </filter>
        <filter class='quantitative' column='[Year]' included-values='in-range'>
          <min>1820</min>
          <max>2013</max>
        </filter>
        <aggregation column='[ Region Code]' derivation='None' />
        <aggregation column='[ Region]' derivation='None' />
        <aggregation column='[Document Index (generated)]' derivation='None' />
        <aggregation column='[Immigration]' derivation='Sum' />
        <aggregation column='[Life Expectancy]' derivation='Sum' />
        <aggregation column='[Literacy Rates]' derivation='Sum' />
        <aggregation column='[Number of Records]' derivation='Sum' />
        <aggregation column='[Numeracy]' derivation='Sum' />
        <aggregation column='[Real GDP]' derivation='Sum' />
        <aggregation column='[Year]' derivation='None' />
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.500695' measure-ordering='alphabetic' measure-percentage='0.499305' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none: Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria - Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Czechoslovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='categorical' column='[ Region Code]' filter-group='2'>
        <groupfilter function='level-members' level='[ Region Code]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[ Region]' filter-group='2'>
        <groupfilter function='level-members' level='[ Region]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[Document Index (generated)]' filter-group='2'>
        <groupfilter function='level-members' level='[Document Index (generated)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[Immigration]' filter-group='2' included-values='in-range'>
        <min>0.0</min>
        <max>5137142.0</max>
      </filter>
      <filter class='quantitative' column='[Life Expectancy]' filter-group='2' included-values='in-range'>
        <min>0.0</min>
        <max>82.530000000000001</max>
      </filter>
      <filter class='quantitative' column='[Literacy Rates]' filter-group='2' included-values='in-range'>
        <min>0.0</min>
        <max>100.0</max>
      </filter>
      <filter class='quantitative' column='[Numeracy]' filter-group='2' included-values='in-range'>
        <min>0.0</min>
        <max>100.0</max>
      </filter>
      <filter class='quantitative' column='[Real GDP]' filter-group='2' included-values='in-range'>
        <min>0.0</min>
        <max>54749.0</max>
      </filter>
      <filter class='quantitative' column='[Year]' filter-group='2' included-values='in-range'>
        <min>1820</min>
        <max>2013</max>
      </filter>
    </datasource>
    <datasource caption='world-gdp-over-the-last-two-millennia' inline='true' name='federated.10e0ep21a77kgh12sny031k5t42a' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='world-gdp-over-the-last-two-millennia' name='textscan.1im88wi1t313fm134lxa11f12lp3'>
            <connection class='textscan' directory='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December' filename='world-gdp-over-the-last-two-millennia.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1im88wi1t313fm134lxa11f12lp3' name='world-gdp-over-the-last-two-millennia.csv' table='[world-gdp-over-the-last-two-millennia#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='(int.-$)' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[world-gdp-over-the-last-two-millennia.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[world-gdp-over-the-last-two-millennia.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[world-gdp-over-the-last-two-millennia.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[world-gdp-over-the-last-two-millennia.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>(int.-$)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[(int.-$)]</local-name>
            <parent-name>[world-gdp-over-the-last-two-millennia.csv]</parent-name>
            <remote-alias>(int.-$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='(Int.-$)' datatype='real' name='[(int.-$)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Code]' role='dimension' type='nominal' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December/world-gdp-over-the-last-two-millennia.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/10/2019 11:26:35 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='76' timestamp-start='2019-12-10 11:26:35.197' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>0</ordinal>
              <family>world-gdp-over-the-last-two-millennia.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>world-gdp-over-the-last-two-millennia.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>2</ordinal>
              <family>world-gdp-over-the-last-two-millennia.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>(int.-$)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[(int.-$)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>(int.-$)</remote-alias>
              <ordinal>3</ordinal>
              <family>world-gdp-over-the-last-two-millennia.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[(int.-$)]' included-values='in-range'>
          <min>182741034741.64999</min>
          <max>108120000000000.0</max>
        </filter>
        <filter class='categorical' column='[Code]'>
          <groupfilter function='member' level='[Code]' member='&quot;OWID_WRL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[Entity]'>
          <groupfilter function='member' level='[Entity]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[Year]' included-values='in-range'>
          <min>1</min>
          <max>2015</max>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.514604' measure-ordering='alphabetic' measure-percentage='0.485396' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='quantitative' column='[(int.-$)]' filter-group='2' included-values='in-range'>
        <min>182741034741.64999</min>
        <max>108120000000000.0</max>
      </filter>
      <filter class='categorical' column='[Code]' filter-group='2'>
        <groupfilter function='member' level='[Code]' member='&quot;OWID_WRL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[Entity]' filter-group='2'>
        <groupfilter function='member' level='[Entity]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[Year]' filter-group='2' included-values='in-range'>
        <min>1</min>
        <max>2015</max>
      </filter>
    </datasource>
    <datasource caption='world-population-in-extreme-poverty-absolute' inline='true' name='federated.0wup1qk0ijaz4r18dkef812cxa2r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='world-population-in-extreme-poverty-absolute' name='textscan.1fcg1dv0g7vtgm1aran901qtfv9n'>
            <connection class='textscan' directory='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December' filename='world-population-in-extreme-poverty-absolute.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1fcg1dv0g7vtgm1aran901qtfv9n' name='world-population-in-extreme-poverty-absolute.csv' table='[world-population-in-extreme-poverty-absolute#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='real' name='Number of people not in extreme poverty (people)' ordinal='3' />
            <column datatype='real' name='Number of people living in extreme poverty (people)' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[world-population-in-extreme-poverty-absolute.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[world-population-in-extreme-poverty-absolute.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[world-population-in-extreme-poverty-absolute.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[world-population-in-extreme-poverty-absolute.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of people not in extreme poverty (people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of people not in extreme poverty (people)]</local-name>
            <parent-name>[world-population-in-extreme-poverty-absolute.csv]</parent-name>
            <remote-alias>Number of people not in extreme poverty (people)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of people living in extreme poverty (people)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of people living in extreme poverty (people)]</local-name>
            <parent-name>[world-population-in-extreme-poverty-absolute.csv]</parent-name>
            <remote-alias>Number of people living in extreme poverty (people)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Code]' role='dimension' type='nominal' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Number of people living in extreme poverty (people)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Number of people not in extreme poverty (people)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December/world-population-in-extreme-poverty-absolute.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/10/2019 11:36:23 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='25' timestamp-start='2019-12-10 11:36:23.720' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>0</ordinal>
              <family>world-population-in-extreme-poverty-absolute.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>world-population-in-extreme-poverty-absolute.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>2</ordinal>
              <family>world-population-in-extreme-poverty-absolute.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of people not in extreme poverty (people)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Number of people not in extreme poverty (people)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of people not in extreme poverty (people)</remote-alias>
              <ordinal>3</ordinal>
              <family>world-population-in-extreme-poverty-absolute.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of people living in extreme poverty (people)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Number of people living in extreme poverty (people)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of people living in extreme poverty (people)</remote-alias>
              <ordinal>4</ordinal>
              <family>world-population-in-extreme-poverty-absolute.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[Code]'>
          <groupfilter function='member' level='[Code]' member='&quot;OWID_WRL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[Entity]'>
          <groupfilter function='member' level='[Entity]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[Number of people living in extreme poverty (people)]' included-values='in-range'>
          <min>733477315.5</min>
          <max>1920141041.0</max>
        </filter>
        <filter class='quantitative' column='[Number of people not in extreme poverty (people)]' included-values='in-range'>
          <min>117436202.09999999</min>
          <max>6615994784.0</max>
        </filter>
        <filter class='quantitative' column='[Year]' included-values='in-range'>
          <min>1820</min>
          <max>2015</max>
        </filter>
        <aggregation column='[Code]' derivation='None' />
        <aggregation column='[Entity]' derivation='None' />
        <aggregation column='[Number of Records]' derivation='Sum' />
        <aggregation column='[Number of people living in extreme poverty (people)]' derivation='Sum' />
        <aggregation column='[Number of people not in extreme poverty (people)]' derivation='Sum' />
        <aggregation column='[Year]' derivation='None' />
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.500695' measure-ordering='alphabetic' measure-percentage='0.499305' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Code]' filter-group='2'>
        <groupfilter function='member' level='[Code]' member='&quot;OWID_WRL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[Entity]' filter-group='2'>
        <groupfilter function='member' level='[Entity]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[Number of people living in extreme poverty (people)]' filter-group='2' included-values='in-range'>
        <min>733477315.5</min>
        <max>1920141041.0</max>
      </filter>
      <filter class='quantitative' column='[Number of people not in extreme poverty (people)]' filter-group='2' included-values='in-range'>
        <min>117436202.09999999</min>
        <max>6615994784.0</max>
      </filter>
      <filter class='quantitative' column='[Year]' filter-group='2' included-values='in-range'>
        <min>1820</min>
        <max>2015</max>
      </filter>
    </datasource>
    <datasource caption='world-pop-by-political-regime' inline='true' name='federated.14ibpwt1wtkdso18rm3k00veqiuh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='world-pop-by-political-regime' name='textscan.1ye5yte018c2rs1c1tqd80zblxrx'>
            <connection class='textscan' directory='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December' filename='world-pop-by-political-regime.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1ye5yte018c2rs1c1tqd80zblxrx' name='world-pop-by-political-regime.csv' table='[world-pop-by-political-regime#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='integer' name='Country in Transition or No Data (People)' ordinal='3' />
            <column datatype='integer' name='Population in Colony (People)' ordinal='4' />
            <column datatype='integer' name='Population in Autocracy (People)' ordinal='5' />
            <column datatype='integer' name='Population in Closed Anocracy (People)' ordinal='6' />
            <column datatype='integer' name='Population in Open Anocracy (People)' ordinal='7' />
            <column datatype='integer' name='Population in Democracy (People)' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[world-pop-by-political-regime.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[world-pop-by-political-regime.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[world-pop-by-political-regime.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[world-pop-by-political-regime.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country in Transition or No Data (People)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Country in Transition or No Data (People)]</local-name>
            <parent-name>[world-pop-by-political-regime.csv]</parent-name>
            <remote-alias>Country in Transition or No Data (People)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population in Colony (People)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population in Colony (People)]</local-name>
            <parent-name>[world-pop-by-political-regime.csv]</parent-name>
            <remote-alias>Population in Colony (People)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population in Autocracy (People)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population in Autocracy (People)]</local-name>
            <parent-name>[world-pop-by-political-regime.csv]</parent-name>
            <remote-alias>Population in Autocracy (People)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population in Closed Anocracy (People)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population in Closed Anocracy (People)]</local-name>
            <parent-name>[world-pop-by-political-regime.csv]</parent-name>
            <remote-alias>Population in Closed Anocracy (People)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population in Open Anocracy (People)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population in Open Anocracy (People)]</local-name>
            <parent-name>[world-pop-by-political-regime.csv]</parent-name>
            <remote-alias>Population in Open Anocracy (People)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population in Democracy (People)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population in Democracy (People)]</local-name>
            <parent-name>[world-pop-by-political-regime.csv]</parent-name>
            <remote-alias>Population in Democracy (People)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Code]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Country in Transition or No Data (People)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Population in Autocracy (People)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population in Closed Anocracy (People)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population in Colony (People)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population in Democracy (People)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Population in Open Anocracy (People)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/AaronDataScienceComp/Desktop/Immigration Data December/world-pop-by-political-regime.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/10/2019 11:28:31 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='200' timestamp-start='2019-12-10 11:28:31.428' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>0</ordinal>
              <family>world-pop-by-political-regime.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>world-pop-by-political-regime.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>2</ordinal>
              <family>world-pop-by-political-regime.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>200</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country in Transition or No Data (People)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Country in Transition or No Data (People)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country in Transition or No Data (People)</remote-alias>
              <ordinal>3</ordinal>
              <family>world-pop-by-political-regime.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>200</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population in Colony (People)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population in Colony (People)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population in Colony (People)</remote-alias>
              <ordinal>4</ordinal>
              <family>world-pop-by-political-regime.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>178</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population in Autocracy (People)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population in Autocracy (People)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population in Autocracy (People)</remote-alias>
              <ordinal>5</ordinal>
              <family>world-pop-by-political-regime.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>200</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population in Closed Anocracy (People)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population in Closed Anocracy (People)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population in Closed Anocracy (People)</remote-alias>
              <ordinal>6</ordinal>
              <family>world-pop-by-political-regime.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>200</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population in Open Anocracy (People)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population in Open Anocracy (People)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population in Open Anocracy (People)</remote-alias>
              <ordinal>7</ordinal>
              <family>world-pop-by-political-regime.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population in Democracy (People)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population in Democracy (People)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population in Democracy (People)</remote-alias>
              <ordinal>8</ordinal>
              <family>world-pop-by-political-regime.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>200</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>9</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[Code]'>
          <groupfilter function='member' level='[Code]' member='&quot;OWID_WRL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[Country in Transition or No Data (People)]' included-values='in-range'>
          <min>36695200</min>
          <max>353111840</max>
        </filter>
        <filter class='categorical' column='[Entity]'>
          <groupfilter function='member' level='[Entity]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[Population in Autocracy (People)]' included-values='in-range'>
          <min>26461909</min>
          <max>2236282007</max>
        </filter>
        <filter class='quantitative' column='[Population in Closed Anocracy (People)]' included-values='in-range'>
          <min>42357150</min>
          <max>770940635</max>
        </filter>
        <filter class='quantitative' column='[Population in Colony (People)]' included-values='in-range'>
          <min>0</min>
          <max>772157197</max>
        </filter>
        <filter class='quantitative' column='[Population in Democracy (People)]' included-values='in-range'>
          <min>9243738</min>
          <max>4101291986</max>
        </filter>
        <filter class='quantitative' column='[Population in Open Anocracy (People)]' included-values='in-range'>
          <min>0</min>
          <max>933020422</max>
        </filter>
        <filter class='quantitative' column='[Year]' included-values='in-range'>
          <min>1816</min>
          <max>2015</max>
        </filter>
        <aggregation column='[Code]' derivation='None' />
        <aggregation column='[Country in Transition or No Data (People)]' derivation='Sum' />
        <aggregation column='[Entity]' derivation='None' />
        <aggregation column='[Number of Records]' derivation='Sum' />
        <aggregation column='[Population in Autocracy (People)]' derivation='Sum' />
        <aggregation column='[Population in Closed Anocracy (People)]' derivation='Sum' />
        <aggregation column='[Population in Colony (People)]' derivation='Sum' />
        <aggregation column='[Population in Democracy (People)]' derivation='Sum' />
        <aggregation column='[Population in Open Anocracy (People)]' derivation='Sum' />
        <aggregation column='[Year]' derivation='None' />
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.44089' measure-ordering='alphabetic' measure-percentage='0.55911' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='categorical' column='[Code]' filter-group='2'>
        <groupfilter function='member' level='[Code]' member='&quot;OWID_WRL&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[Country in Transition or No Data (People)]' filter-group='2' included-values='in-range'>
        <min>36695200</min>
        <max>353111840</max>
      </filter>
      <filter class='categorical' column='[Entity]' filter-group='2'>
        <groupfilter function='member' level='[Entity]' member='&quot;World&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[Population in Autocracy (People)]' filter-group='2' included-values='in-range'>
        <min>26461909</min>
        <max>2236282007</max>
      </filter>
      <filter class='quantitative' column='[Population in Closed Anocracy (People)]' filter-group='2' included-values='in-range'>
        <min>42357150</min>
        <max>770940635</max>
      </filter>
      <filter class='quantitative' column='[Population in Colony (People)]' filter-group='2' included-values='in-range'>
        <min>0</min>
        <max>772157197</max>
      </filter>
      <filter class='quantitative' column='[Population in Democracy (People)]' filter-group='2' included-values='in-range'>
        <min>9243738</min>
        <max>4101291986</max>
      </filter>
      <filter class='quantitative' column='[Population in Open Anocracy (People)]' filter-group='2' included-values='in-range'>
        <min>0</min>
        <max>933020422</max>
      </filter>
      <filter class='quantitative' column='[Year]' filter-group='2' included-values='in-range'>
        <min>1816</min>
        <max>2015</max>
      </filter>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Country vs. Life Expectancy'>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Life Expectancy</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]' scope='cols' value=' Life Expectancy in Years' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]</cols>
        <pages>
          <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Country vs. Real GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' direction='ASC' />
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='cols' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</cols>
        <pages>
          <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Country vs. Real GDP 1820-1870'>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>1870</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='cols' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</cols>
        <pages>
          <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Country vs. Real GDP 1870-1920'>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1870</min>
            <max>1920</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='cols' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</cols>
        <pages>
          <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Country vs. Real GDP 1920-1970'>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1920</min>
            <max>1970</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='cols' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</cols>
        <pages>
          <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Country vs. Real GDP 1970-2010'>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1970</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='cols' value='Percapita Real GDP in U.S. Dollars (Baseline 2011)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</cols>
        <pages>
          <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Entire World Population Data'>
      <table>
        <view>
          <datasources>
            <datasource caption='population' name='federated.10zoe6k117xz541cxdc5n01m5duz' />
          </datasources>
          <datasource-dependencies datasource='federated.10zoe6k117xz541cxdc5n01m5duz'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]'>
            <groupfilter function='member' level='[none:Entity:nk]' member='&quot;World&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]' included-values='in-range'>
            <min>-10000</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</column>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]' scope='rows' value='Population (Millions)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <lod column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <text column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]</rows>
        <cols>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='GDP vs. LE'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;U.S. Immigration: Percapita Real GDP vs. Life Expectancy&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Life Expectancy</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]'>
            <groupfilter from='1820' function='range' level='[none:Year:ok]' to='2010' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='rows' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]' scope='cols' value='Life Expectancy in Years' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <size column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]</cols>
        <pages>
          <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='GDP vs. Literacy'>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Literacy Rates]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Literacy Rates</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Literacy Rates]' derivation='Sum' name='[sum:Literacy Rates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]'>
            <groupfilter from='1820' function='range' level='[none:Year:ok]' to='2010' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='rows' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Literacy Rates:qk]' scope='cols' value='Literacy Rates (Percentage)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <size column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Literacy Rates:qk]</cols>
        <pages>
          <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='GDP vs. Numeracy'>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Numeracy]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Numeracy</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Numeracy]' derivation='Sum' name='[sum:Numeracy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]'>
            <groupfilter from='1820' function='range' level='[none:Year:ok]' to='2010' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <size column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Numeracy:qk]</cols>
        <pages>
          <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Immigration 1820-1870'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;U.S. Immigration 1820 - 1870&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Immigration]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Immigration</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Immigration]' derivation='Sum' name='[sum:Immigration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Australia&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>1870</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Immigration:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Immigration 1870-1920'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;U.S. Immigration 1870 - 1920&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Immigration]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Immigration</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Immigration]' derivation='Sum' name='[sum:Immigration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Australia&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1870</min>
            <max>1920</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Immigration:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Immigration 1920-1970'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;U.S. Immigration 1920 - 1970&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Immigration]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Immigration</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Immigration]' derivation='Sum' name='[sum:Immigration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1920</min>
            <max>1970</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Immigration:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Immigration 1970-2013'>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Immigration]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Immigration</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Immigration]' derivation='Sum' name='[sum:Immigration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1970</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Immigration:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Immigration vs. Real GDP'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;U.S. Immigration vs. Percapita Real GDP&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Immigration]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Immigration</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Immigration]' derivation='Sum' name='[sum:Immigration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='cols' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Immigration:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</cols>
        <pages>
          <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Immigration vs. Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;U.S. Immigration from 1820 - 2013&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Immigration]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Immigration</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Immigration]' derivation='Sum' name='[sum:Immigration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Australia&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Immigration:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Life Expectancy vs. Year by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Life Expectancy vs. Year by Country from 1820 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Life Expectancy</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;America&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]' scope='rows' value='Life Expectancy in Years' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Life Expectancy vs. Year by Country 1820-1870'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Life Expectancy vs. Year by Country from 1820 - 1870&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Life Expectancy</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>1870</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]' scope='rows' value='Life Expectancy in Years' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Life Expectancy vs. Year by Country 1870-1920'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Life Expectancy vs. Year by Country from 1870 - 1920&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Life Expectancy</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1870</min>
            <max>1920</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]' scope='rows' value='Life Expectancy in Years' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Life Expectancy vs. Year by Country 1920-1970'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Life Expectancy vs. Year by Country from 1920 - 1970&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Life Expectancy</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1920</min>
            <max>1970</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]' scope='rows' value='Life Expectancy in Years' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Life Expectancy vs. Year by Country 1970-2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Life Expectancy vs. Year by Country from 1970 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Life Expectancy</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1970</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]' scope='rows' value='Life Expectancy in Years' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Life Expectancy vs. Year by Region 1820-2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Life Expectancy vs. Year by Region from 1820 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Life Expectancy</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;America&quot;' />
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Australia&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]' scope='rows' value='Life Expectancy in Years' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Population by Country 1820 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population' name='federated.10zoe6k117xz541cxdc5n01m5duz' />
          </datasources>
          <datasource-dependencies datasource='federated.10zoe6k117xz541cxdc5n01m5duz'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</column>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]' scope='rows' value='Population (Millions)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <lod column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <text column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]</rows>
        <cols>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population by Country 1820-1870'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Population by Country 1820 - 1870&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population' name='federated.10zoe6k117xz541cxdc5n01m5duz' />
          </datasources>
          <datasource-dependencies datasource='federated.10zoe6k117xz541cxdc5n01m5duz'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>1870</max>
          </filter>
          <slices>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</column>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]' scope='rows' value='Population (Millions)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <lod column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <text column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]</rows>
        <cols>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population by Country 1870-1920'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Population by Country 1870 - 1920&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population' name='federated.10zoe6k117xz541cxdc5n01m5duz' />
          </datasources>
          <datasource-dependencies datasource='federated.10zoe6k117xz541cxdc5n01m5duz'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]' included-values='in-range'>
            <min>1870</min>
            <max>1920</max>
          </filter>
          <slices>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</column>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]' scope='rows' value='Population (Millions)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <lod column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <text column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]</rows>
        <cols>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population by Country 1920-1970'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Population by Country 1920 - 1970&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population' name='federated.10zoe6k117xz541cxdc5n01m5duz' />
          </datasources>
          <datasource-dependencies datasource='federated.10zoe6k117xz541cxdc5n01m5duz'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]' included-values='in-range'>
            <min>1920</min>
            <max>1970</max>
          </filter>
          <slices>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</column>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]' scope='rows' value='Population (Millions)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <lod column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <text column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]</rows>
        <cols>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population by Country 1970-2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Population by Country 1970 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population' name='federated.10zoe6k117xz541cxdc5n01m5duz' />
          </datasources>
          <datasource-dependencies datasource='federated.10zoe6k117xz541cxdc5n01m5duz'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]' included-values='in-range'>
            <min>1970</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</column>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]' scope='rows' value='Population (Millions)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <lod column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <text column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]</rows>
        <cols>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Real GDP vs. Year by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Percapital Real GDP vs. Year by Country from 1820 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='rows' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Real GDP vs. Year by Country 1820-1870'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Percapital Real GDP vs. Year by Country from 1820 - 1870&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>1870</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='rows' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Real GDP vs. Year by Country 1870-1920'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Percapital Real GDP vs. Year by Country from 1870 - 1920&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1870</min>
            <max>1920</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='rows' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Real GDP vs. Year by Country 1920-1970'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Percapital Real GDP vs. Year by Country from 1920 - 1970&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1920</min>
            <max>1970</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='rows' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Real GDP vs. Year by Country 1970-2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Percapital Real GDP vs. Year by Country from 1970 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Argentina&quot;' />
              <groupfilter from='&quot;Austria&quot;' function='range' level='[none: Region:nk]' to='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1970</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='rows' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Real GDP vs. Year by Region 1820-2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Percapital Real GDP vs. Year by Region from 1820 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Real GDP]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Real GDP</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Real GDP]' derivation='Sum' name='[sum:Real GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;America&quot;' />
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Australia&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]' scope='rows' value='Percapita Real GDP in U.S. Dollars $ (Baseline 2011)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Region vs. Life Expectancy'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Region vs. Life Expectancy 1820-2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='convertcsv_immigration_data_final_30countries' name='federated.1x97k150zpqwdt12tg4fa0dx8fau' />
          </datasources>
          <datasource-dependencies datasource='federated.1x97k150zpqwdt12tg4fa0dx8fau'>
            <column caption='Region' datatype='string' name='[ Region]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>Country . Region</run>
                </formatted-text>
              </desc>
            </column>
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Life Expectancy</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Sum' datatype='integer' datatype-customized='true' name='[Year]' role='dimension' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>Year</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[ Region]' derivation='None' name='[none: Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;America&quot;' />
              <groupfilter function='member' level='[none: Region:nk]' member='&quot;Australia&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</column>
            <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]' scope='cols' value='Life Expectancy in Years' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <lod column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
              <text column='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</rows>
        <cols>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]</cols>
        <pages>
          <column>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='World Child Mortality by Year 1820-2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;World Chold Mortality Rates by Year 1820-2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global-child-mortality-timeseries' name='federated.1wcqi4m0ngiz4z18aq9321gn74e2' />
          </datasources>
          <datasource-dependencies datasource='federated.1wcqi4m0ngiz4z18aq9321gn74e2'>
            <column datatype='real' name='[Share dying in first 5 years (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Share surviving first 5 years of life (%)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Share dying in first 5 years (%)]' derivation='Sum' name='[sum:Share dying in first 5 years (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Share surviving first 5 years of life (%)]' derivation='Sum' name='[sum:Share surviving first 5 years of life (%):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1wcqi4m0ngiz4z18aq9321gn74e2].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1wcqi4m0ngiz4z18aq9321gn74e2].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wcqi4m0ngiz4z18aq9321gn74e2].[sum:Share dying in first 5 years (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wcqi4m0ngiz4z18aq9321gn74e2].[sum:Share surviving first 5 years of life (%):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1wcqi4m0ngiz4z18aq9321gn74e2].[sum:Share dying in first 5 years (%):qk] + [federated.1wcqi4m0ngiz4z18aq9321gn74e2].[sum:Share surviving first 5 years of life (%):qk])</rows>
        <cols>[federated.1wcqi4m0ngiz4z18aq9321gn74e2].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='World Energy Consumption'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;World Energy Consumption 1820 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='global-primary-energy' name='federated.1o906ru1wf61uq1aigmbl1b9ts41' />
          </datasources>
          <datasource-dependencies datasource='federated.1o906ru1wf61uq1aigmbl1b9ts41'>
            <column datatype='real' name='[Coal (terawatt-hours)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Crude oil (terawatt-hours)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hydropower (terawatt-hours)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Natural gas (terawatt-hours)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Nuclear (terawatt-hours)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Other renewables (terawatt-hours)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Solar (terawatt-hours)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Traditional biofuels (terawatt-hours)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Wind (terawatt-hours)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coal (terawatt-hours)]' derivation='Sum' name='[sum:Coal (terawatt-hours):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Crude oil (terawatt-hours)]' derivation='Sum' name='[sum:Crude oil (terawatt-hours):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hydropower (terawatt-hours)]' derivation='Sum' name='[sum:Hydropower (terawatt-hours):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Natural gas (terawatt-hours)]' derivation='Sum' name='[sum:Natural gas (terawatt-hours):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nuclear (terawatt-hours)]' derivation='Sum' name='[sum:Nuclear (terawatt-hours):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Other renewables (terawatt-hours)]' derivation='Sum' name='[sum:Other renewables (terawatt-hours):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Solar (terawatt-hours)]' derivation='Sum' name='[sum:Solar (terawatt-hours):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Traditional biofuels (terawatt-hours)]' derivation='Sum' name='[sum:Traditional biofuels (terawatt-hours):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wind (terawatt-hours)]' derivation='Sum' name='[sum:Wind (terawatt-hours):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.1o906ru1wf61uq1aigmbl1b9ts41].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <lod column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <text column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='221' />
                <format attr='maxheight' value='221' />
                <format attr='minwidth' value='1403' />
                <format attr='maxwidth' value='1403' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Coal (terawatt-hours):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <lod column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <text column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Crude oil (terawatt-hours):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <lod column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <text column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Hydropower (terawatt-hours):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <lod column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <text column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Natural gas (terawatt-hours):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <lod column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <text column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Nuclear (terawatt-hours):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <lod column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <text column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Other renewables (terawatt-hours):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <lod column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <text column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Solar (terawatt-hours):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <lod column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <text column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Traditional biofuels (terawatt-hours):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <lod column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <text column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Wind (terawatt-hours):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <lod column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
              <text column='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Coal (terawatt-hours):qk] + ([federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Crude oil (terawatt-hours):qk] + ([federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Hydropower (terawatt-hours):qk] + ([federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Natural gas (terawatt-hours):qk] + ([federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Nuclear (terawatt-hours):qk] + ([federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Other renewables (terawatt-hours):qk] + ([federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Solar (terawatt-hours):qk] + ([federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Traditional biofuels (terawatt-hours):qk] + [federated.1o906ru1wf61uq1aigmbl1b9ts41].[sum:Wind (terawatt-hours):qk]))))))))</rows>
        <cols>[federated.1o906ru1wf61uq1aigmbl1b9ts41].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='World GDP 1820-2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;World GDP in U.S. Dollars ($) from 1820 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='world-gdp-over-the-last-two-millennia' name='federated.10e0ep21a77kgh12sny031k5t42a' />
          </datasources>
          <datasource-dependencies datasource='federated.10e0ep21a77kgh12sny031k5t42a'>
            <column caption='(Int.-$)' datatype='real' name='[(int.-$)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[(int.-$)]' derivation='Sum' name='[sum:(int.-$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.10e0ep21a77kgh12sny031k5t42a].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.10e0ep21a77kgh12sny031k5t42a].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10e0ep21a77kgh12sny031k5t42a].[sum:(int.-$):qk]' scope='rows' value='GDP in U.S. Dollars $ (Trillions)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.10e0ep21a77kgh12sny031k5t42a].[sum:(int.-$):qk]</rows>
        <cols>[federated.10e0ep21a77kgh12sny031k5t42a].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='World GDP over last 2000 years'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;World GDP in U.S. Dollars ($) Over the Last Two Millennia&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='world-gdp-over-the-last-two-millennia' name='federated.10e0ep21a77kgh12sny031k5t42a' />
          </datasources>
          <datasource-dependencies datasource='federated.10e0ep21a77kgh12sny031k5t42a'>
            <column caption='(Int.-$)' datatype='real' name='[(int.-$)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[(int.-$)]' derivation='Sum' name='[sum:(int.-$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10e0ep21a77kgh12sny031k5t42a].[sum:(int.-$):qk]' scope='rows' value='GDP in U.S. Dollars $ (Trillions)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10e0ep21a77kgh12sny031k5t42a].[none:Entity:nk]' />
              <lod column='[federated.10e0ep21a77kgh12sny031k5t42a].[none:Entity:nk]' />
              <text column='[federated.10e0ep21a77kgh12sny031k5t42a].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10e0ep21a77kgh12sny031k5t42a].[sum:(int.-$):qk]</rows>
        <cols>[federated.10e0ep21a77kgh12sny031k5t42a].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='World Population 1820-2010'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;World Population 1820 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='population' name='federated.10zoe6k117xz541cxdc5n01m5duz' />
          </datasources>
          <datasource-dependencies datasource='federated.10zoe6k117xz541cxdc5n01m5duz'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]'>
            <groupfilter function='member' level='[none:Entity:nk]' member='&quot;World&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</column>
            <column>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]' scope='rows' value='Population (Millions)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <lod column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
              <text column='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10zoe6k117xz541cxdc5n01m5duz].[sum:Population:qk]</rows>
        <cols>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='World Population Extreme Poverty'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;World Population in Extreme Poverty (Absolute) from 1820 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='world-population-in-extreme-poverty-absolute' name='federated.0wup1qk0ijaz4r18dkef812cxa2r' />
          </datasources>
          <datasource-dependencies datasource='federated.0wup1qk0ijaz4r18dkef812cxa2r'>
            <column datatype='real' name='[Number of people living in extreme poverty (people)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of people not in extreme poverty (people)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of people living in extreme poverty (people)]' derivation='Sum' name='[sum:Number of people living in extreme poverty (people):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of people not in extreme poverty (people)]' derivation='Sum' name='[sum:Number of people not in extreme poverty (people):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0wup1qk0ijaz4r18dkef812cxa2r].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.0wup1qk0ijaz4r18dkef812cxa2r].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0wup1qk0ijaz4r18dkef812cxa2r].[sum:Number of people not in extreme poverty (people):qk]' scope='rows' value='Number of people not in extreme poverty (People in Billions)' />
            <format attr='title' class='0' field='[federated.0wup1qk0ijaz4r18dkef812cxa2r].[sum:Number of people living in extreme poverty (people):qk]' scope='rows' value='Number of people living in extreme poverty (People in Millions)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wup1qk0ijaz4r18dkef812cxa2r].[sum:Number of people living in extreme poverty (people):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wup1qk0ijaz4r18dkef812cxa2r].[sum:Number of people not in extreme poverty (people):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0wup1qk0ijaz4r18dkef812cxa2r].[sum:Number of people living in extreme poverty (people):qk] + [federated.0wup1qk0ijaz4r18dkef812cxa2r].[sum:Number of people not in extreme poverty (people):qk])</rows>
        <cols>[federated.0wup1qk0ijaz4r18dkef812cxa2r].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='World Population by Political Regime'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;World Population by Political Regime 1820 - 2010&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='world-pop-by-political-regime' name='federated.14ibpwt1wtkdso18rm3k00veqiuh' />
          </datasources>
          <datasource-dependencies datasource='federated.14ibpwt1wtkdso18rm3k00veqiuh'>
            <column datatype='integer' name='[Country in Transition or No Data (People)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population in Autocracy (People)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population in Closed Anocracy (People)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population in Colony (People)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population in Democracy (People)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population in Open Anocracy (People)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country in Transition or No Data (People)]' derivation='Sum' name='[sum:Country in Transition or No Data (People):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population in Autocracy (People)]' derivation='Sum' name='[sum:Population in Autocracy (People):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population in Closed Anocracy (People)]' derivation='Sum' name='[sum:Population in Closed Anocracy (People):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population in Colony (People)]' derivation='Sum' name='[sum:Population in Colony (People):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population in Democracy (People)]' derivation='Sum' name='[sum:Population in Democracy (People):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population in Open Anocracy (People)]' derivation='Sum' name='[sum:Population in Open Anocracy (People):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Year:qk]' included-values='in-range'>
            <min>1820</min>
            <max>2010</max>
          </filter>
          <slices>
            <column>[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Country in Transition or No Data (People):qk]' scope='rows' value='Country in Transition or No Data (People in Millions)' />
            <format attr='title' class='0' field='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Autocracy (People):qk]' scope='rows' value='Population in Autocracy (People in Millions)' />
            <format attr='title' class='0' field='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Closed Anocracy (People):qk]' scope='rows' value='Population in Closed Anocracy (People in Millions)' />
            <format attr='title' class='0' field='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Colony (People):qk]' scope='rows' value='Population in Colony (People in Millions)' />
            <format attr='title' class='0' field='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Democracy (People):qk]' scope='rows' value='Population in Democracy (People in Millions)' />
            <format attr='title' class='0' field='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Open Anocracy (People):qk]' scope='rows' value='Population in Open Anocracy (People in Millions)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <lod column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <text column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='360' />
                <format attr='maxheight' value='360' />
                <format attr='minwidth' value='1409' />
                <format attr='maxwidth' value='1409' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Country in Transition or No Data (People):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <lod column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <text column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Autocracy (People):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <lod column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <text column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Closed Anocracy (People):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <lod column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <text column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Colony (People):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <lod column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <text column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Democracy (People):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <lod column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <text column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Open Anocracy (People):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <lod column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
              <text column='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Country in Transition or No Data (People):qk] + ([federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Autocracy (People):qk] + ([federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Closed Anocracy (People):qk] + ([federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Colony (People):qk] + ([federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Democracy (People):qk] + [federated.14ibpwt1wtkdso18rm3k00veqiuh].[sum:Population in Open Anocracy (People):qk])))))</rows>
        <cols>[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Year:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='177'>
    <window class='worksheet' name='GDP vs. LE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='1' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1973</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BA81A19-D9B3-454B-BF79-D4CBFE87AF8F}' />
    </window>
    <window class='worksheet' name='GDP vs. Literacy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1924</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29C611E7-8995-4DF5-9597-E475D6D64F9E}' />
    </window>
    <window class='worksheet' maximized='true' name='GDP vs. Numeracy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1921</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6AA3AED8-7BA7-47B4-955B-2893F5C7289A}' />
    </window>
    <window class='worksheet' name='Immigration vs. Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Life Expectancy:qk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[sum:Real GDP:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58A68700-C146-4E1C-B396-711D9495DA1F}' />
    </window>
    <window class='worksheet' name='Immigration 1820-1870'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[io:1820-1870:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D93BF10-466B-445D-8EEA-F35CA1684C64}' />
    </window>
    <window class='worksheet' name='Immigration 1870-1920'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55B12C97-E308-44DA-9BC6-C8483CA88C20}' />
    </window>
    <window class='worksheet' name='Immigration 1920-1970'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6397F147-F7E4-42FF-8CA8-84C99F5D6E78}' />
    </window>
    <window class='worksheet' name='Immigration 1970-2013'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00FECA76-0684-4786-B998-859FB370DA80}' />
    </window>
    <window class='worksheet' name='Country vs. Real GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1820</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DDA4603-8350-4584-8BE0-82B2AEBBC153}' />
    </window>
    <window class='worksheet' name='Country vs. Real GDP 1820-1870'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1860</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:ok]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{83F7BBB0-75E7-4754-97C0-E741ADA2C164}' />
    </window>
    <window class='worksheet' name='Country vs. Real GDP 1870-1920'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1920</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C287028A-1FC8-4064-A4A3-0D968B153371}' />
    </window>
    <window class='worksheet' name='Country vs. Real GDP 1920-1970'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C61E6657-5440-483B-88AC-9DD5AC23CD3A}' />
    </window>
    <window class='worksheet' name='Country vs. Real GDP 1970-2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1994</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EF8A042-7575-4F40-8AE8-73CF1E0CEBA0}' />
    </window>
    <window class='worksheet' name='Immigration vs. Real GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='3' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2010</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41542601-1DA0-427B-B203-5A9B9DF81AB1}' />
    </window>
    <window class='worksheet' name='Country vs. Life Expectancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2010</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5DA21FE-6FD7-42CA-A6F0-4DCF08412D18}' />
    </window>
    <window class='worksheet' name='Real GDP vs. Year by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9CDD3F1-2568-4BD7-9EEC-582156447A13}' />
    </window>
    <window class='worksheet' name='Real GDP vs. Year by Country 1820-1870'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4000B985-A726-48F6-80AA-3245591CFC12}' />
    </window>
    <window class='worksheet' name='Real GDP vs. Year by Country 1870-1920'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D95AFE04-1946-4BAF-8008-1A035BF44B5E}' />
    </window>
    <window class='worksheet' name='Real GDP vs. Year by Country 1920-1970'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{049C36E1-3EB9-41B4-8B13-AFBF5C7382D6}' />
    </window>
    <window class='worksheet' name='Real GDP vs. Year by Country 1970-2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AA88AE5-ED4D-40AC-AAFB-A8643DF1DD19}' />
    </window>
    <window class='worksheet' name='Life Expectancy vs. Year by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A85F246-64EF-469C-A40A-2DCE9E176FF4}' />
    </window>
    <window class='worksheet' name='Life Expectancy vs. Year by Country 1820-1870'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4790F803-EC23-4C52-B690-43222F14C0AD}' />
    </window>
    <window class='worksheet' name='Life Expectancy vs. Year by Country 1870-1920'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF7B4A9C-8158-499F-B025-C4CC30BB63A2}' />
    </window>
    <window class='worksheet' name='Life Expectancy vs. Year by Country 1920-1970'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B74C8A6E-BE8A-47C7-B9FC-F37333718687}' />
    </window>
    <window class='worksheet' name='Life Expectancy vs. Year by Country 1970-2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33C398FD-C3C1-488A-AB1F-138E6A68DCD0}' />
    </window>
    <window class='worksheet' name='Life Expectancy vs. Year by Region 1820-2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF5D0D9E-BD5C-4B96-999D-E9105BDCD112}' />
    </window>
    <window class='worksheet' name='Real GDP vs. Year by Region 1820-2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6EABB496-55DA-4360-AE7B-75FC57D04CC6}' />
    </window>
    <window class='worksheet' name='Region vs. Life Expectancy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2010</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AAE6FE6-8691-4ADD-AC2A-10E95B8D578A}' />
    </window>
    <window class='worksheet' name='World Child Mortality by Year 1820-2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1wcqi4m0ngiz4z18aq9321gn74e2].[none:Year:qk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region Code:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none: Region:nk]</field>
            <field>[federated.1x97k150zpqwdt12tg4fa0dx8fau].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EF40C94-3F30-4E99-8D5D-52E6C5EE1908}' />
    </window>
    <window class='worksheet' name='World Energy Consumption'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o906ru1wf61uq1aigmbl1b9ts41].[:Measure Names]</field>
            <field>[federated.1o906ru1wf61uq1aigmbl1b9ts41].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B2E435E8-440B-45AB-85C1-6051331478AC}' />
    </window>
    <window class='worksheet' name='Population by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</field>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</field>
            <field>[federated.115r5yv0s5msjo1gcwfzm0uz6mry].[none:F2:nk]</field>
            <field>[federated.115r5yv0s5msjo1gcwfzm0uz6mry].[none:F3:nk]</field>
            <field>[federated.115r5yv0s5msjo1gcwfzm0uz6mry].[none:Number of Immigrants and Immigrants as Percentage of the U.S. Population, 1850 to 2017:nk]</field>
            <field>[federated.115r5yv0s5msjo1gcwfzm0uz6mry].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{020CB403-F85F-4822-B357-05521A78C1B6}' />
    </window>
    <window class='worksheet' name='Population by Country 1820-1870'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[io:Entity Filter Set:nk]</field>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</field>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF1C0912-2519-4B39-82B8-55118289F0E5}' />
    </window>
    <window class='worksheet' name='Population by Country 1870-1920'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</field>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69D9E43E-7FBE-4DDF-A75E-6F044DF49700}' />
    </window>
    <window class='worksheet' name='Population by Country 1920-1970'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</field>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A30E5D27-D471-42DF-9257-1D5C9FF1FFA6}' />
    </window>
    <window class='worksheet' name='Population by Country 1970-2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</field>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{203546F5-A2AC-45D8-B5C3-09A458591667}' />
    </window>
    <window class='worksheet' name='Entire World Population Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</field>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64413BA7-740E-4EEC-B758-59AA73835491}' />
    </window>
    <window class='worksheet' name='World Population 1820-2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Entity:nk]</field>
            <field>[federated.10zoe6k117xz541cxdc5n01m5duz].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5AB9CF02-83F7-459B-B04B-95DF7ACB859A}' />
    </window>
    <window class='worksheet' name='World GDP over last 2000 years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10e0ep21a77kgh12sny031k5t42a].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10e0ep21a77kgh12sny031k5t42a].[none:Entity:nk]</field>
            <field>[federated.10e0ep21a77kgh12sny031k5t42a].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C341BAA-A6A6-4897-B9C8-83F9058C9C0B}' />
    </window>
    <window class='worksheet' name='World GDP 1820-2010'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10e0ep21a77kgh12sny031k5t42a].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FC30C06-A42E-44CD-9AA0-26F1B087E95E}' />
    </window>
    <window class='worksheet' name='World Population by Political Regime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Entity:nk]</field>
            <field>[federated.14ibpwt1wtkdso18rm3k00veqiuh].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B463F766-6ABF-4E8D-8F9D-2FABCAE2852B}' />
    </window>
    <window class='worksheet' name='World Population Extreme Poverty'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wup1qk0ijaz4r18dkef812cxa2r].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EE872B3-DFC0-4620-81CE-D907E897F28C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Country vs. Life Expectancy' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAW3klEQVR4nO2dW48bSZbff3khmbyTda/StTWtvkxPz+zCwBqwX+YbzKsBfxPDj/NmLPxk
      w0+7wC4MA34x1tiFFzZ6YW/P7qzXM+PpHkkttS4lValYqhtZLN6SeYnwA0vq6dFYLTJD2VGt
      83sRi2L9I04WT0bGOREnHK21RhDeUtxvuwOC8G0iDiC81YgDCG814gDCW404gPBWk5sDaK0x
      FXAyGbiyUUuu1Xw6WbR8I714TZRKcZ3sPpemCZ5npus2ammtZi/kWr2mjofWzkK/n6sDjP/T
      v4Sj23k2KQivZM5bjKbf77/6E+dDkmTXhIvAXCOA1prtL+9y4/0POeoP8aIhpWqDQb9PtVZj
      HMYMegc0ljepBy7DqabiK7xyi9WlxpuyQRAWZq4RYHSyT+KXeProIc2VdQaDAYd729y694BB
      mFKvlmg2GkyjCI1PteSzs/2Qxzt7b6r/gpAJZ9G1QFprdrYf0Fi9RLteea3PD//jv5A5gGAV
      C0+CHcfh2o2bc/2Ot/EDKNcXbfIFWmscZ7FZ/0XQ0lrj4ICBbtlon0mtrDoLjwDzorVGKYXn
      eZm1kiTB980EsGzUUmoWBnXd7GFQG+0zqZUkszDook6Qaxj02WSPRMeZdVKV4rnZHclWLaUV
      Do6RO6SN9pnUmum4LDpc5uoAf7P3VxxO9/NsUhBeSaYxVquYp0+//oXWyZQonb0ej8dZ5AXh
      jZNpBOgdPKM3jvH3nwHw7OljmvUyg8IafnhMvbXK9r3PceqX+PB7l410WBBMkskBJnFCIRrR
      H0EUxSwttdBekUBrVrauEEdTiuUGfkEWnQp2kskBLl195xs/s76+DphdSSgIpsh1Evyj5T9i
      okaZdZRSRkKEtmo9v1mYiALZaJ9Jraw6kgewUEvyAPPpZMkD5OoA08O/gfQ0u5bSOK6hjKSF
      WrM/iYOJpKuN9pnUyqqT6yNQ1P17CJ/k2aQgvJKFx9id7Qf85s49lEpJ04RnBwckScJ0PCJK
      Z3sC0jQlSZIXQ7og2MbCI0AcxaSp5lf/8ClufYOmN+HZwR5MA0prFcpoovGI4WRKa2mdd65d
      MtlvQTDCwg5Qr9dIJ4rG0g20XyFwQ+78/Bf84A/+ObWKons65tKV6+efNvPcKAimyXUSPLj7
      U5kDCFaRqwMk46c4ZF8NqtIU10A41VatWVUIM6tBbbTPpJZSKW6GVaWSB7BQS/IA8+lkyQPI
      Ih3hrSazAxx0dtk/7AKzu/xkMkGp2aDy+8Kf/X6fn/3sZ8Tx7FHo9PSUNE1ffF5CpkKeZB6D
      er0uqReSTk5xilXi6SlpVGFlvcFgNMFJxnjlNusrLQA6nQ69Xo/bt2/T7XapVCpUq1Xa7Ta9
      Xg/XdTk6OuLHP/5x1q4JwjeSeQRwHIc4ihgMhgwGA3AUhYLLoycdVBzR2d1hr3PwVYOui9aa
      3d1d+v0+cRwznU65desWjuPw8OFDPv3006zdEoTXQibBFmrJJHg+HZkEC8KCiAMIbzW5rgZ9
      2u8RG4jypKnC88z4ro1aSmkcx8yGGBvtM6mVdUNMrg7wyf27HAwHeTYpCK/EiDvHwx63vrhL
      fzR96f/G4xHdXvZNMILwJjAyAiThiEmccrC7Q69eZeeLz7hy82N6/TM2VxpME2i3miaaEgSj
      GHEArxhQ8ocUSgFbG0sMTy4zHfYpV2p4vk+5kOuTliC8NrnmAf70H/9O5gCCVeTqALf29xgn
      2ZdDa6VwDJXnsFFrVh4dTOyKt9E+k1paKRzHXXjPlWSCLdSSTPB8OhemPPrgv/01utvNrKO0
      xjV0UIONWs/vSCZ6ZaN9JrWy6uR7TOrf/T3J9naeTQrCK1lojNVK8fmvf8GTvWcopRgc7nEW
      KcLplCSOiJOUJI4YDEfE0ZQklTX+gp0sOAJokjghTfrsPkkZHO3hLMeMz/o0CiknE6gHPpVq
      k8HJU3R5jT/46F2zPRcEAyzmAI5DvV6nXlulf3zI6pWrhOGA7eNTrn10gwoFlloN0iQh8BVe
      WZJggp3kGgXa/1f/WuYAglXk6gDRXgfHQB7AxlWJJrVkNWh+OpIHsFBL8gDz6VyYPAB/+z+h
      n31lqDerHm4EG7Ucg4kAG+0zqZVVJ5MDaK0IpzHloPR7//+lzQr9PhhIhJmsNGqjlo19slUr
      q04mB9jf3SH2Aqq+wg0aDHsHNNsrnPTOWF+ucX97n63VBsXaEs1aOWNXBcE8mR4yU6Vp1Gsc
      Hx3y8MFDXL9IZ2ebx/fu8/ioS7Ne5ujwgO3tHVP9FQSjZJoE6zThsHtK2Xdxi2VKRR+VRvTP
      JtRrAeNpiqcTCuUalaCI+ov/gtc9Mdl/QchEpkcgx/NZX135+puFAmtBFYBy5au3tdZQLELx
      988X5kGjcQw9RdqopTk/Iyx7l6y0z6RW1mslYVALtSQMOp/OhQmDTsPQiE6apkYcyVYtpRQ4
      jpHlwjbaZ1Irq06uDvAn/+Hf03n6NM8mBeGVGKsMp7XmoLNL9+SUhJlnjkdjU/KC8EYwNgKo
      ZESYBhTHfW4d7NNqtXGiKc7BFIIWVzZXTTUlCMYwNgK4Xolh7xnDqeLqxhLDaYznuhzs7zOe
      mHn2FwTTGBsBHLfARz/8+MXPS0uzfy9fvQKch0EFwTJynQR/7+Z7LC0vZ9bRWhtZKmyr1vN7
      hYlu2WifSa2sOpIHsFBL8gDz6VyYPMCTB18ynWafD2ilcVxDdyIbtfT5Gl8TUjbaZ1BLq/MR
      YEGpXB3goLPH8KyfZ5OC8EqMOIDWivt3v6BVLxOVN2gVFaWgSJJqHJ3iFUr4hrbSCYJJzDiA
      SglqLdo1uL33mH1VYrWqCWNNNDgmDVakLIpgJUYcwHV9im5KPw64+b0bjIZTqmUfB+h1CxSk
      LIpgKWbmAI7DxqWrL36sBsGL15XqbGm05AEEG8k1DDoeDs/Xb2dDpSmuoVWJNmpppWdBIBPF
      Yy20z6SWShWulEX5bmlJHmA+nQuTB9j98/9OdNDLLmSwPIe1Wqaw1T5TWrmXRdGayWRMISjj
      u+7v3ZDw/9ukEHcHRIdyYqRgD3M7QDzu8WR/wPpSjbNxhE4jKkUPv9Kgf3QAXgHtaFyvRC0o
      opIJheoyrbqURRHsY24H0ErhF0scHh6RKggqAb3+AAZnVMsBOtYcjRRVf4BKA0a9Q2J3yB/+
      8IM30X9ByMTcDlCsLbOa9CitXWcyjalVAqJwjFssU/Ac0LASx4RxSq0SMGk3KZQq3ywsCN8C
      888BHIdme7bYPziP9xcKX090+YUCzx94Cs0WMIsCedUAv57dGWyci5nWMoWt9lkyB5YwqI1a
      EgadT+fChEGJU3Ri4LywNEWnhvzWQi2tFQ4O2sTmEwvtM6qVpuAtnl7N94CMX9zHHU3zaE4Q
      Xou5xtjB6Qmdg+OvvZem6YvXWisefnmXwTgkSdLf/XVBsI45HoE0J70Bl69scu/Obaq1GoNI
      Mzk9YHPrMge9IT/84F1wHQ6f7VF0PMbKIdATnOoKVzay7wUWBNPMN8tSEZ39fSbThHAacnBw
      SLvV5uz0lJOTWdXnyWhIUCkzHo1RaLq9Hqc9yf4KdiJzAOGtJtcokLtUx6lmXxKhtcJxzGyx
      tFPL3CFhdtpnTmum47DotZI8gIVakgeYT+fC5AEO73dIwuznBL90+N53TOv5PcnIhhgL7TOp
      lVUnVwe4+8mvOesY2A8gCIYwWB495cG9L+gPJwD0+1L/R7Afc+XRwx7lpWtMT7scnsJJOGS3
      c4AaHeHUL/GD966ZakoQjGGuPHrQZnzyhEil7B91qZbLBEGJWnOFRjX7wXiC8CYwVx7d8bj5
      wYcAXL768v9LWRTBRnINg3bu7JBMosxaNkYjTGppfV4WxUAewEb7TGoprXAz5BMkD2ChluQB
      5tPJkgeQirXCW404gPBW89IY9OzpE0aJy2q7RqFUJo4TgoLH5PSEs0KdzUaZSZTgkeJEA3rO
      ElU3plqZrfEZj4boSYSz3IZJiOdq/GKFYmH26NPpdLhz5w7f//73KZfLRFFEq9Wi2+3S6XT4
      6KOPOD09pV6vE4YhnU6H1dVVms0mnucxGAzQWtPv96lWq5RKJRzHodVq5XvlhO8EL80Bnmw/
      otJsc7hzn8Qp4xZL+Dqk5vuMtOZs6qHjkJWqR5rEDHSNdNyjvb5ByXfpHhzgaR/drFIvFJgO
      z9DFOh/cvI5SigcPHpAkCZ1Oh2KxyOHhIbVajXa7zdnZGVEU0ev12NraYjQaUalU6HQ6XLly
      Ba01SZIQhiFRFLGysoLWmrOzM37yk58sdAFsfK6VOcB8OlnmAC85gEoTBqMJOo0oBRXCaUQl
      KJAoCEpF0lQxjRJcneAXS7iex3g0oV4NSHGZjIaUggDXddE4xNMxXqFMqei/mPnv7+/jui7F
      YpEwDGm1WgyHQ1qtFlprut0utVqNJEmoVCp0u13W1tYIw5AwDHFdl0qlQhRFKKVQStFutxe+
      gLb9UcUB5tMx6gBvCokCvT7iAPPpSBRIEBYk3+rQdz8jnowz69iYkDGppc7Loshy6NfTcVxn
      4aRhrg7w60/+K929J3k2KQivZAEX1Dy6f5fHu/uv9enTU9kQL9jLQiNAudYiikL+96efUF5d
      JxlEVCpV+uGIoBRQUiMGqkLgJjgowvQG60sN030XhMws5ACT4Sleucn61hWCRoPyRo3R4IzV
      Sxt4juase0zRLbLcbqGSiDhNTPdbEIywgAM43Lj5vNb/5ot3m63ai9et5stZWVkOLdhIrnmA
      nS8+I56MMmvZGI0wqaW0xkE2xb+ujuO6Cy8cl0SYhVqSCJtP58KURTm+f4s0zJ4H0FobuTva
      qqXR53c0E4Wx7LPPpFZWnVwdYHTUIRpIWFSwh0wO8PTJI2KnxHKrDirF1xO6qknVS6kEPtNY
      4zkJ3f6Yy1sbpvosCMbI5ABpmuIWXXrHJ0zjkKIOOXMjbj/e5t13r4KerS71S1VT/RUEo2Ry
      gLXNy5TLAcPhCM/zUHFIQzlUvRtsbK7hAqcnhxRrzW/UEoRvg1yjQNs/+2uZAwhWkasDxOEE
      M+e+pUbCqbZqaaUAB8fNfrFstM+kVpqmeK63cMAs1yiQVywZMdoxGI+2UctkHsBG+0xqORcp
      D/DTP/tbHh+cZRfSGiNDia1a5s7HsNM+k1oZdTI7wGQ0YBJrllrfvNqzP5rSPZtkbVIQjJHZ
      AfY7exSqbcJBD69QAq9IOOxSay5zetqnUS3iluosNWvfLCYIOZP5IbNYKtNu1Ii1S+9ojy8f
      PsQvlTl5+hhdDLh/9wueHR5/s5AgfAtkHgE2L13Gc13K5YBkbYXrjkfB92B9g8lkwpV/+s/Q
      jpnIgSCYJrMDPI/qeJ6H5339BMha7avHHq01q60qk8jACfI2TsZMa5nCVvssmQTLcmgLtWQ5
      9Hw6FyYMOooUmuz+lqoUL/thk9ZqfVUWRVnTJ1u1UpXiZbhP5OoA/+vhKd0w+x9VEEyxUFmU
      44MOT58dme+NIOTM3COA1prhJASdcvfzX+I12sRjTeBHjKYJy8tLPHq4zdV3rjMchawtt3Bd
      d+HitYLwJlmoKkQyDYkdTRyn1H2H9to6Wo+pawjPjnGImagSq0slJmcnBO1L5nsuCAZ441Gg
      4+NjlldWQGv+8vaxzAEEq8g1DPp5Z8gkyd6c0hrXUDzaRq3nfxIjZVEstM+kljrfFC9lUb5D
      WpIHmE/nwuQBkgf/gzTMviNMKYUyWKDJNi2jI4CF9pnUyqqTqwNE/+dP4eh2nk0KwivJ5oJa
      s7P9gN3OgaHuCEK+ZBoBtFZoz2c6GvHFrc+JopDTqYsXdinXVwmaTUYHTwhWrvHx+++Y6rMg
      GCOTAziOi6cVbqHA1tp1puMzmomLntYpV+v0h1PWL12hVJckmGAn2eYAjsPlaze++rn59W2R
      v10LTsqjCzaSb1mUJz/HiYaZtZRKcV0zm2xs1NL6vCyKkSiQffaZ1JrpuCxaQUDyABZqSR5g
      Pp0Lkwfgsz+DcfaIkWdwZ5KNWo7WgGOkLIqN9pnUyqqzkANonZKms+GnWCy+/i8mIcTZzwcw
      uenQRi0b+2SrVladxRxAjbh75wCvqLi8dZlo3OfobMTG2jKHJ2cs1YqkXpnp4JTGygq+41Ct
      SoVowT4WewRyoFZvkCQ9th/cR0URl753mZ3DHulkzLQ/oh/5XL+yydnxPoXqKvL9F2xkIQdw
      nDpXr9XReoU4ivD9Aq7n4juHdE7g5vX3wPXwPZeDzh6rqy+fGikINpBvFOjWf8abZC+SNTtD
      y9BZVRZqPS8cYErLNvtMas2ulSyH/k5pSRh0Pp0LEwY9GOwTq+ynxtuYkDGpNUuEzZaaZMVG
      +0xqZU2E5eoA/+7Tf8t272GeTQrCK8l0i9FaMx5/FddX0xGD8HdLH2pGo+ynwwvCmyDbcmil
      6Hc7bO/6RP096vUa1Db4xeNtbl5bZxyDr6YkbpmbN66a6rMgGCPTCOA4Dr7nsrGxiesVKJcr
      ROGEkuvhVeosNarESTJftlgQciTbfgDXZXVzthx6+Z/8EQCXAG5ef/GZldU1QJZDC3aSaxj0
      r27/Bd3JSXYtpXAMbc62UUtrPYtpmCixYqF9JrWy6kgewEItyQPMp3Nh8gD3Tn/DRGVfDaqU
      MvLlsFXLdFkU2+wzqZW1wFauDvDL459zON3Ps0lBeCVm3PmcXq/3tZj/0eGhSXlBMI7RESCc
      hjx9/IhGq8n/vf2IH338HuHuDp5fYHNj45sFBCFnjI4A1UqVra1NXL/IzXeuUW80iEZ9qs0V
      k80IgjGMjgCNRgMaDZZ/671WvYHv+5IHEKwk1zDo7mCbmCizVpoqvCwno1mupZTGccxEgWy0
      z6SWSs+jSQteKskDWKgleYD5dC5MHuDuP/wxk8FuZh19fiiCCezUen5PMnPYhn32GdT6Nsqi
      LErv2a8YnNzJs0lBeCWZHeDpk0f0umdc+eBDyi6E4wFuocxgOKISFNFJRLHaohIUTPRXEIyS
      2QG01oyihO5BB52mOGmExuN4GLO+VCcc9gjp8aOP3jPRX0EwSmYHWN24xObmFmejMYNJRNWv
      4BUreMGItZU2g5JHsSJlUQQ7yewAQRAAsFQqs/Rb77fbsy99pVIBZD+AYCe5hkGTeGKktmqa
      pkbCqbZqaaVntXGN5AHss8+kVladXKNArlcycwEdc/FoG7VM5gFstM+olnOB8gDj+/8GPd3J
      LnRePdwINmqZSwPYaZ9JrYw6GQ/J03Se7uAFdTZWl168lyQJhcLLYU+tY1DZl0LMxMzIvBVa
      NvbJpFYGncwjgDdNCNYDzvpDovGIsU5R0wmt1hIn/QGrSy0cx6FWq2VtShCMk/GUSAff9/E8
      xZf37uFrl+t/+APu/uofGfRP2TsZ4+mQUm0N+f4LNpI5CqSVAsf5nUVJGq01aao4PjxkbWsL
      Fxjc/SmET8z0XBAMkPkR6HlJiq8/8zs4Driux+alS8BsbuAFW2CqbIhti7IMahmdA1ton0kt
      fb4YTsqjf4e0ZDn0fDoXJgz6yZf3OA0nmXVsvBOZ1DJ4GKOV9pnUyqqTqwP85e3f8OAk+wkx
      gmCKhR1AqTEnJymeOwXXZ6n91YK36XiMX6lgJmkuCG+OxUcAnRCGCS4Tnuw8ZmPzEoVigTuf
      /ZKVjQ9otj2Go4hp7xnltXf4+P13DHZbEMywsAM4bo3p+B6NlU0+eO8m48Rja7XOePQ+QalJ
      c7nG+qqmXw/wa22TfRYEYyzuAI7Lu+9/+OLn50uh3/+t9wDq9QYgy6EFO8k1DPrFs30miYlD
      8uwr0mpSS4rj5qcjeQALtSQPMJ9OljzA/wO1ogfdsWpm+gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Country vs. Real GDP' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAeOUlEQVR4nO3dSXAbd77Y8W93o7GvBECAOwkukkaUt7FH9mQ8fpNxZTJ+M1XOVKpck3eY
      d8gph6RqDjnklqp3yjvk9FI5vVRlDsk55Xhc4/EytkdeMpafF0qWKJLiCoIkdqCBRm85UIJE
      k5JIAsToPfw/VSoLwB/dP8j4ofu/9K8lx3EcBKFPyX/uAAThz0kkgNDXRAIIfU0kgNDXRAII
      fa1nCeA4DicZcPrH2PZxieOs2j4ucXSzbU+PALZt4dj2w/84NgCWZR17u49D25N+QR6HmE/S
      1rbtY7c9yzi63dZ17K11gfa//gp2Fx7aRpl6Cf+rf9ejiIR+d8IjgEO5XH54izu/hJ3Orm1v
      bz/0F7W9HzGPJ3TgREcAx3FYufkNmXMX2C3XUFo1PIEw1XKZQDCI1jSoFnOE40OEvDI13cHv
      slF8UZID4RPt54svvsCyLNbX13G73fj9fgqFAgMDA+zu7lIsFhkfH0dVVQqFAiMjI9i2zfnz
      50/8jyD0rxMdAer5LKbLw8byEpFEimq1ys7mCl/fuEW1aREKeIiEw+itFg4uAh4XaytL3F7b
      PFFQ5XKZUqnEtWvXSKVS7OzscPPmTd588002NzcZGhoilUrRbDap1+skEgk+//xzrly5cqL9
      CMKJjgDBxAjPJkaA/V/pejhMODnCk9/132uUHjrwnvTQULv9cUWjUV577TVcLheOs3/alUql
      +MUvfnFke9M0uXTp0kk+iiAAHXSCJUliIjN7ovco6XnwhR7eJnnu0H6effbZE8cnCMfR01Eg
      z4/+E4qi9HKXgvBQPU2A7cYmpmMcq61H9pJ2jZxxREK/62kCvLP5f9nRs8dqmwmd419N/dUZ
      RyT0u45mgh3bYGPj4BfaMXVadybgNE3rZPMA7eHQ+9VqNQB0Xe/KPoT+1dERoJjbpqgZuLLb
      AGxv3CYS8lFVB3E19whFk6zc+BIpNMKF6dETb9+yLHK5HLZt4/f7WVpaQpZl9vb2yGQyeDwe
      HMfhD3/4A7/+9a+RJKmTjyP0oY6OAA3DRG3VKdc1dotlBgaiyN4QXtkhPTyG2yXh9oXxqafb
      Ta1Ww3EcGo0G165dI5FIYBgGk5OTxONxpqamaDQaZDIZMSMsnEpHR4CR8alHtkmlUsDJ5gHu
      ikQi/OQnP3lomxdffBHTNJFlsbJbOLmedoKfjH+Phl0/VtuIGjvjaAShxwlwMfbUsecBTNM8
      42gEQVwRJvQ5kQBCXzt1Aqyt3OKrazewbQvLMtnO5TBNE12r07L21+lbloVpmgeuJlpZWeG3
      v/0tuVyOVqvFtWvXMAwDwzAoFovYto1lWbRaLQzjeLPGgnBap+4DGC0Dy3K4+vEHyKE0EaXB
      dm4TdC+eQT8+HFpanVpDJzqQYmpif1lDs9nEsiw++ugjVlZWeP7553nnnXeA/fP+4eFhVlZW
      0HWdSCTCK6+80p1PKghHOHUChEJBrIZNeCCD4/LjlZtc++hPzD/1zwj6bQoljZGxyTut701Q
      xeNxstksExMTJBIJxsfHef3115mcnOTixYssLi7yxBNPEAwGcbl62kcX+pDUq9qgjuNg2/aJ
      RoGOmwCPQ9u7p3nHnY94HGI+SVvLspBl+diz7Y9DzMdpKzrBQl8TCSD0NZEAQl/rOAFyW+tk
      dwoA7YVrtr3frTiqmFK5XObDDz9sD3GWSqX2cmfbtk9cgEkQOtHxMEuxWMBSmliNEpI7gKGX
      sFp+Eqkw1XoDydRQfDFSiSgAW1tbFItFFhYWKBQK+P1+AoEAsViMYrGILMvs7u7ygx/8oOMP
      JwiP0vERQJIkjFaLarVGtVoFyUZVZZZXt7CNFlvra2xu5e7tUJZxHIf19XXK5TKGYaDrOl9/
      /TWSJLG0tMQHH3zQaViCcCxiGLRLbcUwaG/iEMOggtBFIgGEvtbTtQYb5SLGEaM8o5EYXlXt
      ZSiCAPQ4Ad5e/IZcrXro+b9+7vsMqZFehiIIQJdOgYxaka+vf0O5rh96TdPqFIqlR25jYWGB
      995779C1w6Zpsr6+TqVS6UaognBAV44AZrNOw7DIra9RDAVYu/4FY7OXKJYrDCXC6CbEog//
      hc/n85TLZT755BMA3n//fX784x/TaDRwHIeZmRnC4eOXWBeE4+hKAihuLx5XDdXjZTg9QC0/
      il4r4/MHUVwufOqjdxMKhWg2m6TTaQzDYG5ujkKhwOjoKLqu4/F4uhGqIBzQlQRwhxM88Z1E
      +/H8E4dLlT9quuHpp58+8HhqakpcDyCcuZ5+w54bm0QzD1/mGPJ4exmGILT1NAG+kxoS5dGF
      x4qYCBP6mkgAoa+dKgEc2+bLf/gTq5vb2LZNdWeTSsumqeuYRgvDtDCNFtVaHaOlY1r3Zn+X
      l5d544032NrawrIsvv76a3Rdp9lsUqvVMAyDZrNJoVCgWq2KorfCmTplH8DBNEwss8z6qkV1
      dxMpbqBVyoRVi3wDQl4X/kCEan4DxzfIUxdngP2a/rZtc/XqVVKpFK1Wi48++ghN07h9+zbR
      aJTZ2Vk0TePKlSv88pe/ZHJysnufWBDuc7oEkCRCoRChYJLy3g7JsXGazSoreyUmLmbwozIQ
      DWOZJl6XjeK7NwmWSCTY3t5mcnKS5eVlLly4wIcffogsyzz99NNEo1EymQzZbBZJksTkl3Cm
      xPUAXWorrgfoTRziegBB6CKRAEJf6+1ag/ffg/JDVoZevASzcz0LRxA6SgDHsWnqBj7v0QvV
      bNs+eE5cLkOh8OANNps4jkOtVsPrPXp5xEnPRQXhYTpKgOz6GobiJeCykb1hasUckViCfLFC
      Kh5kcSXLcDKMOzhAJOg71jaXlpYoFApEIhFUVUXTNMLhMNlslrm5OX7/+9/z7LPPAvsL5gSh
      Ex0lgGU7hKNBcmu3qOq7DKUG2FpbIbtVoDE7QSTkY3cnR2u3xlOXzh1rm61Wi8HBQW7cuEEu
      l+PSpUusr6/z5Zdfsry8zNjYGMvLy2SzWZEAQsc6SoDRsTF2CiWGR8aR3T48bhfJxADxVINQ
      0IumW8QiYVRf8NjbvHDhAktLS8zPz/PUU08RiUSwbZtUKkUymWR3d5dwOMz8/HwnoQsC0GEC
      SIqLVDJx8ElVZdAbAMDnv/e04zjgdoP7IRe2KAqSJDEzM3NoDHdmZn8mORIR1w4L3dPbUaCf
      /BTEcmjhMdLTBNCbzXsPJPD7A73cvSAc0tME+Pv//t/Y2tgAQFXd/Of/8re93L0gHNK1mWDH
      cchtrVPIlzDZH6/X6toj37e2tsatW7eo1+tYlkU+nxdLoIWe6doRwDbrNC0vbq3M17ks0WgM
      qaUj5XTwRhkbSh5+j22TzWY5d+4cr7/+OnNzc5RKJRKJBMVikR/+8IfdCk8QjtS1I4CseKgV
      t6npNuPpAWq6gSLL5LJZtEbzyPdIkoSmaayurvLMM89QKBSQZZlbt26Rz+e7FZogPFDXjgCS
      rHLxvnIoAwP7/x0dHwOOLosiSRI/+tGP2o9nZ2fbfzdNs1uhCcID9bQTPD07x0A8DoAiav4I
      j4Gefgv/xV/+TJRFER4rPU2A1Vs30fV7/YFgKMzY1HQvQxCEA3qaALmtTWqVcvtxIpUWCSD8
      WXUlARzHZvGb60RDPlq+NFG3jcfrxrQcJMdCUT24lKMHnAzD4O23325Xg7Btm0AggGEYOI5D
      MBgUNUKFM9OdBLAtvMEosSAsbN4ma3tIBhyahkOruoflTbTLonybpmlMTk6i6zqffPIJkUgE
      0zSxbZvl5WXm5uZ48cUXuxGmIBzSlQSQZRdu2aJseJmdzlCv6QR8LiSgWFBRfQ9ewRkOh1lc
      XCQajfLCCy/QbDbxeDyYpkkgEGB4eLgbIQrCkbpzbiFJpEfG2w8D913O6A/sL3h70PIGSZLa
      V3jdzzRNBgcHuxKeIDxIT0+un3j2Mg73EsGliHN74c+rp99Ar98v5gGEx0pPE2D9N7+jlSu2
      Hwemhxn513/RyxAE4YCTL4ZzHBpaHfNOKUDLsg41Oeo5AKNQpbVTav8xSnUcx6FcLtNqtfbb
      GIfvIGOaplgiLZyJEx8BDK3IarZKaiBIRWvhWC38bgWXP0x5NweKiiM5yIqHoNeNbTZQA3Gi
      oaPLojQaDT777DNmZ2fJ5XLYts3AwACyLLO7u9v+4kuSRPzOOiKPx8PY2FgHH1sQ9p04ARzb
      xuX2sLOzi2WD1++lWK5CtULA58UxHHbrNgFXFdvyUi/uYMg1nn7i/NHbcxw8Hg+Li4vA/he9
      Wq1iWRbJZBLbttnY2CASibC+vk6j0aBarfLaa6919skFgVMkgDsYJ2kW8QxO0tANgn4vraaG
      7PahKhI4kDAMmoZF0O+lEYugevwP3J7f7yeTyRAIBKhUKsTjcRqNBgCBO0OoMzMzVKtV4vE4
      1WoVVVVP+XEF4aCTd4IliUhsf7H/3fKFqnpwosulqtw94VEjUWD/l14JeHGF7iWD4vMgSRJD
      Q0MA7XsB+Hy+A2VRPB5PuxyKz3e8CnOCcBw9HQWa+Ld/KYZBhceKKI8u9DWRAEJfO1ECVEt5
      tnJ7B567f8zfcWyWbn5DVWtimg+YCzAMPv744wPj/ZZltW8xBLC4uMjCwgK6rp8kPEE4sRP0
      ARzyxSqjY0PcuLZAIBik2nJolHIMDY+SK9Z44vwMyBI725u4JQXNlvA6DaRAgrH0/hj+9evX
      mZ+f5/r16zQaDUqlEl6vF7fbzc7ODi+88ALlcpl8Po+qqpTLZSKRCDdu3ODVV18V9wUQuupk
      p0B2i61sloZu0tSb5HI7xKIxKqVSu4xJo17D6/eh1TVsHArFIqXivbvCxONxPv74Y3Z3dymV
      SpTLZVRVxTRNNjY2yGazACiKgqZpVKtVstkst2/fPnCUEIRuEHeJ7FJbcZfI3sQh7hIpCF0k
      EkDoayIBhL4mEkDoa10sj25x68Z1yrX9hWzlcvnIdpVKhXfeeYfmnZtlbG1tdSsEQTix7pVH
      bxbxDUyglwrslCDfrLG+lcOu7yKFRpifmwBgeXmZl156iYWFBQDW19dZXl7mypUrvPbaa0xM
      THQrJEF4pK4lgOyNoa3exOcPkM+XiQ1GaCkOsiuB4rt3Y7ypqSnee+89gsEgmqYRiUTw+/3M
      z88fewhRELpFzAN0qa2YB+hNHGIeQBC6SCSA0Nd6ekHM7sIWltZ64OuSIjP83FQPIxL6XU8T
      oLZZRC81Hvi67BIJIPTWoQTY3lilbsokY0FUjw/DMPGqCo1SnooaYijso9EyUbCQWlWK0gAB
      2SDg379WV6vXcBotpHgMGk0U2cHl9uNWj9f5dRyH999/n0QiQSgUIhaL4TgOrVaLzc1NRkZG
      UFUVRVGo1Wpks1mmp6exbRu/349pmpTLZarVKuPj45RKJWzbJp1Oi1Em4ZBDCaAbFuFImPWV
      RUzJh+z24HKaBF0u6k6Zq5sKjtEkEVCwTIOqU8PSisRSaTwumUIuh+K4cKplQqqKXqvguEOc
      n508VkCO4+A4Dm63m3fffZd0Ok04HG6XRimVSpRKJVwuF8VikVgsRi6Xo9lsEolEcLvdLC0t
      MT09TS6XwzAMstksL7zwAplMptv/fsI/cocSYGx8nGq9wcjENB6vn6bewu9VMW0Y9rixLBu9
      ZSI7Ji63B1lR0OoNQgEvFjLRUBiP14ssyzhIGLqGoh6/koMsy3z3u9+lXq/z0ksvMTAwgGEY
      zMzM4Pf7UVUVTdNQFIVqtUosFqPVauE4Dqqq4na7yWQy7SOHJEkUi0USiURX/+GEfxoOJYCs
      uIiEQ+3Hd8uQ3J3KUhRwu90H3hOJ7LeXATVysESKW90vdeI4Di6fim0cfank/r73T5NCoRA+
      n++BY7h39x8K7e9XVdUDbe+WWXnQY0G4q6ed4LEX50RZFOGx0tvq0N98gdHQjtXWtm1CAwmG
      Z75zxlEJ/aynCfAPb/8fCpurx24/duEpkQDCmTrFuKDD8uI33F7PHqt1qVR6dKOHaLVavPHG
      G9y+ffuRbU3TJJfLdbQ/ob+c6gjgC0ZptZp88sHb+JIpzGoLvz9AuVnH6/HisetUbT9e2UTC
      pmllSA2ETxWgbducO3eOtbU1fvOb3/DMM8+g6zrxeJydnR3S6TSff/45k5OTDAwMcPv2bV59
      9VWCweCp9if0l1MlQKNWQvFFSA2P4Q2H8aWD1KsVkiNpFMmhUtjDLbuJx6LYZgvDMk8doCzL
      3Lx5k5mZGS5fvszo6CixWKw9NGpZVntZ9aVLl4hGo+i6LhJAOJZTJIBEZvZurf97w4uR6L0v
      XPRORej7nXbVtdvt5qc//SkAs7OzR7YZHh5uD4POz8+faj9Cf+ppJ/jpl1/FaNSP1da2bYID
      YvJKOFs9TYDRc5fO5IIYQTgtsTpM6GsiAYS+1tE5xsbqMobkIR4NgW3hchoU7AgBxcLvdaEb
      DopkUihrjA6ngf3S55ubm5w7dw6Xy4WiKGxubhKJRIjH41QqFQKBANeuXeP555/vyocUhAfp
      KAEsy0J2yxT38uhGE7fTpCK3WLi9wszMODhgWyYuT6D9HtM0kSSJtbU1Go0GHo+Her3OW2+9
      xYULF/D5fGK9kNAzHSXA4NAoPp+XWq2OoijYRpOwLRFQMqSHBpGBUn4Hd/DeCtGRkRHm5uYo
      Fou4XC5s26bZbOL3+5mamsLn87G3t9e+cbYgnCVRFqVLbUVZlN7EIcqiCEIXiQQQ+lpPZ5r+
      5n++z+1c5ZHtXvvnF3n5mcmzD0joex0nQKNepWE4DEQfvdqzXNcpVB5cFuWupm7SbDbJ5XJk
      MhlxYzzhzHScANmtTdRAjGa1iKJ6QHHTrBUIRuKUSmXCATeyJ8RA5GSrM1dWVigUCsB+Z6Ze
      r+PxeHC5XNRqNSKRCIZhcOHChU4/gtDHOu4DuD0+YuEghiNT3N3k5tISLo+P/MZtHLeXxW+u
      s72z9+gNfTswWSaTyVAoFKjVavzud7/DNE1qtRqFQoGPP/6Yr776qtPwhT7X8RFgaGQURZbx
      +byYgwkmJQXVpUAqTaPRYOzy93Gkk09szczM4Ha7SafT2LbN1NRUuwpErVZDVdUDN9sWhNPo
      OAHujusrioKiHKz/c/9FKY7jkIwGaLQeXBal/T6fG0VRkCQJVVUB8Hju3WMgFot1GrYgAD0e
      BfqPv/z+iSbCBOGs9TQB6i0bh+NNPHtdPQ5O6Es9/Y79YalEoWkfq+2/nIuQUkUKCGfrVGVR
      9nJbbGzvdj+ab9nb2+PKlSvtdTaC0G0n/ol1HIdaowmOxTdffoYSjmFoDl5Xi7puEo8PsLy0
      wvjUJLV6k8F4FFmWT9VxXV5exuPx8Omnn5LL5drVnwuFAqlUis3NTVKpFDs7O2QyGUKhEBMT
      E2LiTDi2U1WFMPUmhuRgGBYhl0RsMIXjaIQcaFb2kDBo2B6SAx4alTze2MipgvN4PKytreF2
      uwkEAoyMjCBJEoODg1iWxeLiIvl8nvn5eSzLYmVlhcnJyVPtS+hPZ74cem9vj3giAY7D6wt7
      J+sDhL3HamuaJru7u+1brj6qrVgOffK2/1SXQ595L/NuXX4HGI95SZrHHQU6WfdElEAXTqOn
      wyzzab+YBxAeKz1NAPPWW1jNo4vlyuFhXFM/7GU4gtDbBGj9v/8BuwtHvqZM/VAkgNBzna0G
      dRzWVm6xvtWdkuSWZfHuu+8eqxS6IHRDR0cAx7FxFBd6vc71r7+k1WpS0mWUZgFfKIk3EqGe
      W8WbmODSuUff/7dSqRCNRsnlcnz++efs7e0Ri8VYWFjgueeeI5lM8vbbb/Pzn/+cixcvdhK6
      IAAdJoAkySiOjayqDA9OomsVIqaMo4fwBUKUazqpkTE8oeNNgoXDYSqVCgMDAzz//POsra0R
      CoWIRCKMjIzQbDb53ve+RzKZ7CRsQWjrrA8gSYxO3Hfv3cjByyLT9/39ONMNiqLw0ksvAfuj
      QHeHNr/zHXGbJOFs9LQT7PnBf0Bq1Y58TQqIUuhC7/U0AZSxy6LsofBYEXWBhL52qgRwHAvT
      tE5Vv1PXdWzbptF4dHkUQThrpzoFcuw631zLobhtRodHaWlldit10oNxdvIVBoJuLMWHXi0R
      TiRwSRKBwH6F6JWVFSqVCpVKhaeffpp8Ps/u7i6Dg4NomoZlWSSTSba3t5mcnESSpPZ6IkHo
      ttP1ASQIhsKYZpGVW4vYrRYj06Os7RSxGhp6uU655WJybIjKXhY1kOTO9x9Zlkmn06yvr/Pe
      e+8RDAYZHh5mc3MTTdNYXV0lGo1y+fJlrl69ylNPPdXFjysIB50qASQpxPhECMdJYLRauFwq
      siLjknbYysPs5BzICi5FJre1STJ5766R09PTyLLM0NAQmqbh8/mQZZmvvvqKUCjEiy++iNvt
      RpIkqtUqg4ODXfuwgvBtojx6l9qK6wF6E4cojy4IXdTTeYBcNYthP3ydvyxJjMUmehSR0O96
      mgB/98F/ZaW49NA2XpeXv/83/7tHEQn9rqNTIMdx0DSt/djW61Sb3y596FCvH+/u8Pe7Wxn6
      7n5yucNLrvP5/Im3Kwj362w5tG1TLmyxsu6iVd4kFApCMM2fbq8wO5FCM8Bl65iyj9nM+Im2
      vb29zVdffYVpmhiGQTKZ5PXXX+fixYsUCgWGhobY3NzkZz/7WScfQehzHR0BJEnCpcik00PI
      iorP56fVbOCRFRR/iIFwAMM0cbvdJ962x+NhcnISVVVJJBLIsoyqqtRqNS5cuICmaY+sACEI
      j9LZ9QCyTHJofzl0/LvfA2AEYHay3SaR3B/HP+lo6/T0NC6Xi+np6fZzzz33XPvvU1OPvsBG
      EB6lp53gF6Ze5Fz64Wv7VVnUAxV6p6fftp9e+LlYDi08VnqaADdKX9GwtUc3ZH9m9ahZ1Qux
      J/G7At0OTehTPU2Az/Y+YkfPdrSNseCUSACha7q6FKJYLB4Y89/d2enm5tvW1tYOzAEsLT18
      ck0QHqSrR4Cm3mTj9jLhaITPF5Z58tIczfU1FJfKUDr96A0cU7Va5dNPP2V8fJw333yTl19+
      matXr+LxeES5FOFEunoECPgDDA8PIbvczE5NEAqHadXLBCLdvaAlHo9z8eJFPB4Ply9fJpVK
      USwWRYFc4cS6egQIh8MQDhO/77loKIzL5TrxPMDDpNNp0neOKE8++SSmaTI6OnrgTpKCcBxn
      3gm+fz32S0M/weB41xFblo2iHD5ARdxHF9kSX37hNHo6CjQSmDiTC2IE4bTEBTFCXxMJIPS1
      js8xNlaXKRYqjJ2/gE+GplZFVn1Ua3X8XjeO2cIdiOL3qgDcuHGDxcVFzp8/z9DQENVqFUmS
      yOfz+51owOv1Eo1GH7ZbQeiKjhPAcRzqLZNCbgvHspCsFg4KezWD1ECIZq1IkyJPXpwD9pc4
      7O7uEg6H2dnZad8KaWNjg7GxMQzDoFAo8Oqrr3YamiA8UscJkEyPMDQ0TKWuUW20CLj8KG4/
      irfOYCJG1aPg9t/7NR8fHyeTybC3t8fm5ibpdBpFUfD5fExPT5PP5w8sgRaEsyTKonSprSiL
      0ps4RFkUQegikQBCX+vpTJO2+Lc4+trhIELz+DP/rpehCALQhbIom+urbO8eLGFiGMYD2htg
      tw7/cUxqtRqffvrpgXIojUajq2uIBOHbOj4CKLqJN+WlUq7R0upojoWtN4hGB8iXqyQHokiS
      RDAYfOh2fD4fuq6jaRqtVotSqcTW1haZTIZms4njOMTjcVRVJRY73k33BOFROi+L4nKhKDaL
      N26wubZFJJEkl9tmfXWZxaVVCvltaoeKZR2mKAper5etrS3eeeed9t0ib968yVtvvcXq6irv
      v/++KIUidFXHw6CObYMkYZomiqLcGSZzcBwHy7LZ29lhcHgYGah+8zfQXD20DVf4CfzT/749
      lGgYBrIsoyhKe/jUsiyWl5ePvGPk4zDkJoZBexNHt9t2fAok3fkfrqrq/c8iSSDLCkMjI8B+
      30DxDsMRXxDZk9r/753XPB4Ppmm2HyuKgqqq4napQtf1dBTIO/7XoiyK8FgR8wBCXxMJIPS1
      UyeAbWvs7lYp5PcoFEsHXtM1jQeN+ywvL9NsNrl69eqhW6WWSqUHvEsQzsbp+wCOSbNpItNg
      de026aERVLfKtS8+I5E+TySmUKu30Ivb+AanuHRuv5httVrFNE2y2Syrq6tEIhFcLhfvvvsu
      r7zyCnt7e0iSxEcffcSvfvUrMplMtz6rIBxy6gSQ5CC6doNwYojzc7NopsJwMoRWP4fXEyES
      D5JKOpRDXlzBexNX09PT/PGPf2R+fp5Wq0UgEMC2bXRdJ5VKMT4+jmVZKIoiLooRzpxYDt2l
      tmIeoDdxiOXQgtBFIgGEvvb/AWOHYJPoZlV9AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Country vs. Real GDP 1820-1870' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAfCElEQVR4nO2d529k2ZXYfy9U1ascWCSrmDuQ09PT3ZMUrLCW1oorYQ0YcljLuwZsGOs1
      sP7o/eovBvwHGDD8yQZsyIINGAYMybuWNKswO5ogTeiZDuzIJtkMVQyV00vXH8jpnlZzul6x
      EsP9fegmX51659TjO3XfPefccxUhhEAiOaWowzZAIhkm0gEkpxrpAJJTjXQAyalGOoDkVDMw
      BxBC4DXg1Elgqh+y0taTaetB+nXPWnqA6zqoSnufcxwbTfNmWj9khXARAlT16NvqChcF4Khf
      VwVcV3i6pnvndNB1r/oPLztQB6j/8J/A1vVBqpQcEdTxSxj/6AfDNuMpOnwEEpRKpWdL7A8z
      MrsmOYid7Ty2++l3RyePSb2goxFACMHS7UXOPvc8W6UqmlklEI5RKZUIRyLUmxaVQo7YSJao
      oVJtCUK6ixZMMJqK9eszSI4Rq3c+ZLt+mdLDZcIRHVuL4FS2CKfGWF/L4ZoFstkxqkqKSmGL
      i3PjbFZcXrm00Bd7OhoBajsb2HqAh/fvEU+PU6lUyK8tce3WXSpNh2g4QDwWo2WaCHTCAZ2V
      pXs8WFnri/GSY4ZV4fZqidWl68STYxR2dthav89f/d+fsLicY34qSyozDmadrarFzMQ4t65f
      5edv/qZvJimHrQUSQrCydJfY6CTJaMiTfPUHfyTnAKeUj+cAqqqiKAoAt669jxoZZ35u4il5
      27Y9T2y9ygohejcJVhSF2bPzHb1Hy1yCYLStnBDi0UUaiqwAgTfZYdsqhEBBAS8fa4i2qsm5
      p449d+llT+fvJ4ceATpFCIHrumia1la2H97fiazrugghjo2t4C1kO2xbHcd5YgQYtP6ejgCH
      YbOxhi2stnKO66Cp7W++fsnuRbGEt5zFkG3dywMonm6qodvquiiqsjdiDUH/QbIDdYC/Xvsx
      +dbGIFVKJM+kq1II4Vo8fPjkDS3sFqaz93O9Xu/m9BJJ3+lqBCjkNinULfSNTQA2Hz4gHg1S
      8Y2hN7eJJkZZuvUhSnSS589N9cRgiaSXdOUADcvGZ9Yo1cA0LVKpBELzYwhBemIay2zhD8bQ
      fbLoVHI06coBJmfOtJUZHx8HOqvuk0gGxUAnwS+OfI6GW2sr57qu56rBfsh+7KxeIivSVu+y
      ruvuRdY8pBcGZavMAxyAzAOcnjzAQB2glf9rcIrtZV2BonrMQvZDtpNM8JBt7SgTPGxb3f1r
      eoRsHegjkLn7a2guD1KlRPJMDh2eWVm6y0c3buG6Do5js5nLYds2rXoN0xGPhhvbth8N0xLJ
      UePQI4BlWjiO4L23XkeNZohrDTZza9AyCIyFCCIw6zWqjRaJ1DhnZid7abdE0hMO7QDRaASn
      4RJLnUXoIQy1yY03f8ull75EJOSyW6wzOT23L+3t+UwiGTQDnQRXFv+dnANIjhQDdQC7/hCF
      9tWgruOgeghB9k12f12q4iW2PWRbheuC4q0adNi27sXgFbw8EQzK1sGGQS3L00017FYjg2iL
      4te0Z960Mg9wAtcD/MX/+d/c3dkepMojy3/5/p8wHpWNAoZN11VqufVVNvK7wJ6HNRoN3P22
      FzL8+WyW797gw5t391vIuJRLZZz9ayav3WDoegQoFHZxtCZOo4jiD2O1ijhmiPR4jEqtgWLX
      0YJJxtOJXth7olhfW6No+gi4VZqKH0pFWqEYM5lRVje3iGsmViDNC/Mzwzb1xNL1CKAoCpZp
      UqlUqVQqoLj4fCr3l9dxLZP11RXW1nO9sPXEoaoKVqPJ5vY229vbqDhous5v378GwmLxxod8
      cGNx2GaeaLoeAZ67eOXA4zPsJb5mZve+vWQ59NN8/ve+fvALL1zAtm0++9LwuyacdAY6Cb6Y
      yZIMh9vKDb/VCNDntigBjxEOSX+R5dAHIMuhZRi0LzwsFbA8RDccx0XTvLbR7r3sxw1aveUB
      +mNrOhQmIUeJvjPQK/zanUVy1cogVR5b/vDiFRKh9o+Lku7oyWp1q1rg2s1FSrXWU6/V6zV2
      C+0XwUieJr9yh5/+4lfUWvbvvOJS3lrn4XZ5KHadJHoyAtjNGg3LIbe6QiEaZuXmVabnL1Mo
      lcmmY7RsSCbivVB1qqjsFqg36tz66CqqX+NnP3mNb3/7G2zsVpkLK1Tic0ykIsM281jTEwfQ
      /AYBvYovYDCRSVHdmaJVLREMRdB0naBPPsseBiMSwdCrhGJJxkcCXLx4iZ38NqmxLLpiEQ8H
      hm3isacnd6Y/lubKxfSj3y9dufyUjMwDdM7k+YtMnr/46PfvfOfpRUWyZKI7BvrV/NnpOep2
      +3Jo4bqeqkb7JisEQuBxoXd/bB2LtG8jL+mewSbCxrPHJrZ+FPIAkv4jexZKTjXSASSnmkM5
      gHBdPvzgtyyvbeK6LpX8GmXTpdlqYVsmlu1gWyaVag3LbGE7jydqO/cX+dHP/h8rmyUcx+HW
      rUUss0Wj2aJeq+61Vmm12N0tUq1WceXkWdJHDjkHENiWjWOXWF12qGytoYxY1MslYj6HnQZE
      DZ1QOE5l5yEiOMZLL5wHwG41cRWFxfevUhuNsKVD8TdvUWy5bN//iGhqgvjZ5wmaZd56/Zd8
      8+//GRdm5VoCSX84nAMoCtFolGhklNJ2ntHpGZrNCkvbRWZfOEsIH6lEDMe2MXQXLfg4CRYe
      HSOSLzN/fpZ79x9y/tI811//CUV/huevfJZYcoSx6Tlqu3mcL3yZdNTfq88qkTyFrAY9gKMS
      BZLVoP2vBpWTYMmpRjqA5FQz2CKdX/0CSu0rQzWB526K/ZBVAMWj7NBtHbL+TmTVT8olU/CV
      3/emoI905QBCuDRbFkHj4KKsp3buKJVgd7fteTvpJNoP2WHr70R22Po7kX1Cbn+v3majjqL7
      CRxYMClwHOF5EdFh6MoBNlZXsDSDsO6iGjGqhRzxZJqdQpnxkQh3ljaYGI3hj6SIR4K9slly
      UhBN3nzjHeYvnGM9t8u5qVFW82VifgtfPEthbRGLBI7i8NmXr3hee90JXbmW4wpi0QjbW3nu
      3b2HqvtZX1niwa07PNjaJR4NspXPsbS00it7JScJ4RAIx2hUdnn7jbe4t7aNoQnuL93n7V/8
      iDJxClubvPX6W9Ts/lS9djUCTE1Pk98tMjE5g+oPEvDrjKZTjIw3iEYM6i2HZDyGLygXbUgO
      QA0zPzeG4g/yB9/9FhMTGTRVIR4L4wvFqZW2SJ7/DHPz8wT1/jwGDTYP8Jc/RvMwBxDs73vl
      5bx9kBX7/3qTHbatezNLL2c9Uram0/Dt73yq7IncJE8mwmQi7KglwgYaBm01m57kHMfxdPP1
      S7aztii91+8PyKWOg2KgDvCf/9N/ZP3hw0GqPJb8g+//MZdflm0RB0HPZhZCCHLrq+zuFLHZ
      +7ar1+q9Ov2pwzEbvPvuBxRLe32ULKtJsVAdslUnj56NAK5do+kY+OslruU2SCSSKGYLJdcC
      I8F0drRXqk4Ft2/dYeHiC3z41q8wUlNEQw2Kedje2eBL3/gG8aCsku0FPRsBVC1AtbBJteUy
      k0lRbVloqkpuY4N6w9uzv+Qx8YjBu+99wMjEGZJhH6ZpYtZ2uXP/AS3LGbZ5J4aejQCK6uOF
      T7RDSaX2/p+amQZkW5ROmTizwMz8J/885+EF+PI3P6WluuRQDHQSfG5+gdTISFu5o9EeHbyc
      th/6E6mkp/NJukfmAQ5A5gFkHqAvLN+9TavVfj4gXOGpKVW3srF4gsnZM57eKzmZDNQBcutr
      VMulQap8JuMTk9IBTjk9cQAhXO4s3iQRDWIGMyT8LgHDj+0IFOGg+QLofazp7ga7VeP1198k
      kRpn6twMqmMTDPixhYqwTULROL4jaruke3rjAK6DEUmQjMD1tQdsuAFGw4KmJTAr2zhG+lFb
      lKNGo15k+vwVRGmNa++8R2AsjlKt4ig6q7c+IPvi1/nqKwvDNlPSJ3riAKqq41cdSpbB/Lmz
      1KotwkEdBSjs+vAFj+7eAJFEhnv33yWenuIzs2eo2hYBTQfHJuxXSU+m259EcmzpzRxAUchM
      Pt7MOWwYj34O7e8KeVTzAIqi8dKrn3v0e5THUaCX0zJ7fdIZ6CT4ymc+v18T/mxcx0H1WGHZ
      jayu+zy9T3JyGagDGKHQsYitS04PA70bVv/bTzBzhfaCHbTk6JvsAcQuzpH5wy8e/gSSI0fn
      DiAEjUYdnxFEV9UDF3l82sIPa7eCmT++O0ZakzVAUC4VMcIx/Lp24Kji2Daqrnfja5IB0bED
      WPUCyxsVxlMRynUT4ZiE/Bp6KEZpKweaD6EIVC1AxPDj2g184RES0ZPRFqVR3ubDa0ucnZtg
      c7sMdo1kNIQeTpFbX0UoGn5cWnqQ0WQEmjX0RJbp8dSwTZccQMcOIFwX3R8gn9/CccEIGRRK
      FaiUCQcNhCXYqrmE9QquY1Ar5LHUKi9fudAP+weOK1wCwRAPlh6gCAvTF6KxuQ3OGpGRCXCh
      UMhjBBqsWibW1gMKYp3p735j2KZLDqBjB/BHRhi1CwTG5mi0LCIhA7NZR/UH8WkKCEhbFk3L
      IRIyaCTj+AKhftg+FMLxMWYyFqHoLKVqnWQsgtmoogYiGP69qJLVmqRUsxhJxqiWsuih2JCt
      lnwanc8BFIV4cm84N/bj/T7fk4ku3efj4wceX3xvcwshBFrYQI+2d4YjOgdGC/oBhfGJKQCi
      0Si2bRPez3V8TCDgJ7J/zxtGtguNkn4z0CjQ7L/47rEIg3ZSDi053sgqL8mpRjqA5FTTkQNU
      ijus57afOOY4jxdoC+Fy7/YilXoT2z544bZrm/z2nXdoWo+bnQrH5pO9T1fvL3L1xh3MltmJ
      eRJJx3QwBxDsFCpMTWe5deM64UiEiiloFHNkJ6bIFapcuXAeVIX85hp+RaPuKhiigRJOM53Z
      Wwt8/9Ytzl96kZXb19htClqFTRIhwaZ+BiV/kxf+1t+hXGlSqBdZVgW1yjbheIqri8t87+9+
      SyaXJD2ls0cg12R9Y4NGy6bZapLL5UkmkpSLRXZ2dgBo1KoYoSD1Wh0XwW6hQLHwOPs7korx
      29+8Q75QpFwu06js4gbi+NwG6+ub5HJ5FFw0VOqtFpVqna38JuvLa8jxQNJr5KL4A5CL4k/P
      ong5CZacaqQDSE41A02E5e+sYzettnJPba43YFkhBAiB4kG2W/2pmVHCqain90t6z0AdYPG1
      Dyive1gPcIp4+Xtfkg4wRHrYHt3h7q2blKoNAEqlo9P/56hT3tnkV2+8jbmfDMltbg7ZotND
      79qjNwsEU7O0irvki7DTrLK6nsOtbaFEJ7m0MNsrVSeO1bUtvvjFz3PnxiIKgtUHi4RT47z5
      y9f5/p/9a7KJk1NNe9TomQOoRpL68m2CoTA7OyWSY3FMTaDqabSg3PLnWUxPjPDGr98iokNT
      BIhGo/iNIC9eeQVNOZrdNE4KvWuPrmjMX3gegKmZp18/qm1RjgKx9ARfSU88ccy2bfSX5QL+
      fjPQK7zw1SvYjfb53KFHgWAvCuQhYdN1FGhW9h4aJgN1gMyFqWOTXR12JlgyGAb619i6vo5T
      bz8CDH2DjP3/PW0+fYJtjWQTJOZOdmvIgTpAda1Aq9gYpEpJF2h+/fQ5wObDZWq2ymgygi8Q
      xLJsDJ9Go7hD2RclGwvSMG00HBSzQkFJEVYtwqG9VcD1WhXRMFFGktBooqkC3R/C75PLC48j
      jeIWb7x3jQsXnsfv96MJm2giQaFQJr+xzNmFS5QLO6RSCcq1FrncJpnR1H5beY1GvYKrBihs
      bRAPR8AI4jiC0VRi2B8NOKAadHnpPqF4kvzKHWwliOoPoIsmEV2nJgTlloawmqTDGo5tURER
      nHqB5HiGgK6ym8uhCR0RDxP1+WhVywh/lAvzc9z7q4/kCHCMSC2MI0YslGgGUdlkY3ubN954
      l7kz51i4fJnth3cQ9SpuNEJt18bU/cwkbHYaQVSziBoexW/tsLTTQqtvcfm5V9ilxvWry/zp
      n/4xz/pKHNoWSdMzM1RqDSZnzxEwQjRbJiHDh+3CRMCP47i0TBtV2Oj+AKqmUa81iIYNHFQS
      0RgBw0BVVQQKVquO5jsZTbFOI9mZM7z/7ruoug9feIQvf+FVxqfnyOV3ufziKwjH5ObN2yy8
      ukBut8Z0JoW6dI+Zha9SKWyDFSE1HSSbDFIqNIgFEkSM9JFZ2DTQ9QByBDhepBbGyb4611bu
      OK8HGOgkePpvL6CI9h/ecR001ducoR+yQggEAlVpH98ftq2ucFFQPN1Uner3BU7+bvQDdQDL
      qiFct63cpzXXHZSsEAIhQPWw++SwbXVdgaLgzQE61G/bGtS8yXqz1XvScFDXdaAO8LP/+h/Y
      XVsepEqJ5JkcohxacP/OIg9WNzxJF4vHtx265ORzqBEgGElgmk3efv01gqPj2BWTUChMqVnD
      CBgE3BoVN4Sh2ii4NJ2zjKdkg1jJ0eNQDtCoFtGCccYnpjFiMYKZCLVKmdHJDJoiKO9u41f9
      jCQTuLaJ5di9tlsi6QmHcACFs/Mf9/p/3Pk4nog8+jkRfzrLJ8uhJUeRgU6CZ55/iZHsAYsF
      fgchXBQPIcj+ye5FgTwVow3Z1r0CN/BSDjd8W939a3p0bJWNsQ7gKJRDy8ZYJzARVs2vIexj
      0hYFbyPAsGyNTcyianJtQbcM9Aru3L2OWZFh0V4QHs1KB+gBXV3Bh8v3sZQAI4kouA66aLDr
      xglrDiFDp2UJNMVmt1RnaiLTK5sl+3z03psQTDM9niGRirK1/oDw6Bwh3yelmmxsNMlmj0b5
      8VGjKwdwHAfVr1LY3qFlNfGLJmXV5PqDJc6fnwEBrmOjB8LtTybpmEq5TDya4Pp7V9kt75Ke
      SiLuPeDq0hYXJyP4jBi1RoGRzIvSAT6FrhxgLDtFMGhQrdbQNA3XahJzFcLaWTLZMVSguJPH
      H4m3PZekc85deJHRsTi3GioXLj1HobFDo9Li4kKU585MIqwGd+63SMq+Qp9KVw4QDO7V+Uci
      kY8PEAZSicffNsGpvYZYMg/Qe8YzGVzX5blL86iqyghPd5jITp0ZgmXHh4HOotILlxF2+6zw
      0YgCCU+x5WHZqvlOfqnyIBioA4TT2WMTWz8ueQBJdwz0Cv/wZ9fIFett5YbdagTE/q7aXjKW
      Q7ZViP3E6tG3ddj6D5Lt2gEatQoNS5BKtK/2fO/OBvfWZR5AcnTo2gE21tfwhZM0KwU0XwA0
      P83qLpH4CMViiVjYjxqIkopH2p9MIhkwXe8P4A8EScYiWEKlsLXG7Xv30ANBdh4+QPgN7ize
      ZDO/3f5EEskQ6HoEyE5OoakqwaCBPZZmTtHw6RqMZ2g0Gkx//osIRTbFkhxNunaAjyMlmqah
      aU/2/3mUH0DmASRHk4GWQ5eqTVwP2obdaaGjtijD7grRSVuUYdvqOvu5jaNjq1wPcADHKQ8g
      1wMco/UAr90pUmy27wskECgem+f1Q7ajluPS1g5sHa7+g2QP4QCC7dwGTeFjKtPZ7iYt26Vh
      t3eAj/V0YlN/ZIet/yTaOmz9T8p27ABCCKqNJgiHxQ/fRYslseoCQzeptWxGRlLcv7fEzJk5
      qrUmYyMJVFUlmUx2qkoi6TuH6gpht5pYisCyHKK6QnJsHCHqRAU0y9soWDTcAKOpAI3yDkZy
      sveWSyQ9oO+T4O3tbUbSaRCCH13fZtfDHEAiGRR9nwSn03tb7AggEtBwPBVteapD668sXvfd
      Gq6tXu3sl/5OZIet/yBZGQY9ABkGlWHQviDKazhu+7YownFwPCY2+iErhAAhcLwsnhm2ra4L
      ioLwUo48ZFtd1wX12Y2xFN1AjQ9uzjhQB2j8+N/A1vVBqpQcM9TMFcL/+L8PTl9X7xaClaW7
      rK7nemSORLLH7esfcGd5ve96uhoBhHARmk6rVuPmtQ8xzSbFlorW3CUYHcWIx6nlljHSs1x+
      Ti7OlnjEKVKqqgS1Cm/84jUcYVJXohQfLHLm4isIzcfW0gdMXvo9Xrkw15WqrhxAUVQ04aL6
      fEyMzdGql4nbKqIVJRiOUqq2GJ+cJhCVSTBJB6gRGtU8BLJMzp1l9e51ojEfBdUAbMCH40Iw
      4Gt3prYMNApU/cEfyTmA5Jl8PAc4kVEgfeGbKBNX2soNv4239+a40tbetkdXY4OtGpB5gAOQ
      eYDTkwfoek2wRHKcOZQDCOFg2w6mafbaHolkoBxqDiDcGos3cmh+l6mJKcx6ia1yjczYCPmd
      MqmIH0cL0qoUiaXT6IpCOLzXIXr77l302SlWby0yP/88zZZJoVBkNB6k0BAorQqR1CjNRoNE
      Ig4CDCPQ0w8tkXzM4SbBCkSiMWy7wNLdO7imyeS5KVbyBZxGnVapRsnUmZvOUt7ewBceZf/+
      x7GqvPnLX6FXNnGFwt1ci2xMYydvUzdtqvkVWnqA7PTLaPdukJy6yPmZsR5+ZInkMYdyAEWJ
      MjMbRYg0lmmi6z5UTUVX8qzvwPzcAqgauqaSW19jdPRxt+jE1Dm+9dxlqoUt7t9b5gsvXSAa
      0PjwzZ+RcxJcPHeB6Mgo6ZEM7/9mjblpefNL+oeMAh2AjALJKJBEciqQDiA51Qw0E/zvf/pv
      WS4+8CDZ0TqnPsh21mzkONj6L7/457w08RmPuk8PXVaDChqNBqHQ3h5UbqtGTRhEjU8+Owtq
      tTqhUIiG1aBmVrtRKTkktmtjWyaKqqPtj/uNegMjFHzCdRzTxNU0z2563OnOAVyX0u46S6s6
      ZmmNaDQCkQy/fbDE/Ow4dQt0t4WtBpk/O9MrmyWHZGtzBVMN41omhd0iuqKRTBnYWpjyxjKp
      iVnuvvc+F7/+NcaDpyP30tUcQFEUdE0lk8miaj6CwRBms0FA1dBCUVKxMJZt4/fL/ayOCtvb
      Zfx2kdd+/msqpsWta1f59ZtvE05MsHb7KooePDXf/tDtegBVZTR7FoCRVz8HwCTA/NwjmfTo
      XhxfdocePpnJs2RnNDRV4c//1QJGKIhjvQCqjk/XmZ+fod5oEI6EcB1n2OYOhIFOgjOxCVyO
      fm/QPUmORb/LPTloNwkO+SMoqoq+n9uIxqIA+J6In6tEo3vHT0v3JpkIOwCZCDs9ibCBjgCF
      1g6u0n5oHXYfeyEEQghPN9WwbXXdvUUmx2F/AMd1UYdkq0/1k/Cnnjo+UAf4y9X/Rb61MUiV
      EgkAU+E5/uHZf/bU8Z5mgguFArVa7dHvW/l8L08vkXRNoVik1WwCeyN9T0eAZqvJwwf3iSXi
      vH/9Pi9eXqC5uoKm+8hmMr1UJZEciuW7N7m3VmA6oWBF5no7AoRDYSYmsqi6n/kzs0RjMcxa
      iXA83Us1EsmhSY5PMZaKYNoqit3q7QgQi8UgFmPkE8cS0Ri6rss8gORIMDs9zbkzj5u09X0S
      /MmQ04XEFaad9h3iht6+AwHiuLQaEaB4zFkM3db2bVH6pf+gCBDIPMCByDzA6ckDyPUAklON
      dADJqabrOcDD5fsUdstMX3ieoArNegXVF6RSrREy/AjbxB9OEDL2GpkWVu7y9r1lXn3lS4zG
      jSfOVSqXiMfi3ZokkXimawcQQlAzbXZz6wjHQXFMBBrbVYvxVJRmtUCTAi++sACAWatSrFVZ
      fO8jikmDu9tL+AMpbr73EZ/7/S9QX73NSjPKP/3eH3T94SSSdnTtAKOZSbLZCcq1OpWGSVgP
      oflDaEaNsXSSSkDDH3rcFiWcnuRrmUnKuR3uLa1zbmGeZlPgv3KBVGKUiLAJEezWLInEEzIK
      dAAyCiSjQBLJqUA6gORUM9By6Nba/wBrq62cEALT487H/ZDdeygUHjPB3vWjRdHn/rk3WclA
      6LotyvrDFTQjSmY09eiYbdv4fE/v32TX7kFzuRuVxxrFP9JeSDJQuh4BtJaNMW5QLlUx6zXq
      wsFtNUgkUuyUKoymEiiKQiQS6YW9xx7HavI/f/BDLn3pK5ybzOLYNptrKxjxEaKGRrlhkx4Z
      wbVNec0GQJe7RCrouo6mudy+dQtdqMy9fInF996hUiqytlNHE00CkTHk33IPzWdw5corRA2b
      mzduUtipMHc+w9+88TZJw8YJjpD226TnLksHGABdjwAjM9OgKFx5+QqapqEoCp/7/BcQQnDB
      cdnO5xlLy+zuJ5k5dwYjqLOVX+Tlz75ENGIwOjJGvVphp2ZR38kzmZWPS4OgawdQ9uPPTz7z
      KygKqKpGdnJv1z+5HuAx0XgMgFdffeXRMb8/QDyRJAvAOWzbHoptp42BRoHC83+Bqh797gX9
      6wpxWrrtHB8G6gAoOorq4WZxbRTVo2l9kBWuC4i+2Co5WshEmORUc2gHcN06W1sVdne22S0U
      n3itVa/zae2vSps5mo7D5soStd/5QqxUKoc1RyI5FId/BBI2zaaNSoPllQdkspP4/D5uXH2X
      dOYC8aRGtWbSKmwSHDvD5ef21gIX1zeIjSRYu3+d/FqFqUAL1e/jp69/wHe/9mVuXX+fluLn
      xtu/5it/709YmB7t1WeVSJ7i0A6gqBFa9VvE0lkuLMxTtzUmRqPUa89hBOLERyKMjwpKUQM9
      knz0vtTUCH/z818yNz5N3AUjMY7frjA1OoolBOOTczSbZYqz54mHZVm0pL/IcugDkOXQshxa
      IjkVSAeQnGr+P/EVkblUVTfbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Country vs. Real GDP 1870-1920' width='192'>
      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
      jDT/Hy/v994GNXDeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Country vs. Real GDP 1920-1970' width='192'>
      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
      qOskbXeFsCwLTVWxbBvTaCEUDZ++Nfms1+v4dA2haAT8Pv71n/+UmeW9WwrRTf7Ln/wDeiJ+
      dF3Hsiyq1Sq6rhMIBLBtm3K5DGxt8Xov/Pw0yK4Q99mVrhD3Ii2apqFpOy/Mdn7grvJMT4R6
      y+EO8q4nmbhpDtq1SbCmqvh8W2FYXdcfyj/09vbKrhW7gKd9gbwqUZbl0PeRI8B9ut4XqNqy
      7+7g+/RYtoXmbGNJBHcTYcru63Ij8zRyqgqxgHza7zaefsK/mimQa9heqty3xAIav3c23W0z
      Djyu2qJsri2zuLrReWskD3H9+nVu3rzZbTMOLI5HACEElXoDhMWNj99HiycxaoKg3qLaNOnt
      TXF7ZpbRo+NUqg36entQVVWWD7vAMAwKhQKBQIC//uu/JpPJEAgEKJVKtFotjh07xjvvvMOp
      U6doNpsMDw+jaRpjY/t7R04vcdUVwmw2MBSBYVjEdIVkXz9C1IgJaJQ2UTCo2wEyqQD1UpZg
      crjzlh8CdF2nWq3SbDZptVqoqsrJkyfZ2NgafVdWVmg2m/h8PlKpFIuLi5w4caLLVu8vdj0K
      tLm5SW86DULwf65uyjnAU/KoOcCToiW3b9/m6NGjOyIjMgp0n65EgdLprYsogNFkkIzpzN9s
      F+1NxN1iOMe7RLpppeJC5mnkArrz6dnEhGx74hRPo0BnBsIyD9CmnKSzeHoFzFs/x2o4K4Ww
      bRvbaU8bIRACLPXxT2ZFD+A7/Y+dnVtyoPDUAVrv/jfYuOqlyseihFLSAQ457VWDCsH87C0W
      ltc6ZI73CCF45513+OSTT7ptiqQLtDUCCGEjNJ1mtcr1Kx/TajUoNFW0Ro5QLEMwkaC6Nkcw
      PcbZqaOdsrmj3IuSFItFXn31Ver1OsVikUqlwvj4OPF4nJmZGcbGxvjWt77VbXMlHaYtB1AU
      FU3YqD4fQ33jNGslEqaKaMYIRWIUK036h0cIxPZuEuxewyufz8ezzz5LuVymXq9TqVTo6+tj
      Y2ODM2fOyEUoB5T25gCKwpGxB0JviZ3LIh9c2LdX26IoisJzzz0HbEVmjhw5suP9kydPPkpM
      ckDwdBIcePGPUVoVRzK2baGqTjeQFneb6j5+iqNofofnlRw0vG2LMvLlPZ0HkBw+vM3EfPSX
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country vs. Real GDP 1970-2010' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Entire World Population Data' width='192'>
      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
      lyDSuTWkTAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GDP vs. LE' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARyUlEQVR4nO2d23IbV3aG/z4AaOJMgAIPEAXRlGQmlp2JPTUV1dRcTLkqVZOLcc1FfJXy
      C+Q6r5J38BPkIpVKuSYVSzPyTCxaMkXJFEXxTAAEAeLYp1zQgA4NSyC42Xub/L8btSRyYe3C
      /nutvXut3Zrv+z4IuaToZzWgon583xfql+gxivaNYx3f3pkF4HmeCF/Q7XaF2Okjyi8AcF1X
      mC3R9kRPCpXHKvI7BU58O7MACPk5o4wARN95CBkFZQRAiAyUEYBhGLJdIJcQZQTAFIjIQBkB
      ECIDZQTAFIjIwBzlh/p7zZqmDf4EMPhTBEyBiAxGEoDXKeP+owMUJmPowUTKMtHp9LCwcB2A
      uKd9ou1chiekr96YRKHyWEXaA0YUgONGMGE00XHiqFcPgFwCRiQJ3/fheZ4wh1R9Qir6CaRI
      e/0xiorGKo/1PHwbSQDReBKZ3AxmCjmUU3FcyWfhui40XYfu+0Ly916vB9McyZ130hemqHWF
      4zjCfBNtrz8pdF3Mck7lsbquC13XhYndcZzRBKDpJkrX5gEAxdmEkA8nRAW4C0QuNcoIgLtA
      RAbKCIAQGSgjAKZARAbKCIApEJGBMgIgRAbKCIApEJGBMgJgCkRkoIwACJGBMgJgCkRkoIwA
      mAIRGSgjAEJkMFo/QO8I//dwCzOFDA4OGyjOTKHb7aJYLApzhCkQkcFoAnB9mBEPlaMOZtIJ
      7Ff2EItl4HmesH6AXq8nVASi+wEcxxFiS7S9/hhF1cqrPFaRvSd9e6O1RGoRWJEIrhRyKNca
      uFYswbZtof0AhmGwH2AM2A8wPiP3A0SsBG69/z4AYHJyUsiHvwlTICIDZRbB3AUiMlBGAITI
      QBkBiMphCTkNysw60R3/hIyCMgIgRAbKCIApEJGBMrOOKRCRgTICIEQGygiAKRCRgTKzjikQ
      kYEyAiBEBsoIgCkQkcHIL8hY/stfcWWugHrLQT6TRKfTxdWr4voBmAIRGYwkgKP9TWzvV5CY
      yqNzfIyK04QpuB/AdV2hdejsBxgPlcd6Hv0Amj+ixeOjOjw42Cs3MDszBce2kclm4bmukFLm
      TqcDy7LObAdgP8BZUHms0voBACCZSQMA0pmckA9/E6ZARAZceZJLjTIC4C4QkYEys44pEJGB
      MgIQ+c5hQkaFAiCXGmUEwBSIyEAZATACEBlQAORSo4wAmAIRGSgjAEYAIgMKgFxqlBEAUyAi
      g5H7AR588xdMz89gd7+OuZkp9LpdXL16VZgjjABEBiP3A+wcHEJLpTGdTqBS3UdUcD+A7/vs
      BxgD9gOczd7I/QDNegOa4WOnXMfM1CRswf0ArVYL8Xj8zHYA9gOcBZXHKrUfIJFOAQAWE2kh
      H/4mTIGIDJRZBFMARAaBCFDZ28LT9U3omoZUfhpLi6VQHOEuEJFBIAJYloVUOg270cFsSdyp
      D++CEYDIIBABTPTgmylkU20YAhdD74ICIDIIRAC752Jncw0rK08RZlLCFIjIIHCLj2ey+PDD
      X8C41UQsREcYAYgMAgKo7W7j0eYhurU6flucDc0RCoDIIJACpaau4Gh/DxPJZKh7pEyBiAwC
      c7y68RyZ6Wkcbu6hFaIjjABEBoEUqHDzb5GyNTSu7SMRoiMUAJFBIAJoRhQbq3/Gva9XIK4k
      6t0wBSIyGJrmJ5Np1HvHiIToCCMAkcHQJ13b22XceO8qPAAGAKfTxOPVVZjxLKBpyKUT6HS6
      mJ9nPwD5eRMQgO87yGRy2DqoD/5Nj1iIRTRAN3B8dITqObwfwLZtoWW47AcYD5XHeh79AIEZ
      1zqq4PvVJ2j19MGTYKfXhm8kkM8mAA2YLUzBcWxoug7d94XU3ZumKUwA7AcYH5XHGko/QCI7
      jV9+vIQX285ggRCdSOLmrZsAgFwuL+TD34QpEJHB0NuGbffw9OkPoTrCXSAig6ECOG750Ox6
      qNugjABEBkMFkEtbyMxeG71fUgAUAJHBUAFUGw2UNzZZDk0uPAEBNMvbODhso7BwDWL2UEaD
      EYDIIJDlVHf2sLu5DU2LoeX7SIc0MSkAIoNABIjlc7hx6wYWb1zFi9VnoTnCFIjIIFgNOlfC
      ldlrsB0H0Uh41UCMAEQGbwjAx+qf/wcvmjbW1vbwh3/+PaZS4RRFUwBEBm+kQBoWbn+EVLqA
      3//Tb5ELafIDTIGIHAJrgMhEBovXZrC9tQVxZUfvhhGAyGDoc4D9rXUc7Nf4JJhceIY+7O21
      W7Ay2YE6nE4Tjx8/RiSZQ6vZwuyP7weYn58X5ghTICKDoQLITk1i4+He4O96xEIsqqPZcVDI
      JFE9PBD+fgDRdejsBxgPlccaSj+A57nouho6jcOX/QB2B76ZwHvTV1CuHaM0vwDHcdgPoIA9
      9gOMz9B+gHa9it29KqZL8y/7AawEbt486QdIpTNCPvxNmAIRGQRuG7quQ4eLSvUoVEe4CCYy
      CAhgIp1HzDQRgws3REcoACKDgAA8p4NGvYamHgn1cFymQEQGAQFsPlyGNXcDabuL4xAdYQQg
      MggsgueWPkT0sAYUfhXq0YiEyCAQAYxoDNPT04j6HuwQHRG5v0vIqARPh15fxd0/3cN//u9f
      waSEXHQCKVCutIiF+CEWr9oUALnwBCJAq36I1cff48nGTqgvyOAimMggMMfNH9cAzWo51DUA
      ITIIpECGGUU2m8X0b34NK0RHuAgmMhgSASzUy7tYefR4EAF830etVoNj91Cp1uA4DmxbbHxg
      CkRkMOR4dA+dTgftzssSVrfXRq2yg/UNIJVJoVmvwoGJhdL8oPLyrIiy07cl2p7IJ9Ui7Xme
      B03TLtVYRWULvu8PW+e6mJhII5lIDHaBPLuDRs9EcXoS5Z1dOBBfusAUiMggEAG69RqebW/h
      73/1m8F/GlYScwUfiUQCf/NBEon4xIkANA2apgmpRdd1XVhNe/+uI8qeSFvnYQ8Q1w+g8lh9
      34f245wTged5wQhQ3tyGZzr4r//478EawDCjyOfzsCwL6VQShmEgEonwOQH52RMQwOytW0ho
      Fko3i6GeDs0UiMggIICth98BmSnUnj1jNSi58AQEkLs6h7jTwaGvY0KGR4SESEAA3UYD9R6Q
      T1mhdoQxBSIyCBbDXX8ftxN7MGJLoXaEid4VIWQUgsVwR2U8WlnF8oPv2A9ALjwBASSyV5BL
      Ao+Xf2AKRC48Q3c6C7MLKN0YcmjQOcIUiMhg6Kzb3Pge6yu7TIHIhScgALfXQse2sPTRQqgN
      MRQAkcGQY1EeomM4ePRkK9S3RDIFIjIIpPnF2x8hWT/G393SB+rwfQ+H1Roy2RSOm10k4hZ8
      30MkEhXmCCMAkUFAAGYkhu31e/j67ga++Nd/gQXA7XXRONrHi50KLNOHGTOgaRGh/QCu67If
      YAwuWz8AIK5s5if6AYB0fh63bky/0g/QRq2tIR034Lon5a2eK7YfQNRR5uRiI7pmbEhHWA/f
      3P0TsjPzgzWAYaVQKuqIJxKwbQdWLHqSsgjsBwDErQPYDzA+Ko/1PPoBhmz1+7h14wZ2a63B
      S/IMM4JsNgsA5/buYK4BiAwC0tS0GBzfhtfrwAnxxGbuAhEZDJ112XQC9VYDu7vl0BxhBCAy
      GCqA6lEZextVzM4VQnOEAiAyGFruE0/N4td3wm2HYQpEZDA8BUpEYVvJUPsBGAGIDIYK4GB3
      G+12N9Q3xVMARAZDBaCbLvae7YcqAKZARAZDj0Y0oikUSgkejksuPIHb7u7KMnbqR0ikpkJ1
      hAIgMghEgPRsEamWDa9bgzvsB84JpkBEBoH5nchO4ZefhHf3930f3aM2DjfKyC0UEEuFmXiR
      y85It13f99FsNuH0OtjZO4BtO+j1ekIc8HouNr56jOrDHbz44yo8hy/MJuExUobjO11s75Vh
      aTZsM46tF8/g6RYWSlfh+z5cd/zzI1zHgeuc/L5ru3BdF7529vWA6Jr2s4zxPO31104iz8xX
      dazncST/aAKAhvbxEdKFK9h+voXC7BQ8++Um6VnKU82JKIr/sIja8zJyiwUYETF9ASLLZvv2
      RKKyPVV9E/2dAoDmj3Dr8FwHzVYbsVgMjushFo3A930YpgnPdYU0s7RaLcTj8TPbAV72A4hq
      snEcB6YpbjtApL3+XVHUJoLKY3VdF7quCxOB44x49I9umEilUgCA03QBb25uYmVlBYuLi5iY
      mECn08H09DR2d3exubmJTz75BHt7e8jn86hUKqjX68hkMpiamoJpmqhWq4hEIjg8PEQ8Hkc0
      evLphUJ4RXrkYjNSBHgb7lsiwPLyMkqlEnZ3d3F0dISvv/4axWIRd+7cwZMnT1AulzEzM4Ny
      uYxIJAJd12FZFhqNBtLpNFqtFur1OqrVKj7++GO0221sbGzgiy++eKtPjADjo/JYzyMCnKsA
      HMfBN998A9M0kU6nUalUUCqVUC6XUSqVYNs2nj59imKxiGq1imKxiB9++AG3b99GtVpFo9GA
      ZVlIpVJotVpwXRfdbhdLS0tv9YkCGB+Vx/qzE8Bp6HQ6sCwxzwAogPFReaznIQBlHr+yFILI
      gAIglxplBMBaICIDZWYdIwCRAQVALjXKCIApEJGBMrOOEYDIgAIgl5qR+wGOj4/hOT1Uqkew
      bRvdblesI0yBiARG7gfYPajCMjx0Og6qhx4MY0JIP0Af13WF1siLjCie5wmtkRdpT3Q/gMpj
      Fd0P8BOnQwfxATRqVeipJNrdHtLZJOzeST/AZTge3fd9oRFKpD3RpRAqj1X08egjN8ToRgTv
      v38L0WgUruchYpqD9wMAYhoeDMMQ3tRxWZpERNoTbUukvf53KtK/kQSg6cagWeW8TongIpjI
      QJmVJwVAZKCMALgLRGSgzKxjBCAyoADIpUYZATAFIjJQZtaJfshByCgoIwBCZKCMAJgCERko
      M+uYAhEZKCMAQmSgjACYAhEZnGrW2d0Wnm/u/NgP0BHqCFMgIoNT1bbtbG3Biyax+XwNfiSB
      6/Nzwiau6Br5y9IP4HkeNE27FP0AIv0CTtEP0Cc7mcXK6nNMF6dhd3uDXgAR6YtpmkLrxkXX
      oataIw+ILf1Weazn4dupBJDK5PCLj7Mw+2duCqxF79/JRNFvnhCFyjXyIu2JtiXS3nmM9VQC
      0HQDUV3MgbOv8t3ONv79j1/h3z79R2x9/z22t7fx6aefotvtYnt7G/l8HnNzc9ja2kIsFkMk
      EuE7AogQwnoL6lvpOg6adg+268DzPFiWhQcPHgAALMvC1tYWlpeXkcvl4Lou9vb28Pnnn0v2
      mlwElDge3fd9HDebSCaTeL6+jmq1itnZWbTbbUxOTkLXdTSbTcTjcVQqFRiGgevXr7/VHo9H
      Hw+Vx3qh3w/Ad4SNBwUwPkq9H4APwogMlJl1fBBGZKCEAHq2gwdrB+wKI6GjhABaXQffrZfh
      UQAkZLgIHgGVF4ZcBI/PyC/KPg/u37+PiYkJfPXVV/jd736HarWKhYUF1Go1HB8f44MPPhA2
      gQn5KaSkQL7vY21tDaurq7hz5w6eP3+OTqeDb7/9FvF4HPfv38fa2poM18glQ0oK5Ps+Go3G
      STXej+eMtlotmKaJg4MDNJtNLC0tIZFIjOUTU6DxUXms0lMgz+ni4PAYk5nUoGRhHDRNQzqd
      fu3fDOPk/NF8Pj+WTULG4VQR4MXGOpyeh57fQySaxPX5Obiue/JETddfuxud5tr2NDw66OCj
      6RiMIT/TL/cd9fq1AZ7yd4dd27YN0zR/8meA16tP33X9qo3T/K6u66+VevffzdCPdD/1M6e5
      7n+X4/zusO/21TGcZY4YhgHbtqHrOgzDGPQGnOUaOGUxnKkBlWYL+aksuu2X/QCxWOy1pozT
      Xps+MJ10YJ3RzqvX/fcDjDNB37zWdX0Qxs9ip3/tOM5rx8GfxabruoPvQYRv/Qkm6nt4VaBn
      tdkXpqZpg+/jLNee550uArz+4gkf0HR43AaVao9rgPE59RpA07RXJtV4TjiOgy+//BKfffYZ
      1tfXEY1GkUwm4Xke9vf3oev6IOVwXRfvvffeWJ9DyCiE/hxgbW0NjUYDd+/ehWVZsCwL9+7d
      Q6FQQDKZHIQ9wzDw6NEjCoCcK/8PYOKjWZZF5AsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GDP vs. Literacy' width='192'>
      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
      HwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GDP vs. Numeracy' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAM30lEQVR4nO3dWW8b1xkG4HcW7pskSpSo1XLrGK0do+hdUiDoTf9V/k3/Qa7TqwCBi7RJ
      0aaJHCNFpMjRQu0SqdnOTC8ksrWlODOckb5Dz/vciIn5kSfOvDrfDM/hGFEURSDKKTPtCwzz
      I52jtO/P+smvH+c1UgcgDEMAgFIq1eu4rpuqPu37sz6f9akDQDTJtAlA2t8AROPQJgBEErQJ
      gGVZ0kOgHNImAGyBSII2ASCSoE0A2AKRBDvOk4YfMhiGMfoJYPQzC2yBSEKsAITOAf72TQ+d
      6RI82GiUbTiOh/X1BwCy+zSY9axPK+lrxApAoAqoWH04QRVnRz1gpgarUEcURQjDcPQzrTSz
      QNr3Z30+62MFoFitozWzgIXODA4aVcy1p6CUgmGaMKMIlmUhCALYdqyXu5Xneanq074/6ye/
      3rKsxG15rHc0TBtrqysAgKVuLfnoiDTFq0CUa9oEgFeBSII2ASCSoE0A2AKRBG0CwBaIJGgT
      ACIJ2gSALRBJ0CYAbIFIgjYBIJKgTQDYApEEbQLAFogkaBMAIgnx9gN4p/jHv19hodNC7/gc
      SwuzcF0XS0tLmQ2ELRBJiBcAFcEuhDg8dbDQrGH/cA+lUgthGL62HyAIgrEH4nleqhCkfX/W
      T379OOJtiTQKKBcKmOvM4ODkHKtLa/B9P9P9AJZlia8nZ/1k19/ZfoBCuYb3Hj8GAExPTycf
      XQxsgUiCNifBvApEErQJAJEEbQJgmtoMhXJEm6Mui2+VIEpKmwAQSdAmAGyBSII2Rx1bIJKg
      TQCIJGgTALZAJEGbo44tEEnQJgBEErQJAFsgkhD7Bhn/+vIrzC12cDYI0G7V4Tgulpez2w/A
      FogkxArA6f42fto/RG22DefiAodBH3bG+wGUUuLryVk/2fXjMKKYt9S4OD1DiAB7B+foLswi
      8H20pqYQKpXJfgDHcVAul8eu12E9Ouvf0f0AAFBvNQEAzdZMspHFxBaIJPDMk3JNmwDwKhBJ
      0OaoYwtEErQJQJb3HCaKiwGgXNMmAGyBSII2AeAMQBIYAMo1bQLAFogkaBMAzgAkgQGgXNMm
      AGyBSELs/QD//PuXmF9ZwO7+GRYXZuG5LpaXlzMbCGcAkhB7P8BO7xhGo4n5Zg2HR/soZrwf
      IIoi8fXkrJ/s+nHE3g/QPzuHYUXYOTjDwuw0/Iz3AwwGA1Sr1bHrdViPzvp3eD9ArdkAAPyq
      1kw2spjYApEEbU6CGQCSoE0AeBWIJGgTAM4AJIEBoFzTJgBsgUiCNgHgDEASGADKNW0CwBaI
      JGgTAM4AJIEBoFzTJgBsgUiCNgHgDEASYi2GC5w+Xnz3HezqFGAYmGnW4DguVla4H4AmW6wA
      mIUySgUDMC1cnJ7i6A7uD+D7fqrlsDqsR2f95O0HiDcDeJeIrBraUzXAALqdWQSBD8M0YUZR
      JvsBbNsWX0/O+smuv7P9AMVKHY/eewQAmJlpJx9dDGyBSII2J8G8CkQStAkAZwCSwABQrmkT
      ALZAJEGbAHAGIAkMAOWaNgFgC0QStAkAZwCSwABQrmkTALZAJEGbAHAGIAkMAOVa/P0AL16g
      UJ/BoD9A9/r+ACsrK5kNhC0QSYi/H6Boou8E6LTqODruZX5/ANazXt/9AL6DyK7h4fwcDk4u
      sLayjiAIuB+A9VrVZ7If4PSnH/D519/it+//AWvdq3sBFMs1PHp0tR+g0WyNPci3YQtEEm6c
      BPtegAgKXz7/K/x7HAhPgknCjRmgUDRRrLRhqv69DoQBIAm3zAAhIuXAHTj3OgOwBSIJNwKg
      PBfz7QUEBnCfv5M5A5CEGwGYWV7C0WEP7c4syhIjIrpHN84BQljodudhGDZCANY9DSTm3VqJ
      MnVjBrDsAuAPsPHt91ASIyK6RzcCYBfLqDQaMAJXYjxE9+rWxXAXxzsI/BLu87oMT4JJwo0A
      RFEIu9hAqWbqs1SU6I7cOMZ3N77GztkpTi7VvZ0AAzwJJhk3AtCYX0DZLGN9ZRbDQzKKIpyc
      nCDwPRwenSAIAvh+th+TsQUiCUYU41dv4A6wvb2Jkz7QaDVQiDwEsLG+tgKlFEzThFIKljX+
      nOE4Dsrl8T95SPv+rM9nfaw2P/QdnHs2luancbCziwDZL11gC0QSYi3Atsp1LHYi1Go1/OZJ
      HbVq5SoAhgHDMGCaJsIwhGmOf9psmmaq+rTvz/rJrzeuj8ck4gXALqLdvrovwLBLSTNdEelC
      myudbIFIgjYB4FUgkqBNAIgkaBMAtkAkQZsApLkCQDQubY46zgAkgQGgXNMmAGyBSII2Rx1n
      AJLAAFCuaRMAtkAkIdZRF0Uhjg6PoJSP07OL6/0AXqYD4QxAEmIthlOei/PTffy4c4iyHcEu
      WTCMAtbXVkZfjT78OS6lVKr6tO/P+nejPumSmpj7AS5xcmmgWbWg1NWy1VBlux+Aq0sprXHW
      k8XcD9DA2pKJaq0G3w9QLhWvWpYM9wMA6c4DdFiPzvp3dj9AAVNTUwCAYqGQfHQx8ByAJGhz
      6YVXgUiCNkcdZwCSwABQrmkTALZAJEGbo44zAElgACjXtAkAWyCSoM1RxxmAJDAAlGvaBIAt
      EEnQ5qjjDEASYu4HiNDv9xF4Dnb2evD9AJ7H/QA0+WLdHyD0HXz/4x7Khg/frsL0+wjNMtbX
      lqGUgmEYqVfzua6LUqk0dr0OqxFZP3n1sVaDRjBweXGKZmcOP22+Qqc7i9APRn8+XIKa9vs9
      Wc/6NLV3th/AMC2sr6+jVCqh0ZpGqVjgfgDWa1d/Z/sBTMtGo9EAABSTjy0WXgUiCdocdTwJ
      JgkMAOWaNgFgC0QStDnqOAOQBAaAck2bALAFIgnaHHWcAUgCA0C5pk0A2AKRBG2OOs4AJIEB
      oFyLvR/g4uICYeDh8OgUvu/Ddd1sB8IWiATEWw4duNjtHaFshXCcAEfHISyrgvW1ZURRNPpu
      f6XU2ANRSqWqT/v+rJ/s+nHvLxBzPwBwfnIEs1HHpeuhOVWH713tBxguh46iSHQ5dNr3Z30+
      62Muhy7g8eP3UCwWocIQBdse7QcAstkQY1nWRG/IYL18/TivEXtDTLVajV8wBp4EkwRtzjwZ
      AJKgTQB4FYgkaHPUcQYgCQwA5Zo2AWALRBK0OerS3CSZaFzaBIBIgjYBYAtEErQ56tgCkQRt
      AkAkQZsAsAUiCYmOOt8dYHN753o/gJPpQNgCkYREa9t2Xr1CWKxje/M/iAo1PFhZHB240uvB
      Wc/6O/t69KGp6SlsfLeJ+aV5+K432guQxX4A27Yncj056ye7PlEAGq0Z/O73U7At6+pfZLQf
      IFQhLnsXsNomCtXxv4Bdej0669/R/QCjFzctFE0r0Rv8kiiKsPvVFo5f7qFQLWL9T09ShYAo
      CflLLxFweXAOAPAvPXj9bDfbE72NfAAMoPP+MoqtCmZ+PY/KTE16RJQjd7XDMTbDMFBfnMLi
      VBHVajWTPpAorjudAZRS+PTTT7G3t3fjzzY3N0ePDcOAZVl4+fLlra+zubmJIAhwfn5+Z2Ol
      fIp1n+C3UUrBsiwEQQDbfn1COTs7w+7uLprNJj777DNsb29jdXUVrVYLjuOgXC7j7OwMlUoF
      Gxsb+OCDD7C/v49SqYRSqQTXdbGxsYFut4unT59ia2sLz58/x8cff3zjvW57/yRYP/n143yz
      yJ22QPV6Hfv7++j1elhdXcXi4iLm5uawu7uLJ0+eAABevHiBbrcLwzCwuLiIKIrQ6XRwfn6O
      Wq2GSqWChw8fYjAYoNvt4sMPP2SbRJm50xkgibR3itfhNxDrJ28GkL8KdC3Nx+BE49ImAEQS
      tAmAZWX7CTNRHNoEgC0QSUgUgDBwsdc7hOd5cJxs9wMQSUh0FejHrR8QeCG8yEOhWMeDlUUo
      pRAEAaIoGp2Bm6Y52icQ57FhmPjzX77BH5+tYLXTuPEcwzBgGMZbH4dhCNu2Yz//zcdKKZim
      OVYt8PpVjP//u4j7eLic923PGf75bY+DIHhtafovPf/Nx0EQoFAojFX75iGU9P+/aZrwfR+W
      Zf3scyzLGnUJtz1WSl19e/lbnnPb40TXnWwDOOwP0J6dgnv5v/0ApVJpdDn06oA2Rn8pcR4D
      wNMHs5ibrqNYLCaqHT5WSsG+/tr2pAefYRg3LqMlfR3LslIFIO34TdPMfPxJ/j+EYThaj5+0
      9s3x/9xzhuO77fHw7+9tz7ntcaIZYHgXjqv/0AgwTIQZfQ4wGAxGX8E+Dh2uQ7N+8j4HSLYf
      4HrNzvU/JXqjoSiK8Mknn+Cjjz7C1tYWCoUClpaWsLOzg+npaRwfH6PdbqPf7+P09BTPnj3j
      J790Z+59Najruuj1evjiiy9Qq9WglMLz58/RarXQbrdRqVTQ6/XQ7Xbx+eef48GDB2i1Wvc9
      TMqJ/wIRyqZTFBnIXQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Immigration 1820-1870' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Immigration 1870-1920' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Immigration 1920-1970' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Immigration 1970-2013' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Immigration vs. Real GDP' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Immigration vs. Year' width='192'>
      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
      eAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Life Expectancy vs. Year by Country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy915McS5bm93MPmbKyNDRwteqe5gx3bB5mjLN8GL6QNKMZ/1gaHzhr3N1Z
      9uxM6ytwJUQBKF2VMqS7Hz5EZgmgRBaAvhe3EZ9Z2+1KZJzwiDzH/YjPjysREWrUeEvhv8rF
      te3U+LnjUgO4SMlFBGstSqlXGoRzDq11LaOW8aPLuNQA9p5+jWncZfOHP9DpdBimhjgMKbKM
      j//6rwm14HneKw3OGIPvv9JiVMuoZbyUjEvMSlheWQEsng6xZcbqtRuMJynXVhYo7SuNqUaN
      nxyXris7+wkmn7B+bZU7H/4Vviv42//wSyRs0Q1+jCHWqPHnwyXriuLazTunPmnevAnAjevr
      f64x1ajxo+HVIosaNX7mqA2gxluN2gBqvNWoDaDGW42Lg2ARZmWwWSFBRFBKIYB+xQJYjRo/
      NS40AAE+/+ILPnz3Ll98/jmN3hrZeEx7oUGWC7/45MPqe6+BElHLqGX8FDIuLa8tLS4SxC1W
      r99Ci6PjdxgrTashiAjOuVcenHPula6vZdQyXlbGJQYglFnK4WDM2toaga/Y3hvwTidmXHDk
      EtVUiFrGz1XGhVKV0tx77/1Tn11fXwUgar7SeGrUeCNQZ4FqvNWoDaDGW43aAGq81agNoMZb
      jdoAarzVqA2gxluNS6kQbkp9cNaiPa+iRCiFA7xX3KdZo8ZPjUupEF9++SXv317n/sY+y90m
      B/t9mt2YvBA++7imQtQyft4yLi2v9Xo98jSlLCds7hqu9Vok2qMZuSMqxKvCOfdaOkvUMmoZ
      V5VxKRXClQW2vcqtdZ/VtVX2D4asdyImr5EKUcuoZfxUMi6lQtx5593qj14HgPW1ZQCixiuN
      p0aNNwJ1FFvjrUZtADXeatQGUOOtRm0ANd5q1AZQ461GbQA13mpcbADT9uciQpHnOOcojcE5
      i7F1Z9waP39cSoX46v59Pnlnld99tc/1lQb9wxFxJ6YohM8+/qD63htc6q5l1DIuknEpFaLb
      6ZAbn4Y3ZrevWWk3SLVHI5KaClHL+NnLuJQKocWROY/l1Vtcv7bC3sGI6+2QSVlTIWoZP38Z
      l1Ihbt29V/3RWwBgbXUJgLCmQtT4C0CdBarxVqM2gBpvNWoDqPFWozaAGm81agOo8VajNoAa
      bzUupUIYYwCwxiDiKIoSZy2lqakQNX7+uJQK8fXXX/Ppp5/w3//l/+PW+3fp7w2J2hFlKXz6
      UU2FqGX8vGVcSoVot1vsb26QWcdglNJpxmTaIwoqKsTroEO86eXyWsZfroxLqRC+1vjtZf7h
      76/j+Yr9/pgbrZCk7gpRy/gLkHEpFeLm7dMnxa8uLwIQxq80nho13gjUWaAabzVqA6jxVqM2
      gBpvNWoDqPFWozaAGm81agOo8VbjUipEWZaIONI0RcSR5wXOGorS/EhDrFHjz4dLqRDffPst
      H713j++++hO6tYLkKWErwpTCJx99cFQNflXUMmoZP4WMS6kQrUaDvHTEjYhJYViII3LlEwbH
      9IeaClHL+LnKuJQKEYUBhTG0etd4d22Z/mBCpxmSlqCUQin1Rpe6axm1jItkXEqFuH7zFgCL
      veqz5aXq/9RUiBp/CaizQDXeatQGUOOtRm0ANd5q1AZQ461GbQA13mrUBlDjrcalVIiiKBAR
      kiTBOUea5VhTkhfljzTEGjX+fLiUCvHdd9/x4Xv3eLbxPaltoG1O0IwwRvjkw/dfy6b4WkYt
      46eScSkVIo4isjTBeB0WYjCZo1SawDvmVbzJXI9aRi3jIhmXUiFazQaleHSbIUvLyyRJRqcZ
      1FSIWsZfhIxLqRDr128AsLhYdYOIowiAIHql8dSo8UagzgLVeKtRG0CNtxq1AdR4q1EbQI23
      GrUB1HirURtAjbcaFxqAiLC9vY1Yw87uPiZPePj4GZPhAZs7Bz/WGGvU+LPh0kpwlmUIQpZl
      bGUTGuJ4fGBoKodzPZxzr1ylc84dnURTy6hl/JgyLq0E7+9sEUURm8+esr62yt5gzMJCg3H2
      +s4HMMbg+5faYi2jlvHaZVxaCf6bv/07AK5du/ZKA6hR401EHQTXeKtRG0CNtxqnDCDp73P/
      /hfsDbKfajw1avyoOG0AhwdsHuwy6Cc/1Xhq1PhRccoAtHaMx47FxcZPNZ4aNX5UnDKAqNXB
      LxPS8tW2n9Wo8XPBKQMo85KoHVOk9Yb3Gm8HThmA2JLSWLKsMgARYWt7C3GGH354QJElPHj8
      lPHggM2d/Z9kwDVqvE4cFcJESvqpxXOa6zd6R1/Is5z+9hYLyy1+/8Uj7q402Di0NJXg3GJN
      hahl/KxlnKgEezx59DWJiTFlCQRUVIhtvNVV9nb2WF5cZPNwxEIvrqkQtYy/CBlKptO3SMnu
      zoi19aUrCbbW1gZQy/jZyjiKAZQKCM2Q//e//ZqDYfpKN6tR4+eCE0GwYE3GJMmw7tWbENWo
      8XPAqTWhVBEr3SaefrUDyWrUeFMhItzf32Q7fUI3WD5pAIqF3gLXvCaLnfoAsBp/WSidwxPh
      yfCQR8nv0Nqwk+8/vx/A8fv//i88vPEu/9Pf/Q8/zUhr1HiNSEvDNweP2UwfEHttcjdAe1U6
      VOnitAH0nz3lg199irirZYJq1HiTYJ2ggGfjIV/1/4BTh6AdhRqjTiQslXouBuitr/PP/9d/
      4p/+1//jRx5yjRqvjkGW83D4lJ3sCQqFZYTSJQo4r1Z7ygBGe7us3L6H/1wMbMuMhxtb3Lqx
      yrPtPqu9mGEGN9aX/0yPUqPGxRARcusY5imFtWxOttkvHqJ0itLV2RZnpXJEhIbpsyqGQ/Rp
      A2j2lrBfPyQpHCedoHH/kMl4j999kfLuapON/oQmNRWilvHjyzDOsTkZ8myywdDsgUpBCQoH
      qprpz1JHZ3OEkMCO+SWWUHssufK0AWSTjLgbk4xSWGkdfd5e6OFv7bC+0uLZwZBer8Ekl5oK
      Ucv40WQordmeDLh/+CWl2kcpwTsl9sXdvSKC7zKW7YibwMgIHe0R6+rCjgpPGoDw9RdfULbb
      dLqnN8R4YYNPf/mr6o+7r/QsNWpcGeOi5POD+0zkMUqf7drA9AQYl9FyGRbFMiX3tIfnhzjn
      aOvTRqKUOl0H+ODD99jTmn4/4fpyixo1fkyU1jHMCzphQOBplFJsj0f8Ye83iDdAPaf5IoKI
      BSBwGesu4abWRNqbfje49J6nFpGlWzf543/5N371d+++rmeq8RZCRDBO8OdkFIgID/sH/DD6
      hkIO0DRoeAs0vCYHxWNEJ2ilj76Ly+jahGUsbVWtCG3t4/vhXPfLTUlqhMhTpw1gsLXNk+0n
      3D6csLpQn4FUY34M85yHg2eULic1KYkdsBzd5uPerTNjACdCP8sQgR8GG+yX36C1pYomR2SM
      yCwoD2S6Q9e5kmUz4D0Nseeh1NVjz6Qo+GN6j8RbI862TxuAH8fcvHGbVms+S6rx9kFEmJSG
      3aTPIB9gpESh2cs3QE+O3RQP9soB/237Cfc6H/NObxV/6oOP8oLP97+mbx4DglYWfVmHKjPh
      Q5lwzQtQz/tCF8A6y24qbJtFAuUYyC0yfx0F5P710wZgTYkf+nz79bfcWv3r+d9Kjb9YiAil
      dQSepp9lfH34Pf3yWZVvP6GHZ03GSoFVB/ww+VeeTq7x/sJHjMsJjydfImqCN0dbNhEhNn1+
      oR0tb76JWaRKzQ8Kx3f5dcbeLZxW6OetTD3nAoXNBhs/POaf/vf/c64b1fjLxN5kglKalu/z
      +f4DtrNHBKpBIQOUztBzeB5OHGqar1FKKNjk8/42SrkzMzniSlpmxBKGkfIZqYBSBazZER9o
      TaAvTqWKOPq5Y7vs0HcLCJpcLyJ+PLvB9HtCvLXNwmGfYbdzck9wxuGw4B//8R9JBxNYqrNA
      f+lwIuxOJhxkfQpXcLN9jaTM+Kr/74gyKNcGr4/yBMPwwj6aYjMWXYJGiHC0xbGpAoZel1mO
      XuvT7XYqIwHfTvhQMpY9H6XC6b+V5JITe/4LhVYRIStL+qVP4iKUUhzaNkN9C3TwQklARJA0
      xfo+rd19PnvwiADIDvonV4CCf/v1v1Kg+OxX/3BKQDEZ8N3jpywtLrN3OGSt12CYC+/fu32F
      113jp4KIMCkMW5MDxuWIUgoiHTMoBkzcM7Suqqybe/dRCMozKMCxf5R9OSmryrXntLBoBIvi
      Bo6u9lFKwzSUXRfhSbnHhtfCeO0j313E0jYDbmIQYFF5RN7plKVWmsbJzM/0v8PC8iBbpK9u
      4nQTNcs0nbFAiAhev8/1x09ZHQxxniZ0cvTVWOR4T/BFSA+3+erxU7ywx51OwJZTtJVw8+ZN
      rLVXCkrOgnPuRf/sR5RhRarlWhxKa4wTAq2mmYqcw2zExI5RwO32dXrx+fslnHMkxpKUBWut
      q6+ixjn+uPsDoe/T8tpYsbSDFqutFt4c71kE9pKEQZ7w7uIyWim+PtjkcfIFSmdULJn5ICKV
      r+IKUD6+y7gpCetKE8+ZgRERnIIH1rDpdfDEckcSburg3ILWWTIE4Uni8VA+warzOxe6osAf
      T1DOsbh/wL3dfXwRRORMPT1lNwePvuFfv/meu/f+Rz79YO3ocxVENKIGC90Gz4YTVnsxo1y9
      NipEUZYUAgpF5GkKa/lhsEXsRVxvL6KVwtcaTytyY3k2OmSl2aUTHQdFVy25OxG2xyMejx4z
      LA9QStPQbQrJKF2KpyIESylDtDZHAV8+zPm71mfnGv39vac8mnyJqJL17EM+6N2lFfovfP+s
      H8Q64Y+733Fg76NFwbQ/mUs1/qBH5DVp+V3e792hG0dHcowTgmlE+eXeEx4nv0fEMrafshgv
      spH9Cc8vqbT5YrUTEQIzQpQix+eGHXNHKxLnaCuPyLtaetw5R6A1H2qPm25CqD0CNb8MEeEw
      M3xf3mTi3QKtjzwcEcFZC0rhjUasPt1kvT+k5dzxUyoFSp2aIGVGGFLqZFeInF//3/+Zh5Mh
      //S//G+sdOYb5OvoCvFg8ANf978DFD4xjhLRI0AhrolCoQlp+G1SO8CpAc41WYvu8vHSO4Se
      x0GSsNxqHqXaTr7AncmYjfFTxuWIpt9EEBIzIZddtLZH351nFXEu5G9X/iPLzRdnodI6/nnj
      v6D8/vTeIC4m0j2afouG12StuYpxlgfDB4ReyGq8hqc9kjJhO31GzhYi9txxzGSux+/yzsId
      no522Uye8fc3/gYR4b9u/lfwhjjnUMpDnI/2zu7058QSmxGLGDwRdnREIIZfKCFQirEt6Xrh
      lVd4EcGJRSsPEZlrZRYRkrJkUPq0PEPDB60Uj5KIR+5jlN84+h5JwsLWDr3BkFaeI0rRKs2F
      dd/ZbyvOEfo+4dIixeHhSQMQ/vjrf2GsQz755JcsdedrkPs6DOCHwdd8N7p/5etEQLk2SvkY
      GRLrdT7qfcRaq4M/XZ1+6O/y7fA3aK+4VN68blRXf8AnS+8jCL34eKLYGBzyef8/c9HrcK5K
      gWg1y0oc/9tMz6yzaKUvVDwRcC5C6wIQlvyPCXXIVvFHlOK5Gc/h2Qk9KWiJrQJAFC0lrOkA
      Pb2PnWZKvKnvPe/7mCnvTtEkl5DUhSR0WVGb3G1MiIPz05ciwrgo+SFd5FDfQXQDxKAlxZOS
      0lvESdWDypUlSz884N7uAfEVGMhSltUzihDEMa0P3kNpjRhzMgYQtp884vHmJms3PuLuzfl2
      hf2UBnASsx/LOU3IEp1gESfCoXl4FOSdBRGHuAJQiPJQOJRYnPJQ4ohczgKGllgEeKKbGN1F
      xEPh86ulv+N6ZwER4debf2JgvsNzCZFYEr+DvmK1UlzB7alLligPD2GCx0g3EOWjlXemYTjn
      gXgolRDbMbEzHAY9lNIslwd87Okjxb7qO33+s0Fh2TctchdSio/BY6zWEK/5/MvFN/vc8x9y
      o+nwpvnT0pRsZT7bdgWLT6qWXrz2uXt6gwH3vn/AWprPHztYS+B7NG/cQHfa1XVKnXp/p1oj
      PvjhMYVkDAcZ3JzzLq8BHhZlxgjgVIAWw7pLKJXmQMWIUggadIC2GYuS0VchzmtNsw7H0Nph
      2OPQ7k3/nj2fmy7L/vRvQ9dOuE7BwlTG0FqaWhOhKcThoYj1rORe/XhiUx6r1jSlV/LHg39j
      WPwCX/kMyk165pBPfY2nFI/KPZ7pJkbHKHU6DnDOoJQ+Gn/lNpTcM33ueOEpxRMRUhmTO8dY
      4KluUEyffWbA2osRMSyWfX7heYjSPDT79PFeSvlnMNYwKS2tQDMs4Lv8OhPvRpVuvMy2laLw
      lviWJZ6Otrjnb5A7jyf2HoW/zgs7r3gxNnJ5zrVvv+fO4eDSI03FGDTgN2KUUgSdJcK1VdQ0
      BlBnrGZzZYEuwutYAYr+HykGv0GAQiy+0oRT/9FSRfAGYSKOttLE2qcUxxNb8lS3sEoT25zc
      b6H06eW22gE04AYFbRQpAgJNpejo55Xy8iW/FMe/SoD4nRP3mP235BfmgGX/2C1yIoydIRFH
      iuJQBWiEO1gKhH08BEUollUl9HRwqd9sxfHUGjZUzIrkrCrhc90F4K9lREcH0xhAIXDk4pyH
      mQoopRBxPJ54lBLQVmMe2dskeg3fDTG6C/psd+YoILUWneVESUK22IPwhDGLRXjRtRMRJElY
      erZFbzAkaTVJmk1K3+PO000W0+yF9yHOgZkmJwT8KCReXSVYWjxT0c/7bd8YA7DD373ctWJx
      IoRohmJ5gMdQN1E6AoSF8oDPPI0/xww4r8/7wBRsqQhQlH7n6AcNywH/QVm8Hymla6arlFKK
      701BDnwy5cqcJaOiD7ujtOK4dGyVC4xcG0Fz3dshcQHP9GegPJyz6DPKviKCMwbKEm0t2lh6
      u3usHRwSW0swzbUPfY8fblwjuXkD/VyGzlmLHo3Q1rK4d8DtvX3icxqynYpnypIgDIiWlggW
      uqgwBCfgXRwznZThrK3u73k/fwOY4SjKFyERy8BZFLDmBXMv/88rjYjgnKV0lsIpnEA78I4U
      3CD8zikyv+qmfafc446e+ejygns2L0pTIgh66q+e5/efGrsIDsFX1TtIi5xGGAKKrcSxZVYo
      CLEEWHwEjdWtUzP6yZXgvPfh7R+wtrXN8nBE6ByeVIXX857UOcd+q8Gj27coVldAhHh3j1tP
      nrGcZmguS8xWMhTgIbRu3sDv9a6cmZo9iykLfrO7x761rJ1Mg74sXpcBmMFvgerlO3H0M0vk
      Cc3gNPtPxJEUJY0gOPXjXLUQJiLkpmQnDxm4DhqhqRJyQhLXQCEYPHLaGNVAVICgucMXvN85
      DqozZ/nBOQyKDzXY0vE47zJxMR/EO3Sj+dmLIsJeavmmuIvRTZRYNJYGIxb0GK2EAMNKlBP7
      Z8sd5SXfZOsMWWGZZ0Sq4Jn66FzX5Sy4oqjKZZ5HvLdPb/+AcbdDtz/g9hy++ClZ09/FAlud
      FmFpWM7yuY8nFRFUWdJYWSa+fg11RV1z1tIfj3mSJjQ9n+0iZ2dmcvNWgvPJkO+//57W0jVG
      oxGrvSajTHj/nduvxQA2dh/y/eZXKCU0VE4uESN9A0VJy+3g4QiUoa1TBrZJX92kKQfcCZ6x
      FldGY2yJfw5VtjAFe3nA2DVoqAyUInERO+46pbd47ox3Fjw74G8bX9I4I7XnxPHbwRKj4D0A
      tJ3QY5MFPcZXFo2j4VmcKAa2QawKFoICDaTW42m5yL66gyU8fxwiaDemJfu0dcW9aemUG9Mk
      yh+GCxz6H8z1LCKC5DlekqKcxfR6qDzn/S+/Ji5LRmHIeppdGuu+IHfqnxNcHs+cHIsyJX4Y
      YYucmTcUNmKa79zDC+dlgkp1f2CYJHw5GLBDVe1/hRhA2Hi8AVrTRl47FeKH/T2+2du58nUK
      R8c+IVAFA9tl3d/lbjwi8o9LIsO85Iv8XTJvlXmqoPM8yzX3JWv+kFwCbjSPG3AcZobfl399
      8Wwrbvp1DQjKVXl8VIBMU6bzjmMG7TJ+GfwBBfzB/E21Wp2QIdaiJhP8osAzFs85tHO0hyPW
      +wNiWynMQRzhO8dCcXxC0KXjqAoSaBHCThvl+3hxjN9qku3skg0GcF4dYHYtQry0RLS2hgp8
      cK5ahYzFazWrFieXjMMaw+54zNM05dBaQEhRmCP+0Yn34RxRFJHn+XyrmQi02h0iz/Fw85C1
      XoNR/voOyNBanxmwXa4EmrG+B4DTjmdqnZ1sxDKbLHiTaqud/RgTLJ255B7NFmkKSiFhCNbi
      ZTkohTaGMMtopBlhnqOdY/v2TXYWPmFHAHHo9HfcaFXvYcOsV8qfZXhphltaPOMZnhuJPi44
      Kqolu7G5RVQaxNNYrclaTUyrBboK9PTz71s3+aZ8j0Am4AV4/QHdvX3619bA97n79XdcG0/O
      97en7351qvizv88MpI3B9zRBq4UOApTvo3y/CkifC3Tb7TbxeEz65BlFkaOmE5OUJUEUES0t
      ojyN3+2igxN1XK1PBc3P0xiKPGdrMuGgKEitJdCavrWMp7SHk5VIPb3eWoNWGs/TvPfB+4Rh
      yGQ8fjNigIcbG9x/+D0ohYlj/Czj2pNnZHFEf3UF5/mIp3FxjB5PWN7aZrS0SL6yfBzZX7Lk
      O2urmdD3QECKgoWtbW7s7NEpSgRIPI9IHOF0/VW8GNw96bTZ+KvPjlJtnh1xSz8gdSE76j2i
      J1t8tPGU0AkPVpbYu3kD12ygpspbpRqrLIryvNP8lPGYmz884mZ/cCqT5IDU01ilMFqzvbzI
      cGkJ02wgSqG0hxdUChNvPOEXDzfQzmE8j0Jr2tZyFZxkXypj8LTGOofnebRu38RfWJh7hZql
      Y02/T/L0Gdr3ady4jtfpXEmG1poyz/n68IBHpaGYKfsFsNbiex7Ly0t0ul2stQRBcMQZk3lj
      gMtu8qoGkPzud2T/9u8IYKiUbibRUfEXHZD5XpVmk+rvnVaDx3duYcKQZn9AsrqCbpymcIhz
      NJ8+48bWDq2iIPN9FBAZQ2PaQ3KGefxmC/z2o/cxqyuIc6dmY5sXfPab39ObKtzseSaBj1MK
      oxVZFKGdsJAkZEFAv9tBlKKRZqyPRoQyJycJKJRCFBzGMQ//6jMQ4ZPf/oHF0lyJxsCscZVf
      uR9RHKHDkHI8oXnrBn63ixQFKgjOzLFfOM7nSWhc7s48jyLPeTYa8W2aHs/yZ8BM6wKNRgOF
      otGIWV1bmzIETqZBXTUZvilp0JkBvNT9qZTBc4408Hmwvsbw2jo0YhBh8YcHfLS1O1fWYV6l
      OQgDkijCNyU//OJT9JQe3Xr0mM8ebvzo1G4B7q+vYsOAzzaeVa7U84pnLUyDw5n6aN8jXuzh
      d6qiXr63jw4C4ls3z60lzDV+aynLkjAMq0LcnIZoypJJntGKIvxp3HAwHPKbwYCJ1qcU3xpT
      Bdhe5X7GUczq2iqtVuvM+x1lo4qS6OmYqIQ0eMNWgJO4aiB4VAegmhkngV9ttijKi3cyzTIW
      gFQzQqUsTJm0WqODAO1Xmz2KyQSm/qoAj3tdnnz8IeQ5n33+Fd28QDmHshYJX45JSVGcUl4B
      CC5Op5aA0aoKaI1BIYiqlCYMAuL1NXQYVi6gUtVM7l1cX7jMAMQ5EKly/cmEZ0lK6iwTJ6TA
      utZ82uvRajbPvY+IkGYZ3w8HPClKMqUIRWgDkVLsiFBybETWGBqNBssryzSbzVO6dyZHylro
      p/jjEgk8/NTStCeSDW+CAWS//wPpv/xLNWBxKIF4sYczlmIyZspeqIJAEcJmg2I8QU4syXP9
      WNZWyzyAMfi+d1RRxAnlaIjXaOJNVw+0rpb9Ey82efSYdDw5Tp0CY88jcpZQQFtD+9ZNdBgx
      efyYMi/OVN6zDFyMIYwjmnfvoMNwmiURXJZRDoeIc4gx5IMhTuTIEOH4x1dlSfveHbx2G9Pv
      44qS6Nr6S2XqznqneZ6zORqxneekzlFSrcLpOa6Jby3vhyHvLS0ShhVFpCwKng6HPM0ynAgD
      oLzAtXHOIc4RBAE3b92k2TyfOCfO4UoDKJjkNA9KIqvPTce+EQbgHj9GPXoIIogxp7IAYm31
      uXPYSYLXaqLDsFKE7R2S3b2qaqo1TkAFp1nhIoInQrzYw2u1sGnVzUDHDfxu93hLHXP63mXJ
      4Mv7SBC8oMRiDO3r14hWV47ubScTzHBUzUTOYYuy6kvfamHzHJMkVW4/CIhXV/F7C5fmzsU5
      XJpiRmNEHGY0Ji9KEKE1LRi9yg45N01tC5CmKftZxmIUsZdl3E9TsjkC0CNZ03G0nOPjZoPC
      Ob7PcpI5ZTjn0ArW1tfpnVEBnqmvKwxePyMcG0JTjX1GEzk5DhFBC3iBjynKN8MAZOMx6tGj
      l7rWlWXl2wYBdjgk3dyizAtUGFa7m7Si88H7L6TozpQ1p9LkW9uYyQSldbUaTJ/fE0fn449e
      TFNe9ZmuGgNYy/CrrxGEhU8/QT0X9J17nQi2LMnKinrRbjQpjeF3uzsUAguex4YxFNOVV+DC
      WXpmOL7vV2nGZILWx5muI9bgGUpcuTYxzWaTJEnJ8xwnjsVej/Vr1450TERweYke5viJQZtq
      Z1dgwZez+UAigisM2qvS7csf3cFvxhSDyZWq2m8kZvlj5xxBr4e/sIBLEsrhEKU04erKlcvn
      JyHTH9baKekuDImurRMxfbHffU+eF2AM8Y1rc8+MrxPK82jfu4sr8jOzNMYYxmnVR9+KYKe8
      oX5R8qwsyadjXu0PMCLsAyjFjjHHscjJAHS6Ks/qN57n0ektsLi0hDeNK5RSlGXJ0ydPGI8n
      +M+5gcaYo2C82Wpybf0OURyf2Dgvp2ZtAFuU+DsT2gl4onihM9xzr15E0EB7dZFosYMrDH4j
      xJtupQ26zflWAFcm3P/2Metry2zuHLLaazDKhfffufNaVgD76BH88D0A2vdx1rA5GBL7Hkut
      aTeBaR7dGkM/mbDQaOKfcHdehgtUFAXb4zEHZYFGseD7ZM4xsQaFwogwsZaMKq4cDBEAACAA
      SURBVMgU4K8aMfdWVo/lGEOxu4tuNPEXuhhT8nQ4YlwUfLi0RBhdbQ9tnud8dbBP7gRPKQKt
      WfB9luJ4ui9aE0bRuT69s5ad4ZBnacq9dpvI8/jt4SH70/FfxUBnOXw3rQFYa4jCiNXVFdrt
      9lFt4zIZaZKwtbVVTRRAEAasrKywMK0nXCbD5CW6n9IcWkJ3/j3FuWo/QFzFcGE7pnVjFe17
      r0aHPnz6kMejDE98bnai10+FuH+fb/9YlfKbVMo2mspsOoenIECxEAQcliV9pWiJ8H4cc6fX
      w/M88jwniqIzf+Aiz9kajxlaS2fqCo2NYaMoquBtinkyT20R/uf19VPGdxK/33zGg2khrSvC
      O40GS1FEoDVKQeQHFRU5y4j8gMZ0zMYYdkYjvkwShryY0dCAms5o17TmeqNBNwyrhgGeVz07
      8GBvjz/kOU4ET4EvVVbsKpCp4pdlSbfbodfrMZlMaLVadBcW5rrelQYvDE7RGPr9PkEQ0Dqn
      W4YrDWQlRAE6rH4nN0xpbmdE8twkKwK22uQiIgRRSGt9iWixgzqj5dzJ3zYZJqRpQaMZzbsC
      pHzz/UN6vUUOBmNWFyoqxLt3b76WFeD+l1/w1Z/+dPULReiIECroO+GG7/Nxt0ur1TqquA7G
      I/51MCDh8qBrrlVEhF+EITfaLYrS0Ot2j17seDLh/9nfxz3/PkSqfjty3LA7VwpfhBZV0S/l
      OJMy72qmRAChK/AP6+uA8J+2d0jOiQGq/QBVRwSZPm8jjojjGBFhNBqjPc29e/cIw5Aizy9c
      bWbyxDkY5QTjEm0Ezwi+02SRkK/GeM34QhkuK/D3M+LEEYjG4DCe4DxFXCiUHKdBxdiKILfa
      I+w20YGPOEFdsB9AnCNPC4LAZzJK2dg+xAH+m0KHPssArK06I5wX1Dz/+ewH95xjXSmWoghE
      +DbPyc/tsFDtYjr5CgQ5aunHdHYNAh/fr3aPDUdjQs87Uui/X1hgqdtFRPjj1hbfTQs0bpq2
      uypEBGMMemrA1b4AjXdJEP+O1jS05suynHJfLN50zIiw0FvA93y8aSColCJuNAhP1CrstP4x
      +z3PMiKbF+hBTjAxaCtoUWg5PwAtnSXpaNxq63hWLwz0E8KxrdLaVk99+vMDbCXgBz4L964T
      tBtzeR3OOoaHY/YORqRFiaf1EbNg+rLfjCA4DEKCoGqBVxYlnuexdv0apiwZDIaIOKytzokK
      Ap/FXo/RaExRFC8ohtWaZ8CzYtoF4kQB5eS+UBFHs9FgaX2dVrtVbaSZTAijiHBKvVVKvWCE
      m882GQwGlRwF/z4Y8CtrmRjDxrQAdfPmDcIwZGPjydEY5/nBrDGEYcC9u+9WVVQRnAhZmjIa
      jY8Uezweo6bB5wwPrUVbixPH2toqnW6Xg/0DiiLn5q1bc01SnjfdhjpKIfRQgY9NMvTE4Bo+
      elLQHlgC0ZcGoEcyUXTHUCYjJj0fbYXWyBK452Scc72I4HsenesrxMvdC6kYtjRMRimTJEcr
      xTjJSYqyWlXPuuBNWQF2tzbZ3doEzueLzGZGb0ogExHGoxFb29tYa4njmMl48oKyOWeJwqiq
      HDYaZHkOQBSGBM9VaudxPYwxfPvNt9UPIXL0X5TCWsu1a+ssLS0djXkymTAejY4OE8yLAq00
      cSOmLEqSJEEQwiCg1+uxuLR0aR3AGMN4PCaZTBCBNE0wtpK/2Fvg2vXrc6dB3TjDH5fowmGa
      Hqp0tEeCU0IaQzNT+GicVLypi1wZjENphed7eFFIMU5OdWW+iAsk1hKEIWGrQZlmmLxayZqL
      XTp31tG+d+pezljyrKQsDForkiTnYJhgnJxpTCczSnkyxEqGpxpvngFcFSeZi9ZatjY3GY5G
      VcpZhIWFLrdu355vyTzPb7YWsVXZX4cB+/v7ZFkOCMPR+Oj5FcL7779/NEu9bHLAFAUKVfm1
      c2RaZkYJwocffYTnnc56OGORtKgUVKaxg4A/MTQzdbRp/rItkUfvxFZbFLXW1Rg9TbzQprGy
      gPK9ozHbrGDwaJN8kr0QmMrUrQEIWw06N1bwT7g24lx1H/+4uZaIUCQ5+/sjBpPsXGV/HrY0
      lEWK54WU5Rgb76I8cIV+Qwxg8xlbT55UDaM8r3rwfooLNKo9DcKm6TJnLTLKUK0IHZzNGbfW
      kuc5iNA4h4dSFUdK1DDHz6pNKibSaCt4hatoxk7wSsFzVd4ZYNTTqPXukYyNx4+ZJCnWGK7f
      uE6v00UfpvippVhtoJtnB5GzFOOpSrJzyGFCc6/AUxqL4DSYWGPaFSUcX6PjFzlGo9GIPMtY
      Xl5G+ineuMAsROBr4q2Uhrm6Uc7GyDTIFGuJmo0qAO3NnwY145Th423KabXaDwM611cIF9tV
      vKUvToU65xDj2N8bsNufnO3OnAFTlOTlIVYPIDAo0dWRqifqcm+EAfS/ekT/T99V9GEteChC
      W42y0K7KWGjBhhovdzSsR6EdaddHlhsoz8PmBV50NvnM5iV6kKELh4s0COjSEU/c1J+9eMY7
      iUJZxnfbeGFw9PyHBwdEcUy71UI/7tPJq2KQwZGHgg2n70cE8RTaCkHqMB6YVqXYqrREE0ts
      zuatHJX8EdJQMG0fF/vVxDA1CgC2R3T707ObFdNsxwW0iqnrMvVvAKHZ62JLQzYc01zsEi92
      KEYJYadJtNS92A2iWnFMYQgbx2xQESHb7aN8r0pVnjMpiRPUCYNwxrK302d/kGCcOzeTJ04o
      sgTjxjhSQCM6R0UWpd7wtijDLx8x+vzBla8TEXJtEa3wS8gaUK4cz7ozH7e9lU2DrldPg4oI
      w67CLoRgHLpzvGzbSUZnIyWY5wSJVxzHbCxCNUkkd9sAtB+OCTm/8DNLgwIoJ7TWFomXF/AC
      n2KUoAOfoF3tqbhoUhFXpT+rTJpjPEoZDBNKYzHOYQVaUcC1tQXiS7I2zjpG/Qn9/pi0NDSj
      gGYjIgx99g5GjLLi1LM4aymyBEeKiKlauJBClHGerf/sDECsO3dpvCgNasWRRYKJfUBoDh3B
      BYTomW+PCKKqDtXVPDjNAvkeXhjg+R5KK9L+GDsTp2C4HqIXmtWs/WRAe1IploJqZr9qEco6
      gjjE8z2ssbjSYksD/sWyRrHD+oqFEVNSoa34Two8pWgsLaB9Dz2NK1CKoN3Ai85P1Z7VFqVI
      cg4Px4ymPrggOJka1hnjUyIsd5usrS/izdKg1jEZJozGKQCTtCArzYU8I601zlqy5BDj91Gh
      Oe/rcz3LDPPtCTZj/vjFY25cX2Frr39EhfjgnTvzj+AC+FFAGFXLpc0LvMCndXsZk+bkg0nl
      A1qLLarqYnNlgXyUUKTZCzwfT2laBVDM7HqagbCuIs3N3ppUtOrW7SXCThNxQjlO8BsROgym
      dGj1gp+rN3YY7/ePPmvu5EysQ5eOZgq+1vTevY7fjBk92SHtjxDrkFm8Nr0uiEPMdCvmdI3G
      8z06t9eJlrunMieuMOSHQ2xpcWVJejhGlJx69naqcFXfNTo31wgXWmS7fUxW0L13/VQW5Xmc
      DH7FCaP+mDAMCBshk0HCeJLSbESMJxkHw+TclOJZsCLsjVIGk4xrKwtY6zgYTMjM6W2a1hjy
      fIAlRRPhqQilfDwvBK3IkxFG70OzYM7TV8+FMwYRh9Jz7gizySF/+v4ZYdTketN/7VQIORjD
      /ujygZcW7R/vDCqGE0YbO1XRqRGRjxLk+bfjhKgV01pbwm9GmLSoZsUoOCJFHY1jDiqEWMfu
      59+frQRO6N1ZJ14+pguIkyk/fdrzyFTPoMMAsY5ylFSfhT5hp1ltzr9kHLPrynFazcqTlCIv
      qsr42hKtGyvzPctU2YejlLwwtFsxZWnoTzKUUjQDn6Qo5w46z7zHeeOQKtsl4jB2jPEPUcFz
      e5dFIbb6n46utq/5ecw6wYm1XL9xi0arw8HO1nwGUKRjHjzaYGlphd0TRyS9e+f1UCHs3nAu
      AzgLJ9OgYiyTp3uk/RHWVjW/1vIC3XvXL1aoEzJOsg+R6sXZ0mJMVTGOmzH54ZByqiSTg8FR
      is/3NEuf3KtcjGnm5GWeJ59kgMLzq2KXusT9ccaw9/kDBFj95btoz8NZh57ev8xLJqMUYypG
      q0xdl3GSk5bnK9ZVCIYigi1KRBzOGZwr8bwIL4xe0A9bGtJsF4mHVHnZi1kqr7I1U4mj01mg
      2e5iraHRahM3WkdjfiNigHK7T/nsAIAg8DCl5WB/RBD6dLvTjgq68sdNYRgNJrTaDcLGcYD2
      fO9HmxVVrrt1Ng+lUrScw/6YJK0qh1EYYKyjKKdnZEl1RKjjmMq+3muxdnP5SMbg+6ekowSs
      o3f3Gl6rwc5OnzQvuba6QHuh9WIOXARbmCOffPaZM5bdnQG7/TEwjUEUNAKfTruB73sEgUej
      3Ti6boZiOMFkBVGvw8H+kMEoYXmxQ+B7PNk+pDyn7+ZFOK8uYvIcYzOqnFQVQ1kmEOaVQk8X
      aXHgsgCfDoHXIYgiyjwlc9uouJjbh5+7qGcMYRDQaDRRShM3W3R6i2j9imzQi/A6DGD76yds
      fbkBgK6oK9WyO10+Zxm6yPfIjau6fAG9Vszaeg/tadIkp9mKX/B1RYRsnHF4OCYrSqJp+rIs
      DeO8PHVi1lyd4RR8cO8aQWN6mqG1ZHsD/Dgk6DR59MMWo+K4dWKoNVHowzRQ9H2NMVV7R19r
      Oq0Iz9OUpWWU5BjncBdVgkWIfI92M6LZiFAKwjCg0WkgImw/3Wd3mMw9azrrsGU1cwdRhDgh
      y/p4OiKIm5gix9oU32thXUHpDiDKQMtcCnx8MgtIHlTBq3c1lXv+WZw1KBGCIMIPfBSKMIrp
      9pYI47MzTm+0AWzdf8LWVxsvda03zdyU1tKMAtaWu7S7TfS0gjjcH/Fkpz+XHzuv0iy1G3Q7
      DUxp6a0e58WTYcL3j3eODyV4SVx1yfeV4r17a4DiuwdbVaeM59qAVP521TENBKU8jM0wuo8K
      SlCCZGE1e0cFOIVLI3ScgydgVaX0V3y0K7tRpsR7ru/pURbIGBpxg97SCq3uAmd1rr7qON4I
      MtyrwApUHE5IS8ujrUOinQGNuJrpB0l+6bmIp9igR3lydWI3mEHEIDiCsMXBGA5GybS7gqK3
      UrFB9/aHOKrUn7NVVueqEBGKNEWpqru0Uh6e71+YxTEiPH12QOh7lM5RZBNKOyLye2jtk5ab
      EKWcOiNPgCrBcgTVPHGMlCeoZnJMPvNfaZ68EOIcOEu326O7uMJk1KcoCpRS5FlKYQ2NuMPS
      rbvEjdYrJV2MdXy+nTMsFDdabwgb1LmCbDIApfF0iBND6fooCQi87pQyoPECn7LIKcshvtci
      jJunNrXPkDtHnuQX3lNEKLOUwvZxKgNRKAlBWURVRyahBeVZCI85JzZZoOVfO/oRnu0OKEtD
      URiGaYHJc3K7h3g5QbZCFHfOdMtMUaI978hIRKSqvuZ7uKiP8tRsskYKH501UNOWYYFu44XR
      qThgnJeQl2TJATbeQ3DkMkKsQjXci+7KK6YSz3unzlrE2WP6ypnnCziUc7Q7CyAQxjELS6tH
      nkSj1T4t01k87+qqWvHDHLtjw+bE0fAVu5lip4hBKfb79s1wgTbu/4FHX/y2mngdVVZgSrI8
      8l1EIcZH+QblC+KArEmol9HapzQJYdjGD1/sClEkE0rp4yjQVD3zRZUvVA7nCraMInJ3Cc84
      K1icYzR5hG7l03uDFB7KzvoICQoPlIMgR6xG2yZK+ThXIkGCChwil7V4ASk9sF7FbbEhrdZN
      xFkm5iE6sq/UFWKGi6rJzhhmKy9SNaZqdxdoNNuEUYzWHlk6Ydg/IE0mlNagPR+xhl5viZX1
      m3M3D5g7nnGOflKykwi5hVEB/dIjE//suErekBVgBqU4de7U6b8F5R8f96k00EwobFIZR2wx
      ZYg/XiSKqtK+iJBNDjHRLsqTaUmsWuZfdgJUvlAke9hxCyeGZmvlaBXK00kVIE6lKwUqslSd
      c168p/ItMKqqzif+/bIpSenTckVK0mQX0Kjm1fLlVZGxqsJ6fjCdnQUnDrSHNeU0peshztKI
      G7SnacXqGRWe77/gtwO0Ogs0WhXvJ08TBod7tNpdWt2rH3BxEiLCOC1IDaRGyAwMC9jPFRMX
      ntrAXw2Ss1+qUm+WAbwMqj0V1YqgI4OVXSblASqfFrni9MqB22WQxhhD1bArnWianeWqkiwH
      oGfq/ONBKXDxIeLUmVXS2bZFcbNuDhVZLwxDusurRHETEcfgYA/P91lZv4lzlsO9HVrtLmHc
      IJ2MCKP43CzLxeNTxM0WcfPsvcDzwBhLPzHspsKziWJgA9xZBYQrvvr5DECE+198ydqNNZ5u
      HrCy2GCcCR+8e/dqd7vwFvJCs9nzvmdNWR2efcZOK6VAhRbCdK77OmuqGU6pKthV6pjPD1Xs
      4VdbIrX2mExG6Nn5AwpstMd4XCAYiKt7OlftH/BeaktkNSNbwxEVY5btqFyPEn3GbKs8UN50
      f65zNOIGaZqA1rQaTRYWl/GDED8IKz4QxxTzGWazOlS09OX1G0duQ6c337G5LwMRYZyVbAwd
      BxmsNargfKfqWo+HsJv7pBIeK/xLzjEignGCc4Kn51wBRvtbPNncxcYNbi002TKKdlDte53t
      dHoVBEHI0uIyYRhxuL9DWZY0W23KsiBNkqqhkaq2ILaabRaX13DOkSVj8jw7quAWeU6STo4V
      dAZnj4ojaVJxi1DQbDRZWF2n2a7acxhTVrOj1kfvdxbMzbC/84yDw4NjxdEg8eGpe62uXSdu
      tjnY2STL0mpsRQ5T2dXXzBFNYNaFQStNp9Nl5fotAMosoywLsjQhTca0Ogt0F5cZD/uMh33S
      rKJCaM87CjZ9BXc++BSlNWWeURQ57W7vhXc+890v+u1me5uvAmMsWWnJLbQCRRT6L8gojeXJ
      wLCXKRYiGBbCkyTATNXx2XP5i2M6hVzuH56DwlgER7PZ4MM712jEIYNRMicXyJTs7ewSNUKe
      7QyODsh4586N1xIEj7afMtl5CjxHzJr+QPP0jjnqQ1/kbD19RJImaM/H15pb994nmPalnK00
      wAurzVytEZ3j4bdfYpxFnMM7cfqJM4Zr12/RXTyuFM+exVrDZDggSycAtLu9ir1qLUEY4Xn+
      dLa/Qlc3a3DGMDjc47B/CAjXr9+m01t6bUHwyb5As/smWclh5sgtFBZyC5mF1MDI+pSiERS+
      cizogm5UKfpCqNhLHd+PfDLxL+3ScXIc8z5LaSyiqhY02vOIo4hut8XiQos4CvB979SxsW9E
      FuikAbwsnm8HXuYZk9GA7tLK3Cm0eV90loyxpmrA+vTJA7Rf9QmNPJ9b737447dHF2HjwTc4
      a7n7/idHSnteBmc2qRhj2U8su4kwMXC7DbGv2JxIRcHQjo3EY2wUt1vVpLGbKgbGx874Dld5
      lpmqXTGGOOtZnJNp1bzacBOGAZ1Oi5WlLp12XLnIJzfW/KUWws6CUoowbhDGjcu/PAdmSmOM
      xfc94uZxnnplZZ2d7Wf4vs/q7Xuv5V55YQj8ajUwZtZv88VW5uIcubEURli/cRdx5kyZzjn2
      RgUbY+jnkDuNp4RCNPkJv/pJdlpBTyrN1+MTAl86hfbyyQHnKl6WH/i0Wk0WFzu0GhFxFKC1
      wptje+ZZeCMM4CAV7m9mOIGGD0FFpiTyIPLU0XvzNeRGGBZVkKRUtQSnBjIjRL6iG8J6s8qG
      7GfQ9IVupDlIHTsJDApF7AtLUSXDCkym2dVQC7lTZKYaA1TLe26ZKovmw3bOJ+vHBLvF1Wt0
      F1eqDTNKczDOeTQUBkXlj0Plb3/Qg/VuVG2hTCyPhkLhIPaqZ+6E0Is1z0aWLwc+WgmhKsnE
      QwENXeBTFeR8VZVHMqvIxMeKIlaWhgfGFQRaWAiFj5Y9Ak/z2y3Dk+y5rnmzdf+kzrwirf1V
      UBqH9n2azZg8r3aA9XrVwR3WWlrNBgudBlFYKfzrwhvhAv37/af8+qszXKDzhnYR2UmmXdig
      SpMBnhKsXMK5ZT7Xw8PyH68ZFtsv9vy01vLPj0oG7sUimcLR0wWp0+QSvJirFkEjONTFZLg5
      4Zwj0o5IOcYueCnlvsrWTOeqprsoXQXl/391Z9YjR3Lc8V9kZlX1MRev5S53tZJgS/IhPRh+
      8JP9Bfzsj2oDfhEEA4YM2zpsSasDkndX3JPnXN1dR2aEH7KquntmSA45XGo2wSFmuqsysyqv
      OP7xD/L70JSoivXppWYkhd29HSaTkuWyJhSB2zf3uLk/34Kjv0ys9mWeRUSgW3Hw9OcUccFy
      cvd6nADPLK+yI0me/ptLJyGvzTSf8PzkYeLmcU3A+P7b1Tg4nxy2HMbqQr+D4Xg6LIyL+iIy
      LthXtXScLR2B7hJuiefx9bQxu+aHOKQ2GdPphJ2dKSB476iqkrIIVGVgWvUJzKUnxq1bjk5W
      LFcNdd0wm015/94tyuLZU+8qTrLMIJGDntBE0R0xX33OdPUZhbXsdI+YW5bnbHFNRKCvWzlM
      JYdLwIziYc1fvDWhi4nfHnnevBvscsX62IY+JTACOQRzd858PqEoCg6PTkhR2dmZjhaqt27t
      U5UFDx4fAXDzYIdJ9fx0TUNx3jOfVuzOX48utllUExZbnOafsnnCvP6M/dUfmacjMkZY8RZx
      cvEpInJNFoA4R+x5dwwDNZLqGAdgxtaOPvDSD6ZScYIvAill6sBsd5a1rNjPyt6SDLBlmx6P
      2qT4IOMxvPYB5A4450ixoxhAaCL8+rjiUd1w1HlqKwDLLG0ifax9VqC9CMFn8SYmy3z5Lltr
      UkwjHUgIgVAWI7wim1AzLaT1QS0jXWMfC1AUga6LuR6DsgyUZUGMkbaLmMHufMo7d29SFoO4
      KngvW+lY77217S/YnDTvvv3VOcKeVTQNgfKCdg2+PWLSPmZneZ+D+o9UusST+UVF7OKN5wXr
      9FroAPef1nz8dMDQWA6IUSOmREyaCV37STr8PkwAbFgk+RfVtXNnZDzr25H+v2FisvG5wWjv
      3taxNmzGAh99+ohHXz7cmjhDMTMIBd/+5jvs99Qi1j/PYtmwWDaUZWA+y9aLAaKipjmBvJAR
      nmd0gLyIBjDdtojwPELZN22OfZk6ct7mFldUOaZ79ZD9098xr7+kLm8iGrlRfwwIrZTMdEFJ
      M+p3V+nHYC0TFy53AsR6wQcf/Ipy7w6r4xP2DqasGuP7f/ndV+jKBUU2U2kOEz2HR17mXsiT
      xIng/FXkR3nhgH/z3dscHS9YLZbZ3LrRXjLh+9/5BrPpeQX5YG/Gwd755G4i4PBbIEA9sydl
      RyD8KYSrvPh0G47RLpjWDwDDaUsRF/heFJm0TyjSEoCm2GNZ3mE5fYe2ugPFFNcccuvw59xY
      fshEFyz8HoW1zPQUN2xV3XZwlKarLUQzhVhnQcAXlAfvgg/o6uhyJ0DsOj7+v19z0k64u1ty
      iDDFeP/9918LK8SnRy33j9oXX/icchkWhNdVxxBY3rSRX/76Q4JkfMn779/j7u1nM6e97n68
      Sh0j/MIMiw3V6ktmzZcUacnR7NukMGW+vI9gRCm5ufg9k3TCo53voTj2V/c5aLNCefl+OKIE
      Vm6HqZ4SrHvxjZd4ljNXQawRF3DFNKNaxSGhxE32kMlBhov4gk0rxeUWQLPio08+5xvvvcOD
      R0fc2ptw0sLdWwevSQRa8tGjRZYHshyAiDvHKjz8bpYjiHJQgIAlJNVYmIJfc3GaplGGXONI
      sqlOngERNTPQjswntIE9EUAjUky3QvEePT3h/icPeffebe7c3B0Ha1N+HWjW120o1q7AEuYK
      8ENwv2XFrjvNrYsgpqgr0DBl4DjCEqIZjx/ighAXxDAn+Sx2Fd0xRXdELHbpwg4gTFefcef4
      FwRtMBGcKRNdUlozGtvMcpvDTnwdxSjTiKQOKWeILxAfsum1mOJmN6GYXji21zomuPnw36l/
      /yOkl3KTeDqp6KRCXYHTiKdD8QTrKKwmWBzt5o68IMwFWqlIEhAgWAMbUqOgOVxRPJ30OQAw
      nCUMRyRQ0vQ7VJ6QmwZVh/LHnb/h6dv/sF5kZ0yI7vg+dw9/wkH7GQCKIxFYFjdoyxv4tGLa
      PmY3PcWhKI5WJnRSECxSWo3TLusvw7oVIeEZIho8iYHxfjCe5snrxn5mgJ0b/Q1ZUXy5cXmT
      C8A0IpqQUGIpny6u2gMyOtaFKm8+1Q4y3Qd3OUvUi/pxLaxAzhIVG0eqAdbDmS8Z35GnUqSw
      uG0yuqgYYMvzdVxisL55+lMWR+/R7H4LM8VvIE+tOeHPv/xndlicu2+vPYL2o3Ofe5TCTrf6
      rGhGv0Iv9hv+BWH9eS6sr7H+s3EBv6pEZbaV5wvAUjumZ8phjz2wTTwuVDDoC7HF4mlm5QtV
      XpCpw2G42Q0kVGi7yKf97CZufhtxPoMVhXEnfx0LcSgpdfxh+YQOuBsm12MBfJ2KR/nuw3+h
      e1SSXMkf3vsnKHcwVd5+8CNmenJlVoivrAyTdvgztYjzuGKKuECqj0EjrtzpUzMZYboPviAt
      M+TbVXP8zltIlWEKm2LeRUU1IalDl4/RdoGbHOB2bj9TBAWemwXm+Y9nxNhwmlqCZHniNEWe
      pJbHMVPgPDTlsAfyua69LgvAsG7F2mDvwIXzAdWj/B+z/G+2NoVi+bh3IUeHZFq3fN/gTBgH
      3/V6hvQsEDoOpKV2fV/ft7WpKe9klYPKWkhw7/N/5dPbf8+9Jz/mbv2HvpsG/TGed0aXd8nx
      MRS61fp7F/KPpqxnmG3QNQiY9hyirj+90vid9DEGmam5F4ucw7mQdRnNJ6IUE/zubcSvTyyp
      dpFyPk7GYNq/C38OUepvfLPv7sseJZLb3n+XqwnKuZgZMbU87VYsNNJZ5ok61sjD2PEYoRM3
      mrbze8vm8eyhXvdC5ZqkSNIHH8AXP89HpCpoi3VNnoymvdLav3hfIGGCVQ1VNgAADBtJREFU
      +LLX5vOAGQ6xhHVLLGUrgxSTXjjOdeRJ7kAjFnOGl3FymqKxxZVTCNWo/Irza0XYB7ovf5Mj
      0jZ8DAlH6MUPiy3F7h3czu2xbdOINae5TRdw5TwrbM7nvrTLvBv7AilmmC/O7JAGsR2Vetm0
      ZIjjHIOAuN6eIL2hwMZJ/VLj8gZ1ANXEUXPCYeo4CBVmxmexphBhguPUEkep40gTjwzq8fkv
      90zXWgm2R79FHv3mSnW8qcGy1NF88lMG/iAJGzb/2FC89T38/Gpe0+tkfRkWkWz4AdpYcxhr
      ILM/LzURzWhNOdHEyhICHLiCmz5wp5gyL6aI86TU8Vl9xMddzYkm7vqCDuOT2PFUtqEkgwL/
      Vb6PayICfX2K+ILqne9jMZ9Q7aMPkVBhpoSdW8j0fPjhdSlmWUyS3t7WppaH7YoHsaW2xPvF
      hIkLfNHVIDk5+cddw8KU7xQVgvBFavlMjWbzhDq3C/ffaUJjR9Gu2LXEbRd4rImn4kel+ZMB
      krIpIn61r2GrXIsFkExJ7aJf/Tk21vuQHRnismzbH1SGkTSSNDMdO5GcFEMTUxeoNsSHpDlq
      a7SxW7aweHG4YRB6vUIkW79j7IgaGXIFq+Vd0Mhw30mYEso5UubUqkW7JD69T9h/h3Drz7Lc
      aUYX6/5ZMqmXuHUAv2li2a1IphTOU/b6jqnSasdpbLOoAySMQhyz4X6DaIr2nDyL1LFUZeYc
      k36XPk2R49Sx4wMzF3DAF13N77qapjemJoRGhG4jsuuDZpVl57M7rzgep0HvcOP8vvT4iuNQ
      HIewNdHfdDEzWm2pJvld1s0lleDYLPjd734L5T7NYsHewZRlY/zgNUEhftUs+MnpY4z8bp0Z
      JfnHky2hw+tPCC1CksG+n5dNMsMLFGb4fg/p+mm8qRCZCN6MsHF36vfEYEorniiycc8mhE74
      a3fE3+3f6xen4G9+G3/wjVG5/HzxhP9pTnjQ3+IAh7EvsOcCtSpHljgWj5GdToUpBUbXK3Bx
      kN/HVnMdwye64Z0YlLwcB7H+TM1w8YzH9UWTT7Zh5F+XkpkeItE6QvCEsA7Ed85RFsXIW3Sn
      usGsmo9K/qUWgAA7N+8hqeFGtcshjt3p62OFiKoZt77RYv1CEPv4H3l3z060OE7559130TV5
      QQly5gy2rd9/kYy7pw95b7KPmlKESVbCVVl0S364OmJxNok0wqnBpwMWGT/2P0HehTeaMzsP
      +Np2h5x53xe8fzM77zl4yXF6FVaIq9SRLNGlltJnvarVBkzwktNFIYb3nrIsmFSZGjKzhwtV
      UTEpJvhnEOZuwikGhC5cUgRKSVmdHnPv3XscHp3yrf0JJ806+99VleAB3nyV8iYVxx91DaH9
      ggr4x907zMs5qon/WD5hIf5r9SzQo1FN8WdOCFUlWUJRKj+waihNavDBjQrrAM/OscsB14uM
      XRdpmwZRR9lDVNSUVjMq1vtA3TSICNNJxY3ZLrNqzskqJ0vZn71H0kTTNUzKCaEXA18FJ3Wt
      rUA/++S/+c8//nhcpe45ThLoVzCZvm9Q6GLqCL4gvOCYfx6warB62Ibgs0Vt0pO+brbxniX+
      drLLz5tTPjahTd14zfMGKmpETfHit3atpHkXlA3Trxd3bnKOfTYladpqLwe/dBR+DRfIIkLb
      45jyM3nvqaqKqiwJPnB8epxDKasKDJIqu7M5Zah4fJxF1Fk1ZX++v9Xn5z3nMIFPlic0bUtR
      BG7v3x77+7xotPEZv8IN4VosgN8++SU/e/BfOMmcOElTVnJ1raCObiEneOcJ3ufMH5ZhA4Uv
      6FJH0zVon6UxB8SsJzT94sp1ZyDdJr4+pYQPnuDDucVopgRfoJqo25qYEnXTQBQKCay0Zmc+
      Y2c2z6RUsc39JyNHu9jRdRHvs4w6n84IztOlSNu16+cIBVWRE18MokNMkaZrx78HeLQZFCFQ
      hJK6q7OYAITgKUNJ07U5kMYyee3B/Dwn559q4v0p6hARYmqQdoGK4IrZ9bACFb7g5s7Vbeez
      6jze/mXruMyL3u8pLs2MxyePWdYrvn3zfcpQ/ckGfHe6e66Ovdk1hWRcsWRvcE8f1/spLHVI
      agltTehqnA5ebUFUkdQRUqJSpbKs7NfumphBv65FRLi9dxv2XnztdSxqiaSxB7dBKOeAkDR7
      nQ3BrU4RU2SW8TtJO6w5wcUme5c1UrR1NieL4DQzs8VyQiomaDGlKGbbYDpTum7Zw5rzbqLd
      Et/ViCqpzOQBvl1lowCgAi4lQldTNEtmG2lWBfAbFj+5wAiy3lTWvK8zvSYLoFgdUXzxG8QM
      E4c5h/qAOp9p7jb8AM4UlyKSBkhwbwKMLVaUJF9ivZzrejZkcy7ja3rrioqgPVucmPXt5lfn
      NeF6/wFYj3rM5lCnOSt9LCakUBLLCWF6Kx+tscafPmKyOEIEUo9TN5E8IYoJqagQjYS2pqoX
      eedynhQK1HlEFR87fFdnQN0gmjmPhgp1DpD1+xDBxw6XOlJR5TYBlzrKrs2fhRJzjtA2lPVJ
      fp5efvJmlAqhnzAnwaHOM+vanBXJjKoXAU/9ZyQRqpSobHuKXTThjGMAWlOWZaCZ7NBOdvBd
      zfz0iHmMeIRG8vvdrHNtdM51X3wivp7T7VroAA8+/jcefPzDK9XxpkUPI5sZH82mtJNdDo4e
      spOyvH8hJWHvuHrWDvWq/fg61dGn03jh81+1H9njnXo6+DiSqGmPnSyKkFn3uu56nABfxyII
      HnhruYLlajyAjYv3E3npYb8exXoU7UXw5bNExphiFntUqsP5Myzdtr7WUg2WMOmtQbrptOtn
      LAP+KEFPjuC9I/iA92sCrRCKTFIgmeXC+4DzAe8LfCgzMnboADJa2OyyjrCvuoTgKFyzfjmq
      pD5LyYBUHmRIEfAu29rF9bQoCK5wqHbEFLMVSFhbcFgP1OAB1I28uc4NFCYJbx7v/dY9fSW9
      3yPnEU6qmAmMOZ08TpRJkVmeNelorh2Y07LPJCe/LouiV+ZST+WSrU7Be3zhEclQDyHvgF1M
      eWdjYLvIIpr3ub+DAy1bnRSVtRUrX+N6C1imjsl4f0cI2Qw7mHkz1bzvdUtHURZ4F7KusEaf
      91a2/jobaGg8PmSiMFOl62pi7LIVTtw6yg1hMn2bECq6doWZUpTTLbiLqaLjohCKcgh1vIof
      YFtSkSwav1gE0q7m13+4z529CZ9+/oTdG1NWtfGDv/reaxGB2sP/JR3/bPx72HXyvzzBt7fP
      8y9hzEf7gsdZ2543cYdDu7plf7+oDPUPGdHz7mLErsaHCtlwhG33pdfmxoUsZ+pc92fId3C+
      3U3pePuZzpbB7HdVlrXrJka97joudQK4YsLN/V3aruHurT2OzLE709cGhRjqubjINuqB/MfZ
      Ni/rcj83Kbe+u7juZ/XLuWL8PRSzy/VjXEAXtbH+7vnPcv7ZzzfzvHYuV940FOJ11TGgXtWU
      mJRVEpokzIOiCI+aQKuO0l0ySV5sFhwfH/HOvXscnyz5Vs8K8bqgEOqy5edKdVzznea613GR
      hzxPOt2oaxugp32wTT5V6T3yeUN0AsH78UTM+Jt1JFvdtSyTY7fIC7RJNtbrJP94lyPgVBO1
      CqfRs4yeRfKskidIFlRPYqDRHATUqqc1T2eBSCARUHKm+nWaAlkDCK+DFej+Fx/w4Sc/IZEz
      vxeiTHxmNw7OSCpEE5wYrTrq5GjUkUzwYkQTVtExC8pOiBQuixsr9Qg5ttUQ1PJABWdUro/g
      AqJlhdZLotFAndwIce/HBQFadQQxDsqOHZ+YBqXTDKLb8ZGjLvDRIsvAlUsEyW17gYlTvDOW
      0XEaA8cx4DCmXtkJHaUzOnMsoueky+x0Q6rgyil7RSSI4iT3V3uz4TI5FjH07fRxvJKD6E3y
      O1pEzyo5ojkmPjF1OuYHWERPnfJ1M59wDprUE6OYsdSKjpJAhxMd34VgtFaMiFZjzYBhOASl
      oKOkJrj8/lsNZPFVWdocxeOJCEY6sxcLhifmelVQF8DWOsTLlmsdEPNFM+Nni/cu+GaQm+FF
      D/1Gd82eGHeziBhmz6M2v1h+v1I/XqWOi3NoAPD0zHebdbRMzoFQn188iYKlTnBnbfYb9SQu
      TiSYF1TeWDPjh3uVef/C8v/tSSOleNdj5QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Life Expectancy vs. Year by Country 1820-1870' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Life Expectancy vs. Year by Country 1870-1920' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Life Expectancy vs. Year by Country 1920-1970' width='192'>
      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
      MGsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Life Expectancy vs. Year by Country 1970-2010' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d25MjN5befwAyeemu7qq+3yW1ZkbSjHZ2Zr2zsQ/e8Dztk8MRDvvF/gPt
      J0f4cd/scNievUysd3ZtjUbS6i51t1rqruquG5kJ4PgBQDLJYpEsktVkdeUXkVVMMoEEmR8O
      Dg7OOVAiIjRocE6hF61g0f4jIkup47yXX4c2rLr8PHUs3AG894tWsXAdzrlzXX4ZHWDV32FV
      5RfuAA0anGU0HaDBuUbTARqcazQdoMG5RtMBGpxrNB2gwbnGxA4gInz++efY/j4ffvgHtref
      8+Enn/P8+yd88c3jV9XGBg1ODdmkD5VSdDodyoM9DooDvn7yggeXMp4cWjaU4L3He7+wDXrR
      Orz3WGvPbfn02y2ynrLq77CM8vNgYgcQ8Xz/5DHF1hW6rTbdjuHrnX2ubXXZ7wtaa0QEY8xc
      Nw/3EJRSC9VhrSXLJn6V17p8evhaz6/Rrvo7LKO8MQal1InKTRkBNH/8J/9i7kY1aLDuaCbB
      Dc41mg7Q4Fyj6QANzjWaDtDgXKPpAA3ONZoO0OBcY7LhVQQvglLgnEcbg3iP1gqRxezODRqs
      AyYvhAG///3veeftt/jgg/9HZ+sG/d19Lm526BfC+++9E65bQljxOoTUndXyaTHxLH+HZZSf
      p46pS29bW1uYzgWu376HFo/XF9nXhgvt4L6waDjjMsL5vPcnXgF8HcuvQxtWWR4YrqPilSAj
      56GQm9YBBF/22Xm5z82bN8kzzdNnL3i40Wa/YGmuEN77hes4z+XTQ19EJV31dxARjNaRqB7E
      QXGA7+1A7yVS7IMrEF+Cd7XDIt7ibQESXuPt4HNx4T1nIZYVb8M9ENSiaVGccyvvAOvgh9L4
      Ak0vLyKBeL5EDneQg2fhf28Hd7CNKvahPECKPaQ8DIWURikNU0aHeUfB+b9xg3OBIB8lqA8i
      QbraHlIeIuU+lD3E9vDFAaW4KH3tUelrD5HeLtJ/gRQHoXKdVYT13g91YGXyV/L9mg7wmuN4
      Au8HIpaHiO3h+nuIK8H1EdsL75eHQe2w/VDG9qPqEKF0lNDqCIEn4VWRexY0HeAMotJaxQcd
      uL+H9F4E1aHYQ/q7QZXo74bPysNwPkpgbVAoiASWKQRW2gDzq6rriKYDrBB1IlcTM1sECVzs
      I+UB2CCRpb8H5X4gdCJ4sYeUvSDZlQ6EnqADv44EXhRNB1gyBhM9G6TywTOktxOsGLYfpHBS
      L2wfXIEvD7GuQFyRaonqxfQAD2XyqiMtYkY8r2g6wKwQCdbkSu3YR3o70N/FHewg5W60aLxA
      +tFsJxKl8mTVQrxHab1WuvG6QkZt+YD3DudLUOHdcAge8Aq8Ujil8VrjlUa0RpTGKzUtJDIE
      xT988z4ff/IZt2/f4tHTbW5udXnZFx4+uHtqX/Q0UUlp8WGSd/AC5w7jhLAf1ItqAtiDomaa
      K/bCNRAmgFrjvRzRn5VuZMs0pAm6iGBdH+8Dca1SFFrjshynDVZrSmOwJsObDKvCuTMZ3uR4
      k1OaDEyGaAPKgDZTTacwQ1B8t9tl58m3HAo8+n6H2xdynvTc+gTFi+CdxaZFjoqw+2B7Qc0o
      k315P0wMy4NwTbkfyogE/XiKpK6gBnq0eFl4RXwZK+qpntW0If0GwyuuIj4ceLwIVgm9PKfI
      OxzmGf28zWHeomx1KfIukrcQkwMnV+WSO0jtjdrK7/GYGhT/w3ePuXHrNi0OuZAbvnlxwLWt
      Dnv95a0EK6WCCS2tANo+0ntZs2wkMgeJHCaHPXAlYvv48hDlylA2IenPY6RAekfpIClOYsIb
      h1WXn2cOUElfBO8tzltQisG74AGnFF4rrDZ4k+O0ptRJAud4bcK51ogxiDJRxYj/tQmqh8nx
      WefYNqbfYN5ZzLwLYStfCfa9lxS/+88oVwQJXR6ERRQYWiiZWMcZJ/Ai5Qe+VBLt8Q4vDo9H
      EBwEgmYZNmvRM4Yyb1GanH6WYfMONm9jTR7UhnQwXnicxndYVvmzuRJcHuK3v0RnLSBkosCc
      Tzfr0QmeIIj3eHE4PA6hlxnKrE1pDP08p8xa9E2GzXJ81ImdyfFZjphWtCadvhA5q1h9B3hN
      UZ/gOV/iokS2SlFqjc1ynMnihC/DRQJbrSn18ATPZTkua4PJx5K5MYPOj6YDnABHJLQIXizO
      O6wXellGv9UZ/M9bFK0uZauLz1qRwEel7HmVvuuAc9kBKv8Ygg3Z+jKY9xGsVhQ6TPCcMZVE
      tlmG11FCmwyXDdQNa3JodWe3IjWYGePs/uk8fOYra5NSoGSwEqBE0AgKj0HQUDsUCjnbHaDu
      6CXioinO4hB8PMpIWJu36BtDkeXYLKef5dishcvbFKYFeQv0eBVjGrz36Ib8M2OgHnpESrRY
      Wq6kpcGgMOLJCcEqmQrnGR5DIK4mqHvptVGgJJTV6OozpSt7H+NNq1MWwl4NwqKUF4eID1YM
      fDTBDQg8aoIL58kEZ/B5qzYJjPbkGRdDGhVkdhxVA4Pp2osNy6416asQNB6NkCG0gI5Y2kAH
      T0cpOkrTVhli6vEMJ/dZOh0rkAg2mjmLfp+81cI6R2Y03kOWLe5Yddhq8/d370HewZsMl7Xw
      Jh8QeAY0BD4e4wgrYlHiAY8ST4ajJR6jVE09AI2v1IgsqgsGyPDxXJEpXb1v1LD0VYyTwK0p
      7Xy1mBoU/9FHH/Hewxv87sNn3Lne5cX2Lu1LHcpC+Nl7PwnXLdB4pzR7V+5ixrkOnKDeVQdk
      v9rytVjX6EmqcCCellhaCnIRWjhaQI7QwpOhMEqRo4JqoQw6SkyRcdJzdqFydCW2isQ9UR2L
      YulB8Zc2NuiVGV2zxw8vNNc2uhxqQ6e1uAsABEcwYfFl/IXa8MrL1wnsIoHDZE2LJxNHpsLD
      MSIYPDkSSIuQiydTkKMx0aErvNa1ZW7F1MdbI+nZ+w2XU8fUX8goKMi4fvMBt29d49n2Lncu
      tjkol+MKoZ0euELMiXVZhUwSGSlRYmn5ko6CtrgBgeOErpLCcSKWK1OpECfVf5exDrAOv+Ha
      rQQrpbn3xpsAXNm8DMCN61eBYPV73TCsL0czm4TYVkXIImDEkYknV1HvjRK7o9TQxK6lMnSW
      HujkB9vMYVaHNbACLR8DO78g3oHYQOA44ctEyEYInKugH2fiyaO+nCZ4mQqvNTqa1upk1Xiv
      GwIvGUkYhRgMqtciUDqL9Q4nICh61nNoiZb+CXUS4gCUMhid4dbDDDqMISksgkgJeIhmtfR+
      WOAQtAhGPG2tyMXRRsiBFp52nPC1VNCPdTVE1ofJhsCvEsl5z3rHYVmyV8KhdHlps2j5Nygd
      CFp6sB6sKJxovMoxWZjOW8lA5xjdQmuNz86oM5xBuFhu09EmWDAIVos2QksF8maAQqGVqknh
      BIX3aQ7RkHhZGJXAabLsvI8SWPACXuDACoU/brEp1qcMBV0OfId938abS1h1ERNdpL2ergZq
      wmCggGXFzq28A3QQflUtgoy3ETc4OYKfkkcE+rbEeo9HYb1wYKEUA7qFkHFgofBZCPRRGVqH
      NdfSgxWwonEYlG6hdQsrBq8ylG5hdIbKTpYWJWHl5GM92tDgGFRSOMUjA6VzlM7hRBAUfScc
      WrC0EN1mr1R41cGSceAzlOniVVgR0DpHR8IOwUyfiKdPhHnWadcXTQc4ZSSdV6JVqXSOMk3g
      RNGLBPaqhTYt+g56TuHI0bpFKZqe1zgytGmDyrFiEJVjTAutDZLVzKA1ZiaaN8rh8ZgaFP/Z
      55/zo4cP+fzTT7l+8ypfPw5B8bt94eEb915VO9cCdSIDeBEKaymdQ9DsW6HnM9Ad9q2ikBbo
      NvtO42jFCVweJ3BZJHCYwFXSVzNWwa0TuJFay8PUoPgL3S69vR2+e7qNzVvcudjiSd8vLShe
      XPLifLVB5Uk/ts7StxaPwqM4tELfBwmrTCucu2CBUDqn5xSFN4huYUwbJwZLhsk6aGUGErhO
      4vgrp4jlSkhLasdZD4o/5fJ1t4r6d/Qe8cFCKM6FEc8H/yVEUN6jvEc7j3ZurGvNDEHxT3D+
      FpcvdUNQ/M4+1zeXFxTvvTnxSnCQxMQvJEMWiiJaKEQUVoJ60ZcMdUQqG7xqo0yHQjK0bmFM
      66h+PGZeXm+pgfAjn7Gg+GW34STlJRJUvEeKAl2U5AcH5C6s0ZiyxBQlmXNkXjDWktkS7YPZ
      WwvoaPVXEt9zHq3qjnyz/R4rD4p3xTbfffqfQGUUPhC2JFgYnBgOHFgfsgwoZdA6I1goBCuq
      shEr0w4Wiug5U034zkFQ/Wl0gCFa1AWO94hz4FyQsM6hyxJdlBPvb8TTKi3tg0PaZUm716fj
      HG0bHPZEZP1cIV4F9n2Hv+n/GXneDh6ho/rvLC2MmdVeNwvFiVEj6ljCxsOUJVlpybzDOI8p
      SnRZkiFoT7XAWKkP8brMB7do48PrYCzlxNmhh1B5o66hO/SrgSLLOpgZff9fZwyS5da2jXIu
      6LfOgfdoa4N6YC2Z9xjrMEURzkUwzgVyOxc+F+L/4M+vFDU//QFOTODXJAB/DTrA64dKx00S
      uCwrApvSYsqCzCZ916KLPrnz4dzaAYFFAnG9RLdoKv/9I/djigr0mhB22Wg6wATUF6JSqj1x
      Dqwd0n/bRUHLebKioNUvyJ0jLwrapSX3Qu4dmcQJ8xgiziR9GwKfCl7rDlBJ4nByVB/2Hl2W
      tIqC3Afd1pQlWVGS+WiBKG2lbmRJGntPmIrPqv+qedJdNjhNRF6sTQcYr/96xNkwyY32XiQG
      XMfJmXKO3Dpy70cIHM6zOoFhORO4RhovFVIfXQGizb4e3KZ0yMSdMnKTYo5VbVRV42Y3Nejo
      SJnqmJYeHRFKa8kyw+Fhj263Q79fkucG54RWa3GfvLwouPXBh7SUGkzg4oQuE8FE/VfDsfbd
      hsCrQ6UezrIgKhJGX0BnBt1qYbIM3WqhsgzTylFZhjIZKjOoLAMzfZMQOCUzqACffPIJ7/zo
      IZ/+4f+iL16Hfo/8YhtbCj9998eVr8u8yIqSH33/DJXP3pnG3W/VMamrLJ8C0meuI5EWgj+z
      DwH1omJ2ZpGosqkgK6LE1JkJUlRptNGRrKaSphO3ZzIa3W6j221U6+jq4pGg+pHPZsXSg+K7
      nQ790tLpttkvLJc7LQqlyfPBjRZbAveVj3eDGZAETkVgH6Qvg+QjYbcZE6SoDnHGyhh0IqzR
      aJOh8oG0lUhqtI4kP9kTmUTgdcbUoPhup01hPRtX7vD2jWvsvNzncjfn0FINOQvtD5Ae0AI/
      3qI//qsqH4gLKaotqQ5UQfVR31U6kNdkIb+O1uiK0IHAKssG6kL9fM7V1GWsRq/6GcDJV8On
      BsXfvps8PjcBuHYl/G92sxqj/zoXc1OC1gqV5eg8i+rDQPpW0jgSGBM+J5vNdWNsO2iyQ8+D
      tbECrQJHCJwk8pAFQg1UBmMqiVzXf5Ux6HYLneeodJxwc4l5JXeDxXAmO0DdZAocIbCqTYSU
      Vmgd1YdoUVD1c60DwfN8QOr4/yQWiCao/mwhcWj1HUApKIqoB0f9tz6Bq45h+61SKtiCVbAJ
      jyXwjJO5hsCrRbIk+hgb4pwLh3i8D1F0fedC1m8hZmgKAUlOJATqe8c0U0rIhhrqEBUMYCvv
      AKbV4urPf4ZqtVc2gWswP4Z8+6dc572nKEsKa9kvS3res2dLel7YtxZL3NMXsIAohRyz0eEo
      TrwOEBu78g6ACpPFRgd+NRhy1CNsbeqcw8ZVWB8/r0tXK4L1Hgs4EQrnKNL7QOk9hXMTyeeB
      UikKwOuj+5Z5vZrcTKvvAA1mxqi7SJKq1lpclMA2qgtlJKytExbBSiSs97gobV28LsVUMKPU
      raA1Hs7kKDw9KP6zz3jz/h3++fMvuHLlOj9sv+TmlS67PeHtN++/qnaeWdQl7nH6bc/aqJ+O
      129tTdpaEQrvKUXCHr6ARXCosIg1C3HjYlcd51WNnB4Uf+ECptVh89IGL/cPubvR5klf2NDL
      CYpX0XYu6xqQffTiisyJ0NY5nPf0naPnHKUIh9bS845ChJ4bJWzQdaUWDXUiG/4RCa2qto0L
      /J7ta61xUPyM5ev/Z8XUoPhnT5/g+gc82y+5dW2Tb5/vcn2ry15flrNTvAnbGC0yB5hFetUl
      sfee0lpsTDJ1UJbD0jfWaes6sIRNp4tKfQCHqtSH9D2GEYmaHW1bPZHgOsYEn8XyZ3KneNnf
      h9/+XfD8q78/Rt8V74PE9T6oCFHqFs4NiEsgsfMeFydvpXhKgZ739KPuWwJOBbVhHR5e0wFO
      Vn6IH4DU3EkmlhupY+WTYOs9j54/w2mDFU9h04RtvL6bJm1S03dn/vHG6L4NVoO6GpnWANK+
      YiFNjsKYDGMMWoe0OVrpgW9UlPb1lDrTtAgdr1VaB1eVmHh5pThwjr89OCQf5w6tFCwwujSY
      H6M69VCeUvEggxEnEVG8G18ZYYEzz0Pi3SwzZHlOZjLyVkae5RhjyLI8uFnPMZKd2bQoDeZH
      laJxzORxEA4q1bifyBGkq4nSVVcSVRsTJWuSkAMJq7Umy6JEjmVNWqVfJC1KxKqsUE0HeIUY
      MomGN6pJeSAb1JfzlaJGwiA5EzkDgTOMCeTUNULqSEodjQuJxCb5Qs0bmP8aoukAJ0BdZx06
      r5EnkS3LDFoP9NeBxDUYE6Vpkqh16TtHfETjDj0/XssOMI/+qqCaGGkdjJSVBNaaLA39kcwV
      gaPUzbKskrwnxXmVvuuAqUHx/aKg1WpRFAWtPOOgV9BpGUoHnfZydnTx0byZ7llXD4CYVSTp
      rxpj9EB/jYQ9qf6qa6rCWdVfzzUqnoQ/4kMc8/TNuQdzIkbNoAc7z/jqyROu3/kR1zc7CPDZ
      Z5/x7o8f8vlXj9jsGnZ29jEXWrhSeO+dHy+8gpdlGXfv3CbL8yEzVV2Hreuv43+L+cPp5l1B
      PK6eVZQ/cVD8KbRhnvLiB56kvrR4T1jJth5lPVpAhUUdlJWY9jwIwxC8H65XYeVybMrHUcSx
      PV45khblYPs5j59/T969w/XNDgB5ZuiVHi2OwiryzODQGLPYj1U1SCm2rlxZaDGtwfxCYODO
      LEgqHokVUjumQCOp3o8FSbvkKR/KT7y/EAhtPbqM5HaC8QpNcM4fbBQ+iskb8IXmzKd+DnUA
      rT17e54rV9Iu2MLm5iZlWbK5eZnNzS16/YKLnYyeZUjNmBd1dWVerENA9ispP6oeSlgBFesC
      EWFA0vS/RlItCuWjhHVSSVjlBJxHqziRT+lQYnYUJeldhtTRepu9lzh3moaRDZtiEa9Wsxo+
      1AHaFy+RlQcclj5Wprlx8xYAm5shGL7TaQOQt+du67lBRVIJvveIIM6D8xUxcQKlwxPJCEAk
      ao3A2sfPI2FDGnNVEbQa2tVRctZaFP8fJZpn0AEqqJH/ryGGOkDZL2lvdCgOy1W1Z6UY2Omp
      PCsrwiapCkPETCQWwhCPE5T1A7J6QhpHUdXuJSpaoRJhj06i040mDP21t9PErzGDnhxDHUBc
      SWkdvd4adIBx1qA07ZfhCRS+ZhGokbc+/Cf1QKHCkF773ESCKpJ0FdQoYVMeyrHDf53AiqNb
      dJhhHjc8XRtUHUCkZOfQYbzmzt2tV9YA5QSe7oI2x+qngcCVcjAkFxUqLEQpXRF0siSsT95D
      Td6PiWZqCHsuUBsBDN98+REHtoMtS15V6ittha3nHp0nAo6ZCE0hoFdnMxyvQUCyNokkc3pd
      3Ux/aq4ikQ+V+0gyn0cheBzCoqaqsoUoNWQGdbz7i7/g5q2ry/12Dc4khnIvzWLxlskEVjGK
      TccseCYPi5I6z8KRhXNlagTVKgZLqap8eo8Ry+HC3qBK5bTsS/7Hbz7m53/0C65e7k4q12Cl
      SBP19DrMcap8dvUFqbp5sDJbp2S5MVFujK1IyXET4Qa5mOLrSS0SCQROOZwSaaN7idIq5Ho6
      hqBr4A0qONtj/6CH84PV0U8/+5SH9+/w+4+/4M7dW3z3/TY3ti6w2xN+9FYTFD8RdYvS4M2j
      w7sAuub9aXQkp4mZ7UL2umpjiEoq6oGUNIMEYlXysCEShmtGJWfCeXUHGTaDqjbXL1/A6IGl
      4+KFi+z8sM3Dd+/xwT895p3bGzwphA2znKB4t6Kd4ocsSvXydVNnDUmC1s8TEbUxmDxmaU65
      8+OhE5m1BpOG9hqRVbQuxcS5p4kjVrX6Z2sQ1L7ioHjF5tYmt80FrlzqxMo8z7//jms3bvLo
      o295+82bPPphJwbFL2eneDHH7BRfM4OOBHLWXoc/CoaGbV0b3iv/+DT5GRrek7RkZPjWgeuj
      umjqBGqSGfTkaGKCVxcUP+IN6vnd3/1vvrj7Nv/qz3+JUpr3//iXANy+cxeAGzduAHBr7qYO
      QxlN3mph2nk13OtskBs0TI5qw/+Y4R3CljvHDe/TcFaH7waLY6gD7Dz6lp/84meIf3WWINPK
      ufb+wzABmxNNevEG82KoA2zdusV/+6v/zl/+63+7qvY0OGcYOPUJXnzN25QYbRfeFy9xgT+Y
      v6QqE+eibvr8IdxKBr6CfiQeYPeH77n+4C2yZuXz3GOc+8m0672PBg0XCOl9IKezHutcOBep
      nfu4R184r99KVO21jAtzGSyIwZLmABe2ruI++oKDwtMsh60xoiSrrwOk0yQNvQvJw8QJ1jqc
      8xWRKlL5ZMmTGJGnBtck65iEDNKVR+txTRJBUFX9vm6smIGUR+ZhQx4rpyeRhzpAb79H53KH
      g91DuH7x1G76uuC44TuRR6KJOBAt5RL1Q4R0zlOWdqq70cB/b2Du87Fu52WI3L4mMaXmwDcJ
      i1thRuIBzohn6tBC2EcffEC5scGlNV8FHhqeo13bi6ukRiLd0H+p6ZACPmZnlij9Jg2diXhh
      +HZY6+I5FaFRQ+prvXlQj1Q9hUWoI2bQ+nrF3LWeDwytA/zknR/xg9bs7Bxw59pgBHBljy++
      fsL9uzf49rttbm52edkX7t66vnADxAv9/V41fCfp6EXwcfhOuuJwdgeq4TktoNQH6cF61mz6
      46nZsFX1p8EaYkgFunr/Hv/0P3/LL/787aGL9na22d/7gf/zwSE/unGBr1/scwHB+6vV5GNe
      HPYLPvr8SbDjz4mThyQendSdtYDyZd57WfWsuvw8dQyJrRdPvuOb777h+fb+0EUbm1tkKuf2
      jQ0ePd+lKyX7vbJKLbJwoxeuoUGD+TA0AmSdDvfuPuDixeF8P6bV5Wc//0U4eePBkUoWCoqP
      SanORFD6mpZPOIvfIRkLvIuaRJxnhU33QrJ78S7M8UhRUoJSg6x8Eq+ZR9Mc6gDOlmStjE8+
      +oT7N/7k5LU1ODNIBoLkcyXeI2rWXXLiglIyrYoPoan1VBIkK5iP90hR/R7vbXhfeTDpc4cy
      AlpQGYN0FGq8QWnIShrbv/A6QOtCl68/+4q//Df//kSVNFgyhixWY7w3hUi6KD2TCVaBiEO8
      C4TTQYpKRThhkEKiWhGIt5w2l6uV05GYmkrqChKjswbHcbWNC/VfeTyASI/tlwW//vWvOXyx
      D1fP7zrAUBbnUX/+JP38QMINSb9IlLQGgHgqC32NgCI+7HBPKs/gc13Zc4eJmsirw7XKAKZG
      vmP2yBtHuFEsbIo9o/5YtRGg4Ld/87cUKN7/xV+srEGVqdOPkX5Ddn4/WGgSX4uSl4GErA+/
      owSsD8916RjJNWLNH5aeOhIuS1cMS7+TWD7T8L2Q9FuCO/R5RS0k8jL/7j/+h1feAI9ld/fr
      4A2aCIgcPUaH3yj9kjRNgSXTht860jWLEvCsSr8GI3OA519+zN9+/ClvvvWn/OwnN19RExxc
      3EOP2yJpRoiXqTGrDRqMQyW2RPp89OGX7Lw84ObtzVW2qUGD00c0MtRGgBYXNru8cWUTLcPm
      sMPtp3z41bdc2rjC/u4eW1td9vvC++/++BW3usFZx2CTkoEXK6R5WMrwrBi4NaXY6cF+Dirm
      AFLR0a/KhzpFDQ0p9/VQQoHaHABuP7jPV48fs7t7OJQWxXmPVrB3UHDv6iWeiWKjc8aD4l+j
      8vV6Tlgg+kpFj9VqUhTd99LkGkK4KYwQNKZZSUd9K9MRgiqtqy2idNrfLMswJqsIXe2wM4c9
      f96FuKHUiJ9/9hWF9Hj5ogf3Bhd1L2+xsb3P3Tu3+O7ZCx5sddld0k7x5rig+BNgHQKy59nk
      eZCbv25GpZKK8SJgkJVikKN0+L3BjjeDwP86QRMJq2vGnOvarpHVNSMHtRz+65QY4MzuFL//
      4jm//av/QrbAJHguAspgC9HZHPqiRBRCFon60BzJM9jZRleZI5IEHCJWbefGVIeJ5XXt84E0
      HD0fftBNVogzvk+weIuz6aT6Q/LaPCr9Bv+1Uhhdk4C6rkfWJOAouWokhMk/nFIKk2Vok43c
      p9lj7Kxj5R0gz9vcv/8Qk2UobWpScTbpB6uXPg3OLlbeAZRSXLy8hW72CGuwAqy8AzRoMA+q
      UNPKcXC+wKymAzQ4VaR47JQUwItQunDYuFVa4YSe9XhReFTckFLhRHAerBesD+97qD4PrxVO
      wDoZ7wk4BU0HeE2RiDd4TZUUKr3nfAzs94L1Ma1JNHZ56uQLpJsEL4JD40TRt0LfCVYUThSl
      VxQePBpBB5LXfVSXYUjAz7A70FHM1AH6+y/54qtvuH7rLjsvd6ug+Hu3b8zV2NcVg+wTUiWB
      slHaVXvqEQg2LN2ibXUCQlkVyani3nyBnNYJrvb5qHRMR8jbEw6Urqy6AnhP9Kc6mlliFkwl
      8Jq6as3UAdoXL7N56RIvd19yWQvfvDzgohqsBC9kfxY/JK2AI5JrGkR8yLMTThCCVKtLuETA
      5N6fyJNIOL2dkVSRZK6SnFA6wRGlnShKD040Xqkg8URRW1M9Qq5lhCOGak9Qx2iMjRrphHMs
      D53FoPiZOoCIICbjckv45vF28AXqDVaCF8GhVfyvL/sobZLXfkU258HF19Pah4PAc6AAAAw+
      SURBVNJRuoWokLp0k0TAYxz1TyUeVh3z+pTQxALMh5k6gFKKO3fuAHDt5t0jny+iu1lRPCq6
      5PkxZtAZnquXCZs8x9cTg/2aoPiVf4eVjIKM3ZKxQYPzg8YK1OA1RcoeGFX48NYRNB2gwalg
      kGU6LVSlOVmcbCuFqflj6UyRGYPWqjpgsBPQNDVbJMxJjdZVeRXvodNGg2O0o6YDnEmMSLfK
      EJGsTdF6VnviR92aB+9prUJ49UT9ue50OOImHcNRhwicYgBiGWM0eWbI4rasQ9ctyaHwzHqD
      rhvGSa/J13vww9ItBIfEh2zMRLO6GpFeo+RKEvB46Vb73ChMFRNQc9um3gmgHnUF59ehcC06
      QOk9WIVQ09VGpVciRnpwQ9JLDUmWcQSaiBjUc5z00vUFovEV0MqzY6XbNKzDLpHnFSvvAJ1O
      i/fee4s8MwPCRSk1RGSopNe6uUOfVenXYMYOUOw95w9fPuX61gbfPQ0LYQd94f33frJwA5RS
      bF26QHbKm0Q3aDAOM3WAw909Stfn0VPPg6uXeC6aja5fUlC8X3lQ+VkvX69nVW1Yh/L1/7Ni
      pg5w+dY9rvUct27f5OkPL3hjc4lB8d7NZOaahFWrMKsufy5jgivbfnJA9MzjczKbK4Q2vPXw
      IQBvPghJc89v6twGMCaxQMrFenwJVEwkrFyB9n2ML1DiMK6HtgcYsWgcSnxwmvYOJSXah0OJ
      Q4urHKq1uPieDZ/PsdXKyifB5xHDw7VENXLy8K9iVopURokH71BiwduKDAqPEgmvxaK9Rfki
      kCQSKFzj4+eBXHg70QVa4yPZEvk8ikQ+i/Ll5MQCCAaHIZJbfHLMRqlznhWijsEOkEm6jNvk
      brSMrxztUxklDuVtIMg0csm0aCIJD1yCdAIJDz1KJ+UKdJJITJNeLvispnMJBJ322KJjdQwp
      iZ0gHtTJlK4/oTawMAHHOSROwppYbFfeAVrlS+599V8xWgWSROmQyKGljKSbAPEYRSRfPexD
      ArmndKEQTzolrV7do3/Eu3TV+nMSEc06wMmx8g5gfMGd3iforDX94mMwUfrM5E4taLV4MEaD
      s4fG+N7gXKPpAA3ONWYLifR9PvrD59y7f5fvnu1UQfH377yqTTQaNBhBzeBB3G8NNW22dxQz
      dQB38ILdEp4+32Yrg293e0NB8YtAfC1X/CL1nOPya7lTfDI+pB0sq3TrnoHTrAnmKqXRlZOj
      iRmoo3JSS5FJ7ajOta6VOaWFMG8ucCl/grgO37484Mpmh/0+1UrwQhYQNSVg93VFklwk6TXD
      j1C3aNXIppABAZQibBeZkghH4+g0h1iC23adZJAsS2pq+0RAGVMjanwdCaq0gayF0nn8XA3d
      Z1UxxTN1gFZ3g/d+9sfHfr5Iw5UCXBnPZOghz1zr1C+vBj84KdM0FTlkyvNVAHqYHClDNUod
      cd8+WsExEqxW59TfsLo+kqlGTJFB8uD0/kmfycpNuSsKil+5GVTlHdq330OZNuijD5eh5Z3x
      mGrHr4z3kRwwRNhVP/yF3ambeIC5sfIOAArdvYoy8zel2aa0wbxoWNPgXKPpAA3ONdZABWpw
      nhB89x0iMaAKT+kdfVcSXAmlSpHpxGPjUYrgSEmAQZSKn0v43DuM0mTVodBQHUbBOG+XpgOc
      RQgx1XlaQ4lrMRPmwIMsF9EFWwQnvjqs+Jj8N5FPqvdL8fgpawR+zGFjHWUkcIlgUZQIfRGs
      0nilq/sNjB4RM0/qNSEcJu4jN0sqj4gz2QEGEUAxGsh7RCb/WL728CU9fHzMEu2SbWj8/VQo
      P3i4EsolgkxbDFQhh48jEUxhGRCvmGExMd3bxfLhtWAhkFcmW4HCEpRCVDyif2uVHr0yQ8Y6
      lmZGVXGhakr5k7pTLwkzZ4f+7W/+mvtvv8F3j5+zeaXLQU/4o5++s3AD9rzjN8+/QOvjwyqF
      8OAdgwfpEBxJykzz5yemKo+HGjx8qD/84zGc3rz2mkXMmAoweBYLCV1GSOQsLuGvI2bqAC+e
      fsPLgz4/vDjgzrXLbItio7ucneJ71vLPosiYM65YBXVgodz4Muuim9T+DSpZdUB4vZ5VtWEd
      ytf/z4qZOsDWrQf8xb+8hsk0j59u8+YSg+K1qe/XOx9WvRC16vLnMih+TPlTDYnsXLgAwBv3
      wz4BFy6d6D4NGqwlzp/S16BBDWfSCtRg9QgJhH20rnm8eJRMkqdx88BkaE2Jg1XwXCUDdHAS
      1JXzYN2Na5o/2Cm6Qzc4GSQGa0i0n0/LayHiUaIGWamHbFTTZ+gSTaCjuVQHFs3B+1Xu1ZqL
      tFIh58TEtCapfPRcrf9Puvu08pnOyExG2s50kOz4HKdHV0rRk0Ns5RI99qqJD1e0hLiCY0sT
      JYseSREOKIWZ8vCnQURjtBkmhj5KkOPLC0abSE4d0pur6aSqVRBdrlW1nnHW3KFXhZV3gDzL
      eOeNH2P08U1J7svHPdxVP7xVl2/So8+PlXcAAK0NZsJCWIMGp4WZOoDtH/DpF19z585tnvyw
      w60YFP/g7q3Tbl+DBqeKmTqAyTuoco8vn2xzt6t5tN9ng+UExaeV5LMclL7q8msZFH9Gys+2
      QUZvD29adDV8s73H1a0u+7WV4EX0V6X1uYyJXyYa3T/g1Myg7QuXee+nP1/qjauyoYKVZAR4
      ncrDos5ww21IHrdC8vWabMwVSYl6U74eP8jXIy4k8BUZHBA/dyjvQ4ZrqD5TAD4kJA5ZsFN6
      lWPuz1Rr8VisxST4pBh9OD7a0Repb2r55HtfJWNy1cOVuMnHQvefUn6YODHprwzIU/9cp2t8
      JF78P60NhmgylvRf0FW909YyBIOq1hjSuB7aW/se9e+05MQEZ3IdwNiCztf/ONEdOj2M+sPR
      NWmC+FMlYLrv2IdLDMpfwJV4Vlfk48hzes5w0zNyVOVlAoGXrKE9efwM073Aja3uwnWtvANo
      77nWt5jspAQaPBwvaqFgipmCMSY8RB8l3/z3X6z8ecP+oWX3+TOMXAHv+PKbF1y/3kFMB+wh
      288Oeef9N+hm03/TlXeABg1Oiuc/bNPPLvLJJ48Ro/nmi6f0/U0K6XHNHPC7f/yW/M4dfnZz
      esr9pgM0OHP401+9iyB4F1THX/7RA4xWoDRGw4/fe5u8NRu1mw7Q4MxB66D+mjjnyDI9NAlu
      t2dXh5sO0GAuSDQ+SEzw671H/GRDQgrBrzb6q7Z2IkZrByfAutOjiq7QI2HYY9tzausAtr/P
      xx9/BK1N+vv7XI47xf98CUHxq8BJH970+jx4xbEPd0rVwZI1xQxaebEOEvMqRUUSUBPvo1Bh
      0VGlI5VN5aZ5xCYP1zpJNSp6sYY2Hi95FaB0yBittUFVmSJi1xhaUD25R+upmkEVsHH1Lsr1
      udK+xA6aS0sKiheECy2LMbr2gBjq/VPrmBIMEeoZPDiSa3R0P150IQ4JDn0qHfXs0bPYAGfI
      anGi+ubAqhfzQh3Vq6rOk9z/pGVg1g0ynOdw7yV3793lxYs93lpmUHyrzd3776B1Pncdq3ZH
      XnX5Jij+lEeA1oVLvPtuiIK/tLEBQHfjhC1s0GANcfZCeBo0WCKaDtDgXKMxgzZYCeqJA1J+
      V7+QJe4UzaCniZ7T/MMPglaLpcVTE8qH7MMaj8JLsDhbUVgPVqB0y3UlfuXlozPwIjaY0/4O
      1TMQhUcjKBwaJ+Eo/Wqewco7wIEz/PWLt2hl8zdlHSwQjRVowfIslh3ai69SrJwEzRygwdqg
      v/OCwnl2v3tErxwe0fsHB7Om/D8RZtsnuOzzzdNtbm11+eJx+P+yL7xx7/byW9Tg3KK/vY26
      eJHdx1/x/Mku1zY0yhg+/Pvf8/6f/ZLi8HMsOU8//Cfu/+rX3L1/Y+F7zrYSnLXIlPD99ktu
      dDSPD0o2lF9KULzzbi1Sa5/l8vV6VtWGZZTvXLvEP//uH7iyeZWuV6j2Bt3Msnlli9J5upvX
      UMqyf/UW3Qvtofud7kpwccCjR4+4desG3+zsc3Wry96SguJ1zKi26DL6eS+/DKz6O+SXrvLT
      X1098v6f3Lo/dH7l5r2l3X+mDpC1L/KrX/0pAA8eLOfGVdkl1LFyK8walIfmN4ST/wYrtwIp
      BT1bYhccPk81JlgFI6MeySua3HSFEJg/9/0XLF/Vs6BT4jp8h5AxutrursoQPe3xipip14zD
      /wcRC7r4l6qjtgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Life Expectancy vs. Year by Region 1820-2010' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population by Country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbsElEQVR4nO2dSW8kSZbff7b4Egu3JHOtrbvUpZ7pxkiNkaCDboK+g2666TPqKEAHCRqg
      AamX6anu6q4tVyaTZHCJzd3Mng7mEWSSzEqSEZlkptsPIIJL+KMv//9zcw97/pSICIlES9Hv
      IuiinhKRpcRYlNsQY1n7Iu3Pi5d/JwYIIdx4DO/9wutwG2IsQ7whhIVj3IZ9sYwYZ5d/JwZI
      JD4U7GXeJOL58YcnfPrF5xwdHFAYGHmDdiOy3jqumlBahWQ9Orl51+ucSCwNdZmLYDcds7f3
      kkpKnj1/yf2tFYIPKGMIzrM32GOzr7Hrv+TRVkkIAaXUQisWQkDr65+gFl3+tsSYHZ5F9ucy
      YtyGfbGMGGeXv9QZwI0P+ebxLvfvrDIdDpj0M1zQKH9E3l1nrTRMxNJXYEw8A8xer4OIoJRa
      KIZzDmsvtXm3OsbsWmiRg+69Rym1UIzbsC+WEePs8pc6A1wV7/3CBgghJAOQDLDsGGeXTxfB
      iVaTDJBoNckAiVaTDJBoNckAiVaTDJBoNckAiVaTDJBoNckAiVaTDJBoNckAiVaTDJBoNZer
      BwieH354zMOH93ixM+DuepeR0009wAauGjf1AH26RaoHSHw4XK4eoJqwt7tNbdaZHu2irEEF
      j9KW4B27+3tsrmjsWqoHWHaMVA+w3BjXqwcYHfDXx3vcXRsyrDT9jmLqNNodkXU3WO9YJmJZ
      SfUAS4+RpkMvN8bZ5S8VqVy/z3/8D/d/4h2fX3uFEombJF0EJ1pNMkCi1SQDJFpNMkCi1SQD
      JFpNMkCi1SQDJFpNMkCi1SQDJFpNMkCi1SQDJFpNMkCi1VyyP4BQ1zVZZnEuYLQiAEoEpXUz
      exNQGr3gNOhE4n1yKQP4asx3f/sLU+kirqbXs1ROocMUW6ywt7fD3RWNufN3fHa3CyzWy2nW
      Fij1tTqZGn7T67GM5W9LjNPLX25idXCY7hbrOFxtCFZTqIDSPQiBfq6pVEZX4vz1Rft7zcS/
      SJxlFeXcdIzZ8rclxiLchhhnl7+cAbTF4tm6d4/heMpKxzL1BuXGZN1VDA/xHkyWL60gZtH+
      ACKy0PK3JcbsYC1aSbVoQcxt2BfLiHF2+UsZwBZdfvazLwDoduMQp4w/Ne/Irr1CicRNku4C
      JVpNMkCi1SQDJFpNMkCi1SQDJFpNMkCi1SQDJFpNMkCi1SQDJFpNMkCi1SQDJFpNMkCi1Vxq
      MlyoJ3zzw3M2upbnu0dsrBSMZw0yuhscHe5xp6fRaz/n4Z3Ou17nRGJpXMoAOitZ7XXwboKr
      arxZoaM8qlwnuIpQTZkUlrwOeO8JISxctLBojBACzrmF1+GmY8z2wSK1EcuIcRv2xTJinF3+
      cg0ypkP29nbZ3NxkdQ3WOjkTb1D1kHx9k831HmOnKLvLqwdIDTIiqUHGcmNcq0GGLXr8+te/
      BuDBa3/Zal5X6F97lRKJmyNdBCdaTTJAotUkAyRaTTJAotUkAyRaTTJAotUkAyRaTTJAotUk
      AyRaTTJAotUkAyRaTTJAotVcuh7gLz88595qyavjmo6uGNUa7cdk3XUOD/bY7GvU6pc82kz1
      AIkPh0vXA6z1OhweHTA5nKDvbNDJA5g1xNVIXTF2lsKleoBlx0j1AMuNsUA9wB4PHz7EqUM2
      +yVjb9D1kHxji82NPhOnKDupHmDZMVI9wHJjnF1eyTJ61pzBe3/jDTJuw85eRoxkgOXGOLt8
      ughOtJpkgESrSQZItJpkgESrSQZItJpkgESrSQZItJpkgESrSQZItJpkgESrSQZItJpkgESr
      OTerSILn6ZMfGdfCZ599TplbQj3h+2ev+Pnnj/jmm7+x3i8ZOo1xI7LeBuPREaulRvUesLla
      3MR2JBLX4pwBdrafU4lF6iMeP3nKV19+gc5KOrnl5dMf2D8cUXY6WBwUPerJkMHeHmrVYPUW
      6z2b6gGWGCPVAyw3xlvrAe49/JSn//S/+P0fvuW//Lf/CsR6gO3tFzx89CkbqzWGwFQMenJM
      1rvD5w9hFDTd0qZ6gCXHSNOhlxvjUv0B+it9fvH3v5z/0RY9fvOb3wBw/97WBUtc9LtE4vZz
      YUoIIbD0KplE4hZyoQHqynG0P+D6I8ZE4sPg/F0gCWxsrPFqGMhuYo0SiffIOQNU4wG/+/3X
      DIaOGkg3NRMfM+cM4CpPf2Od/kaePiVLfPSc03jeKenkKe8n2sG5M8Dxq5f88V/+TK+3ni6C
      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
    </thumbnail>
    <thumbnail height='192' name='Population by Country 1820-1870' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population by Country 1870-1920' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population by Country 1920-1970' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dyZMkyXXef8/dIyIza+nqdbbmDAgQHIKAJBKUSeBRJtO/oJtu+hN100UX
      HSCKJiMJGUGBxGCZvbdacovF/engHpFZS09XFqq6qzv9M8uqzIjwWL/3/Pnzzz1EVZWMjC2F
      uYmdvsymNrU1Vb1SmU1xW49xW8/rdRzjps+r395dcms22X0IAWPO25b3HmvtBnt6+b5ehqsc
      Y9Myr+MYVyHau3Lt/TPf5B5c9TouZQAK/OIXv+DPvv8Rv/j119zfn/Ds6RG7B2OWtbI8fsEP
      f/CYXz9p+DeffkII4cKTDyFc+gTXy2xyI656jJvc/ipl+msWkRs7xlXKvK5jbOoArnodl6sB
      gPv3H9AtF9RNzZff1Dx+eIcpht2xcm9yj3/+/JAH9+8MVniRNXZdh3OXPiSqiohsZNmbHuMq
      ZV7HMfoHtEnt965cu/ceY8xGxn/V67h0iWZxwkn1iI/fe8DD997jybMjvrdXMW1gf1Jx8LDD
      2s1uTEbGm8alGCsifO8Hf5p+HQDw4fsPARjtxKVlVV37yWVk3DRuJAuUkfG2IBtAxlYjG0DG
      ViMbQMZWIxtAxlYjG0DGViMbQMZW41L9AKFd8s+/+5r7OwVPZy27LjDrDKabU+zcZXZ8yN0d
      g+x/zPt3xzd9zhkZ14ZLGYApRuxNRhgnNLMj2nt7jCXA6A7a1TTLOYvCUTQB7/13aoG6rtvo
      BK+iBbrKMTYp8zqO0V/zJhqXd+Xar6oFusp1XMoAunrGs2dPuX//PuVkzF7pWHiLaWcUe/f4
      /t6YRSeMd4qsBbqmMlkLdIu0QK7a4Sc/+QkAH1y4xR32L33ojIzbg9wIzthqZAPI2GpkA8jY
      amQDyNhqZAPI2GpkA8jYamQDyNhqZAPI2GpcWgv0u6+f88njD/jss9+wv1Mx6wy2nVHs3qOe
      T9kbCUwecXe3vOlzzsi4NlxaC1Q5w4snX3I8XVKUBSa0aDGmnh3z5OlT/J7B6V32xzZrga6h
      TNYC3TIt0FdffcmjR++hviZ0Y1o1mPqYYucujx8dMFfLqLJZC3RNZbIW6JZpgX76058C8Pjx
      Rxds8d6lD5yRcZuQG8EZW41sABlbjWwAGVuNbAAZW41sABlbjWwAGVuNbAAZW41sABlbjcu9
      Iil4nh8eMSkt37yY8fDOmPnavEBds2DkBMpdJlV+SUbG24NLG8DJdMHeg32ePX0GYR+CR6wj
      TL/k2YsX3N8zuDt/SvVAshboGspkLdAt0gIF3/L1l59T2I8IbUPbLmk7g/gp5eSAuxNHrY7S
      kLVA11Qma4FumRboZz/79wB89NHjC7b4+NIHzsi4TciN4IytRjaAjK1GNoCMrUY2gIytRjaA
      jK1GNoCMrUY2gIytRjaAjK1GNoCMrcalJ8b61W+/4qOH+/zLb7/mYH/EshfDTe5ycvycezsG
      c+eP+eBefklextuDS0+Mtb8zxrmSBw8fErqasXhkdEDoGkJTs6wcZZtfknddZbIY7haJ4bp6
      xvPnz2ibmmXdcf/eLsv0krzy4D73D3ZYdMJoUmYx3DWVyWK4WyaG+/GPf3zBmgfp/x67lz50
      RsbtQW4EZ2w1sgFkbDWyAWRsNbIBZGw1sgFkbDWyAWRsNbIBZGw1sgFkbDUurQX67VfPeO/e
      LoezliIsma1NjFXPT9gbGWTnPe7tVTd9zhkZ14ZLa4FGhWWyu8/RyTfUHqy2UE5oF1OePXuG
      7luc3OfOxGUt0DWUyVqgW6YF+vrrrxCBr7/+lgcP7tAEg2lOKHfu8fH795gHy3iUX5J3XWWy
      FuiWaYH+8i//EoD333//gi0eXvrAGRm3CbkRnLHVyAaQsdXIBpCx1cgGkLHVyG+zyHhnoap0
      PtB0ntmi5WTRcDKvmS9bjmcLZvUl06AZGbcRQZWuC9Rtx+HJgpNFy/G85nhWc7KoOZk3LOqW
      pvOoghHBmJhaDSEgItkAMm4vQlBa71nUHcfzmsPpkpN59OIn85rpomHRdLStJ6ji7KrvIKii
      qgQFVUAM1lls4SgLh7WWsrDZADLeHFSVtgssm5bjecOLkwXHs5rD6YLpsmW6aFg2HW0XEIke
      XERQVVQjyYMCIhhncVVJWRSUpaN0hlEBY+uZyJIJC4rumNLPKLopRXdCWc8v+Y4w3/Hk+RF3
      90Z8+fSYe7vl8JK8cucubT1nXBq03Gd3lG0qY4WgStN6juctz08WHE2XHM1qXkyXQzzedh7W
      CB5CQCF6bwQRgysLqrKgKBxlYSmdMHaBiWnYkQWj7oTKn1B0x1TtMVV9QulnOK0RFG8MHUIj
      wlIMMzE8tQWilxBdBN/y+ZffIuoxQVkacCGAcajvePr8+fCSvA8fjIb46tx+Qtioa/8qZd6V
      Y/SPZRM5wJu6dlVoOs982XI4XXKYvPjRtOZoXjNfNHQhYMTQX04ISiAS3FhDUawT3DAuYGI9
      O2bJjk4p22PK7oSyO6bqjim7GYUusNoRRGjF0IgwF8PUOGa2YGYK5rZkLoYaaBG8GJSVzOZy
      atCu4asvv+Dhg/scTZcc7BWpBphSTO7yYLeiFktlJWuBrqnMbdICqSo+KHXbcTRdcjxvOJwu
      OZ7XHKW4fNG0tF0YGppBlRB08ORlOaKqCsqyoCptInjHrizY0SlV9y1le0TVHVHOjyjDgkKX
      kLx3g7AQw8xYnhnHfFwyszvMjGOBUCt4Y+EVDkPSpzfkS9UAm8J7f20GEELIBvAaziuo0rae
      ed1yPKt5frLgeN5wPFtyPKuZLVuWTYcPAWfjOcUGZvTkiKEqC6qqpCgco9IyKZQdU7MnUyb+
      mLI9YtQeUrUvqPyMIiyAQCeWWoS5CFNbMDUFMxu990wsS6AVg8rL78VVa7IcsG8J1r34SWpw
      Hs1qXpzMmS7aIWXY+lWDs29oKjFUcc4xHjvKqqQqHaNCmNjAjlmyy5RR94yqPWTUvqCaHVL5
      OVZrPNAawwLhxBZ8YwtOihFTd4eZWGokEfx0inKT8O+qyAbwjqHzgWXTDV78cLrkaLrkcLZk
      tmip2w4fFGsEBbwPIIISQ81qUg2xeFUYxi6wY1v2ZMbIH1I2h1TdMaP6kGp2TBEWGO3wxlCL
      MBPLC+M4cQXTao+pe8BUoTUWj7wyRHkd0JQi9SF3hL2VCEFZNh3TZcOzozkvTiLBnx/Nmdct
      y8ajqikWX4UpIoayqhiXMVVYFZaRC+zYjl0zZxKmVO1RjMXbI6rlMWWYY0NDMEIrwlyVmS14
      bgumo5KpmTCzJQugeUmYElID+Kbhg0cJBA0EAghYYzDGYK3FGEkfg2BwJneE3VqEFK7M644X
      J0teTGPIcpQan/NlO3jysJYTd85RjUeUZUlZOsalMLGeXbNgjylV+5SyPWTUHVLNjmJOXBtU
      IoGXAjMxfGtLpmXJ1N5hbgrmYmjE0Opm7ZI/+D5oSAYcia0EEMVai7MWYyKxC2MorMGiFAIl
      ShkU61tM6DB+iWk6bAhYDYj3OLIBvDGEoDSdH8KVw+mSo1nMjR/NYk/nsvWEoDEep4/Howcb
      jUbslAVVVTAuhB3bsitz9jihag+pmkNGzQuqeQxThI5ODEtImZSCqSs5KfeYuyqlCmOa8DvD
      FL38EM3vgqqiaPTWGgjEvgBrLbYwGGuxFqyxWCMUKAVKiVKEgPWR1LZtscFjvcdpjOmtCvTG
      ogEhAAEBrI01grEx/ZoN4AYQkgirbjpmy3bo3ZzX3dCFP1s21I0fGp2CnGtwVuMxZVlSlZZR
      QQpVFuzqlFH7JVXzglH9nNHsiCIsCOppjWMuMBXHU1dwPCqZ2h3mpmCZGpvrBL9K38FlEGUI
      kdxeO9BIPufsEI44Y3DGUqCMUEpVbNdi2jmu7bBLjwuKU8Vqki6rR9dIbXqjMQZj07WJEKSi
      paCREZ1UNJQ0WrAMlqU31N7QtBcMidTg+eLz37FolT/6o48ZldlG1hEbT4Fm2TJbNpzMG47X
      tCn9Z9l0gwhLJHr8vrEpYihKRzkumRSOorCMCsPYeXakZlfmjPzzGKq0R4yWh5SzkyFtWCMs
      jOVYDN+6ipPRiGN3hxmGxhg8r/Di13IfAl4DQT2Kgmj0qM5hjcFawRlHKUqplhFQdC22W2Dr
      liJ4nA84wKjGmkUDqEcI0ViswTiLpAxREEcrE1oqGhmx1BG1lsy9ZeEtdVtQB0eLw6tL7ZGL
      78NL06BPvvmKRh3anvD7z7/gh9//5EZv5G2DD4G2C8zrlum84Wi2ZLpoOFk0TOeR3PNlQ+sD
      Pqy6UHrPbayhcI6iGnNnz+GcoXTCyAYmtmNHloxZUHZPY89me0zZHFPNT3Apo9KJUBNDlSPj
      +MKWTMtxjMfFUou5MKNyXY3N3nt7jY1KRbE2NSQLwVpN3ttQYBmhVBqwXYvtphRNhwueIkTP
      TeiIpu8xKX63RjClJWDwpqClopYxNZHYi1Aw945F52gSqTstXkrqczXZJe3/nAE8+uAxX/z8
      f/L3//Br/vN//S+nD9K1LJqOqjB0QZDQYYqK4D3WAMYNnSS3EapKm0KT6aIZpLNHs+UQnsyX
      LXXr6XwgpJ5oYEgTFqWjGI0ZlwWFM1QORjYwNnUkt84pu+NBcFXVJxTzGc4vsLSp215YAnNj
      ORLL1JbMRiUzu8vcuJgXR9AbyIWvhyYBT9CANbFBGeNjiTG3sTiEChip4nyH7RaYtqGoQ4zD
      A1hVUA8kz20kGouxqDN4cdQ6pjY7LGXCQkdMu4J5KFg0BY0WyVuvOjtf2g9wA5XahfHN7t4u
      f/KjT8+t/P3vPuPbZzPu3tvFexDtsG7E8+dPebBvsXc/5fGD8dCDexYvW/5d2KRM50PSf68a
      kifzhumiZrpomS4blnUMTUIIyYPGBqZzLoYl5Yi9HUvpLFUBY9MxljoKrsKUsjvGtVMqf0K5
      OKHwc1xYYoieu2EltjoyloUtmRcFcxmxtCW1yKBJedV1c4VO+oHc6lepwCE06ckdq/4RhjIE
      itBhuxrbtBQ+xt1WY+wdG70e0YAxMQPkrAFn8WJpKWlkTKzXJixCydQXzLuSOhR0FHi9xBQn
      F1zrpiKFq2x/oQH0aryzePjwEV99+ytEDEYUSVa7W1lqHDvXLKroOyz6703fVZ+04dN5Ck3S
      p2476sbH0EQAiTfeORdFVmXJzmjM3UEq2zGmYYcZIz2maCPBy+6Ecn5CEeZYX4MEWpEYe4th
      LobntmTuHPNyxMLuszSOZs1zX3Qt1+HNlegQBoKb2Ah0zmIFnBVKI1S42LD0Htu1uHaWwpKA
      DYoNAdGAqsfIynOLMdFzY+jMiEYmLEkEDyVT71j6iroraNXhsbzaNV+72ubacKEBtE3HyYtD
      zvrdoqz485/8mHEhNMEgvsFWEywf4YNibIExJnXCvKRDZCNti+e//+1nzJarrvpl61GiJxJj
      knowxty7O5Z7FsaFMjIdE6nZYU7lX1D4GUUbpbJFM6VI3fQBpQFqY5mL4dg4FtYxLwvmdp+5
      KajF0IoMjctXXcdFdLiMAaxSgx6f0ngCWBdDyxieQGFMCk0MI1VsW+PaFte1lApWAyasMiVW
      FOtsJLcVOmdpZYcFE2rGLGXMPJQsfMHCF9RavDTePnXtcrmoZFPjv4oS9irHuFANqhq4e/cO
      T2eB4sy6ohpTpKk/47p+HtCbGVnjFX79ZMaoKiknE+7vC5NCmZiY854wjwMbuhOK9piymcbY
      O+W9g5BUhEkmawtmJpJ7YQ9Y2IKGGLboq/LffwBiTRbowqozR1FkiJdjCs+K4gwUYig1hihV
      CLgu5rv7zInVED34WtxtrAFjYlgiFUuZsJQdFjpmrhXzFJa02jcmY+39UmN+84qF14JzvG0W
      h/zd3/+Sw1lHy4ribwJOAv/p7r9Q+dS5szzB+TnQ0QksEebGMBfLwhbMrWPmSpZul6VxtAid
      yHeqCKHPnmz+xFU1Zko0JEonIVmflzaCMSCiWJTSCAVChaVUxYWA9TXWt7jGx999T2Xy4MbE
      2tQYiQR3jkZGzGXCgl0WTJj5ilkomHcFnpLAK2TBW0Luy+CcAXSNZ/fuAbt3yzc/Z4p6/Mnf
      8MwWQ6ZkbndYGEcjJgYIF6UC/4COnT5LokPXu6ISSdh7aiOKlRBjbgmUQIlQYSiCYkKTUoIr
      UseudxBC+uigTRETNTSdtbS2YiljasbUMmauY2a+ZBEKal/QDRmTC1KBejOdWu8yzhlAOR4x
      LisWzZtvuHQC/2PvAwp7NhjbDOvd7hd5a+MAaxBRnEAhSiFKCVQqlBA1Jb7DNT7+T2GI0YBB
      I6FRjI3pOzEm5rgTsRs3YSkjWkbUMqLWimUoWAbHsivWOm/scM5wQRycvfe14pwBTJ9+yy/+
      8Z/Y2Tk41wi+bVjPaetA64AlhiASw2IsipOkJUlCqUqh0ID1DaZrKVrFhC7qSlSJ9FUkeX8R
      AUmElpQhcRWtjGioWDKi0TKSWh1N5+iwQ49kCBcnBk4hk/u145wB7D/6iJ/+60/5598+ffMh
      ENCGloBHRVchiAEjiiMMnnoEUTAVFBeWWN/huiSaCj42HAHTe36TZhgQQ6cSeyPtmNqNaGRM
      TUVDxSKU1MHRaOyR7NTFvLa55Ci1gdRvvkbNOI9zBnD0zRf88rMveP/Rh7EafoMDGIwIj3eU
      MYEKxXU1rutir6TvEqk1eWrSpEeCGoPH0mJp7YSlG9HKiJqKWuNnEQoadbTB0gWLirvctQpJ
      jJXxLuB8I9g4/vjjx6gqv/rVZ/z4T7//Js4LAKOBT4+/jmOCxdKJpcXRmAlzO6YhhR9aURPD
      j9ob/NC9/nIx1DoCV8sCZbz9OK8F+vATHn7wR3gfO0/eJDyO/2P/moaKJsQMyKtSfEGTICzz
      OeMSuLD/6u//989Z+JK/+tlfneoM+/rz3/LVsxPu7lcsW4PxC4rJAUeHz7i/azF3vs9HDybX
      dnJB4Zv2gKKf6SCTOuOacaEB7O3t8uTzF+eWC4HpdM7dg11KF5BiEjtr1NN4KL3ivb+2l+R5
      7zcW0N204O51HWO93E0e4zZe+7r+6yaPEUK42ACm0xldXZ9Lgz54/yOqvQfsjApaFcS32HLM
      44/eJwQw1mGTHPo65gXqkl7jts3almeGu/ljbDotyrXNC6Rao8Fii/JcxGFdycGdEjivBcrI
      eBtxoQrql7/8J7q2yZnrjHce5wxApOSn//ZHNG1+f1LGu48LOV7tHGD9MtcAGe88zhnA7PAJ
      v/ntF+w/epizjhnvPM4ZwM7BQ/7sT77HybPn+DdxRhkZrxEXhkCLkyPmmHMjwjIy3jVcaABf
      f/uMsp3zzeHJ6z6fjIzXigsN4IP3HxKqMTtvWAuUkXHTuLBb9vB4ytg6RrundT1Hz77lH3/1
      W957dMAyvSSvmNzl+PAZ9/cM5s4PrlULlJFx0zhnAIdf/JrPnz3jh//qZ+cGxO/fu89HH7Wo
      eibGI+MDQtditKP2jiprga61TF/uJo9xG6/9jWqBug6qUcX/+4e/43sf/4dTDWHtGu4/ep9u
      /oK5t5h2RnnwHo8eHFB3QjmqrvUleVkLlLVAN3mMC7VADz75Pv/xk4sHwZhizASgesA+AHfT
      mgk58Ml4G5HVDhlbjWwAGVuNbAAZW41sABlbjWwAGVuNbAAZW41sABlbjWwAGVuNjd5rMT18
      xpfPZ+xXMO+1QDt3WcyOuTMWZOcjHtx5k28UyMjYDBsZwJOnT/C1sij2KMTDaBdfzzk+PMQG
      i7Pv4Xdd1gJdU5m+3E0e4zZe+xufF+hlePTwEb/76imVVRpfYOoZxe49vvfYMPeGnbHLWqBr
      KpO1QG9IC/Rd2Llzjx/duXfBmvtctDQj47YjN4IzthrZADK2GtkAMrYa2QAythrZADK2GtkA
      MrYa2QAythrZADK2Ght1hM2PX/D7J0e8fzBhlrRA5c5dmnrOTilodZf9SZ5QMePtwUYG8OLw
      ECOWo/kSQgDrqA+f8eRZnBjL3dlhpzJZC3RNZfpyN3mM23jtt1YLtL+/x5PffIW7M6bxBlkc
      UU7u8t7BhKVYxk6yFuiaymQt0C3UAu0dPOAv/uLBBWs+3GQ3GRm3BrkRnLHVyAaQsdXIBpCx
      1cgGkLHVyAaQsdXIBpCx1cgGkLHVyAaQsdXYqCMsI+NtgqoSVNH4Az2zXDaVQoRuyc//9v/y
      wYM95p1gugXF5IDDF095uGcxBz/k8cP8rpiMy0FV8aoroq6RdV0KIYAYwRCXGWFYH5cB1mCN
      SesFAYwx2P732vJ+vxtLIX732WfUyzmdecBO6WF8gHaeUpRaYRTyS/Kus0xf7iaP8YdcuxKf
      aRg8rUIipBAJZ3rCoitCpv/WGJw1WIm/I6GBECJRVTEhYHzAaECCYjR+BMV4P/w2qtigGIjf
      k4e36f7ZZGBCNChN6zYygO/98Ec8+nBO6JbD1Ijl/Ue89949mg6KKr8k77rK3KQYrids0BCd
      FWueds1LGhGMWSeyIAjWGowIzhiciZ7XEhuUJgSs91gfcBqw6XcRFNe1OO9x3sftOg8aMCEg
      ISCqiAKaDABBBYIYVCTWGChBk/GpEoAA+PS967cBvMblffDTlyNtL1yhDTDZmQATdgE4SEtH
      jDfdUcZG0IG0qw/0pI3fBMWgiaxmILAg2DUi2560IpjkBUUV6wM2eFzyoDYEnCqu8/F7CJiu
      i9616yJpO48hetv+LILET6cBr9CGgBeh1sA0/e5U6RJpT12IRAPuQ5x4aQHReO6rTQWDGQxF
      UIzEEEhUMQqlWW1zKqzSuA8jG4ZAGZujJ6v3HlK4AKQHy1pce9bb9gSO/+36B6LHTaS0QXHE
      cKEIitWA67roZUOIoUL6TwiI98nbKuIDmEgKNQafztkngnqJXnWZiNuEED1tf4EiYAQRs6pB
      UmxuECzxWiwGA5QIE2MojMWJwYmJ14jEbfqyJoZGktb190H6/z2Z1yIEsWaIGMQYxBoQQcyq
      Fo3fY20iItkALsJ3edsYQILRcAFZ10KF3tumuNaq4kSid+09q4JDI4l9wLXdQFjxHnkJadFI
      NAWCEUKq6rsQCCK0KPOgg5ftPW3ozz95yuFakpc0YeVpDamGINUSKoxSyOOMpTAWaywWSTG8
      wRqLMxZr43dj7UBG69LvwiLpe09QpA/14nfV043gy+C1jAe47dDU0Gn7xnOK/yTdWEkNtLPE
      dc6uPAwxlu29bAGUPVk1elrrPYWSYlmPCYrpukjORF5CgBAwCqhCOg9N4UHvZT3Rw/akbde8
      r0L0ZMnTsR6f99V4iLWI1eRDNa4rESYSQx2XiOkSYQ0SyWtMDANMvH5rDcasSGts8s6Fi97V
      WsQKxtp4Lr0RvYKsV23/vA7cegNoQ0C7blW1SoxnhehxQbHIKmtghBLSRyglEdfHcMF5H7MK
      IXpYfIAUz+IDgiJBh5A0cAFhQ6AGpsMyxSsrkpo+17DWqCQZnsaPxUQSh97QDBMMziayWpfC
      nT5ej+uMJOIag7U2pgeNjfei97QuetkYBtjYRlgLGVYe9/UkAG4zbrUBOBH+WhXbNjH11fnY
      mPEe+tAghFOZA03hgV8jbR8GzBJRO1XCGiEid2UVkxPDFpOCAxPAat+4EqxCJZbCWpxxQ1gQ
      PesqHLDGJoO1iMThosYm72pMDAlcHxIkspoVSXvSXjYUeNfIeRloCglRRX0YogBU0QCKokHP
      lAHVcPvbABoCz774EowZvOtADmTNu0oiq0FQnBpMAFGwCg7D2FicjbGrMy6GBmJSGGQorFt5
      VhNDgfUwQBJZjYvVvynsYECXCQVeRxr0bcGKoP0nEILiQyB4Hfp/fFCCX1sXYh9ECKnzrP8N
      qW9Cki3E8PFlgVT0lwG57W0AI4ZPdz8cvGpsVNqUxrMDUa2JcWkfL1vnome1FuNiNkCSEV1E
      1m0PAy6Lgbg+ROKmTjFdI28kaMD7gE+/O+8jidfJrDGfP0gV+v0jBL35QfHxSLc8BDLG8Omf
      //mQ3roMtpWcZzE0JJOn7f+HkJIDvddNYcO6Bw66IrNf87q9F+47oda9bE9eLnhMl34m/TN+
      fW3gzQzg5PAZv/niCffvjJm3gvVRCzSfHnFnYpDdxzw6GF3rCW7qCd42nCdqjE+DX2lkwhpJ
      18nYE7on6UBmXSN6nw3rQ+X0Yc3bXkvt95Y+o40MYDKZ0DYNHbtU1kO5R2iXzE5OcGIpCn+t
      WiDSfvQ26HT6hhaKeiXQDQRckfNsjBqSt+09Lee8atwmnQMrooYz9+8yTrHPn29w5bdSB3Vr
      J8aanpwwHo+pnLDsSkw7o9y5x/c+diw6w2RSXKsWSH3sQpdXeKh1LzoQNZFwPVa9kKwayUki
      Z+85VwRdeVRNOpQQwpA9gtMeFfgDwoDzIcS6IvJVeFd0ULd2Yqw79x9x5/6jC9fd3WRHl4Sq
      8vTbQ/qqOqSswSmC6poX1hgaDNmAfj9xZ+nXeZJtfPNUB13KgLc0BNh23OpGcAjKF0+OsO58
      bfJdZYy5gIyZoBkX4FYbQEbGWfQdX6c6vDTm9UPSE8nQT7T2X2SQwsTwymY1aMbNYb39pT4Q
      JAztpJ6EQ2dm/zGy6jFPfTr9sh4yEDp9UERijy+ioCEmKjTED2H1fe239x1Bcg2wlVj3oiGE
      JCFgRVA4pdBcJ6yR1OMucu5zNgcQZR1JCGgg0jQSMKhH1SdieoIGfOjiutClc1ptOxCbdYL7
      tD4QfABWyt2+N9gPiYw+fRwTGT4ogVwD3Dr01XpInVfo6SzTRdX7oIvnYnKeIuZ6skoipYwR
      VHT4PZALTSSLY6w0eHzwKV3bp7sTCUM/DisQBq/rCSF+zo779Wsda374RPGhVwhxmE0UI6rg
      xaCY+BsDYlFxqLEgliAGMfG3IpC2x1jExe0lyVuQlSogG8ArcGHMGfR0lQ6nFJanq3cgSTiG
      EUvrVXrS5J/K9EuszldVvSad/KoKRwOBKA7svWkIPg0Z9Gi4wHsmT7v6H+JAnXwucIgAAAZn
      SURBVKH/IfXyhj6jttYbrFE461VRsTEdPBBSCGqiahZDwKJiwRSoGRPEgnFgbByzJjYSs7CI
      cQMpxVhiBi+O7loNwLhYE7XS3BKl5+/yeIBTDR69yDtCP8JDe/Kc8pRrjaEzKkuVlNYUWdtX
      IrzpE0j99zS4er1KX48z6ePQRLCecN5D0HOkDMEnAveETf9DGMayahrwEsJ6NR6VrSF5zTgo
      hkjONc+pYgaiKhY1BqSMnlIsKiaSM3lMFYnkTJ513WuKMahqIpp8J0Fl/f8VyPmqMQbXhVtt
      ACJQOkeMIXslaFJJGgN9wwdAVh6uJ2b0jqlaHsiVyBaUs9X34BnDWjUewpqEIBqg9yHSfr2j
      bIgr5VTV3f/uyanDcoNK7w0NKsXgGVVsJKSYM1V53FaMRcScrs6Jg77NmbEI5+7pmf9X6qR6
      h7RWm70k7+QFv//mkId3xsw7g+3mFLt3aRZzdiqB8X3uXONL8oJ6vjz6m+GGa68ePKV3CYOq
      MI5p0TiDwBkCBo0DWzQtC2Lid5FEMAfiIimT96P/jqy8oxjUCsa6U2TsPeR6rcPwT9Y852mc
      JWSPq8ihJYR4LhmXxkYGUE12qewx02WLBE9nC9qjF3w7vCRvj91rfEle65VfdI8Rk0iaCIjp
      vd9a9SwmDu5GEiHjPmTV4nvpcc5qaNa3vKjUqzQ3eu7H5pqb9WNtsu27MCfSWS3Q0D7pM1dD
      6JvSn8npRMX7KqU6jM1eS6maPrWKYOyGbYBvPv8d81rZMYZlZzDLI4rJXT64t8sSS1mY650X
      KIC58z7FRj3B74Ye5ja+JO+UsrRPDDDIr2Kj1FyQ2yfyIZIxOihj1yYS6Gd0M/36NAuEMUNZ
      Y/vpXNK8RP1sGdb0Lb+h4bwaA85L7+GVGsEffvKDl7wO74NNdpNxBehaAmDQ45/zhGe84JnP
      ilwrkgFrZDQXbGeG33EAkqRZH/pB9Kvl/RxEZ0n4svDvZXgdYrget7oR/CYx5KzPeDuIaUIk
      TQQ15NpXMzas92AOA/lZEU1kbX6b9alUzHnC9qRcJ59Z94QSq3IrcsYLAht4wkvflysQ7XXO
      8rApbrUBCLEdEAiniNHn3GXQd6QOIZPm4FnvRud0PHjWG/ZlhzhRTnu7nmz9dzNU6WZInQ79
      AKy+nGpHiNzaEGjbcasNwFrDv/urH2HNWrUKFxKsx21tA2TcTtxqAwCwqfGTkXETyMzK2Gpk
      A8jYamQDyNhqZAPI2Gps9o4w3zGd15TGs/A2vSNsn66tqaygxZhRcfle24yMN42NDKCua46P
      j+naJcFHVaC+OOb5i+dRC3TwKR8+GL1U9xEnb/KXPp4Pm2to3hU9zHq5mzzGdV37+nnG76kH
      kTQLXewSBhRRn95z4KNUMY1vEMKwzmjkybA+lQPW/ofVuuCTWLjf5+ltjUYNmoT0XzuEDQfE
      hK7hqy+/5OBgl9YL4ucU4332R5alOnZThxJwYZ580y5xMwidNtOFX0VH/rIyZwk4DIyJv85s
      0z90QNdIolEcaOgJsPaAkmxb0jiC/uEp6QEPBOjfoRXStj6NlVk94HiMSAizRpL1sgMBU9lY
      pt9Hv23aHr92vrEsoYsvveuJxuqchJBeYBf3b/oXIGnAig7bX3CT071Y3ePzz+O7HcGmk4IN
      L+HQDVxMCB7vA9ba9IA0KjOTUq/vRfXeX4sYznctv/r5f2N9lpP+gQOnLL1f1097HR9g/wD6
      hxnRk4NERFUdHuqw315b0z94GIaVaFCMrG2zetPVsOzUPggvn64lngjDcMVY+KU9wd/1iG9F
      J+Ca4Wv6riGsxLh97TB8H7Ye/vXPcDXiKUFkZSTpNyS9Ef29WieLOVV2+Jrk6WI2rAHiixgu
      ivGFKzjdVx9POz45/l+IK+OCtZsXRWDh/PJTN3v4s77gzPJI6NPDGdc2W79x/Qiywdus3+yL
      fq9fC0i4SJotq9+nNBW95MOc3nbY4dnlyeiTgvKV55TWmd4TysuIc/o4yura5ex1AKTxE/33
      gZw9b8SuXW//QjyztiyO2VjN4n2ZNuWK0GeXvwxvxzvCxFAcfICIXSNFfyOJy4FhnAD9zXZr
      y3svsXaTkTUCRV/98upTzn3VsNnNhgvGHLzCY9xGOfTrOoZeYUikbjgY6C0xAMHuf4TYy5/m
      ldSKGw7zU9l85NXmE9dmvA78f71Z+Yb7rCvgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Population by Country 1970-2010' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Real GDP vs. Year by Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Real GDP vs. Year by Country 1820-1870' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Real GDP vs. Year by Country 1870-1920' width='192'>
      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
      HFPjAlnZEhKSyCKrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Real GDP vs. Year by Country 1920-1970' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Real GDP vs. Year by Country 1970-2010' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Real GDP vs. Year by Region 1820-2010' width='192'>
      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
      mnQZkgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Region vs. Life Expectancy' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAGAElEQVR4nO3dzW8c9R3H8c887q7tdeKYkKQKtEVKBQiJnHrosVL/pB773/TUO+LAAQlV
      quCQilYBBfLAQx6xcWxvdr0ez/y+HCKgCshrN+Ng9Hm/TuvV+OvvSn5rVnOYySIiBJjKf+kF
      gF8SAcAaAcAaAcAaAcDaiQQQEerz4lLfs07rbn3PY7fFTuwMkFLqbVbXdb3NiohTu1vf89ht
      Mb4CwRoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoB
      wBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwNqxA4gIdV2nSEntojvyRuj+g/tK
      3b5u3LwjKXq/KzDwPMrj/sL+ZFOf3t3VoPlW2cpFvbw2lKLUZDrVcp2pGq/rzPJQktQdPNFH
      /7qmt6+M9dnjkTa3Jjo/rrT17YbOnjun3SbXH6++2fuHAo7q2GeAr+890t72psYXXtHqIDRa
      WtLdW7c0PLOmzc0N3bn95Y/H3vxMWdVqZ17q9dcu6dLl1zSb7mh7Z6Y7N2/o2sef9PphgOPK
      jvuc4KZpVGahecpU5ZnKslDTHGjr8baGVa5qNNbyaKCUkoqi6GXJtm1Vlsc+Wf2slJIi4lTu
      1vc8dlvs2L9R17Ukael/3hsMBrp08cIPP/PsbfxacBUI1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1k44gNB0Oj3Z
      PwE8h/IoB002H+rRLHT5/Kqag05VPVTb7Gm4tKz2YF9tG0opqSqkol5SXRWSpNTu691339Nf
      /vwnXf/8joaDZV04W6spVrX3eEPF6opisqN6eazJPOntN6+c6IcFnnWEAEJfP3io3XlS3j7R
      fH6gUS1tbjdaHi/pwktr+uaru5oPxxqlmaJa0etXfi9JenDruppmpg+v3db6xVUNylz//OB9
      rf7mDV2+tK69x5uaTfZUb2/pw0++IAC8cFlExOGHhNq2+8m70ycTDZZWNKgKdW2nJ7OZqiJT
      UY00qEullNR1naqq0t5sprKulUnan03URKXx8lApkmaTXWV5qSZJL6+v/ewGbduqLI90sloo
      paSIUFEUvczrc7e+57HbYkcI4Pginn4lOo3/ZARwOuadlt24CgRrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr
      BABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABrBABr/T2m7xn/+Pff9Wj6qJdZ
      EaEsy3qZpe8fitnTvF5363keuy12YgFcf/hf3d66eVLjgV7wFQjWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWFgYwnU4XDmma/V6W
      AV60w+8KEaF7tz/VuVf+oLosNNvZVSNp495Xuvzb30kh7UymqupcS4ORlBoVo7NaP7vyQpYH
      ntehAXTNRFuzUHvvlvaaUN5VmnatLq6d0XQ21/mVSh9d/49efeuq8phr4/6XSqOXtH71jRe1
      P/Bcsojv7xT1UxFJoUyKUNseqMgLdRHKJWV5oTyXmuZAZVUpk9R1rfK8VJ5n+ts7f+W+QDj1
      Dj0DZFmu7OkL1fVAklQ8c8xgMPjhdZ7Xkp7epQv4NeAqEKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwdeluU/1dE6PNvbmje
      7fUyL3VJedFPqxGhCCnPs17m9blb3/PYbbHvACvhIx2KmxqSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='World Child Mortality by Year 1820-2010' width='192'>
      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
      hQYWjIFPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='World Energy Consumption' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='World GDP 1820-2010' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World GDP over last 2000 years' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World Population 1820-2010' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='World Population Extreme Poverty' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World Population by Political Regime' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
